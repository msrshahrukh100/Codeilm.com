"""
Django settings for Bismillah project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('BISMILLAH_SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get('SETTINGS_DEBUG')))

ALLOWED_HOSTS = ['codeilm.com', 'www.codeilm.com', '54.218.212.69', '127.0.0.1', 'localhost']

CORS_ORIGIN_WHITELIST = (
    # remove it after all done
    'localhost:3000'
    )

# CORS_ORIGIN_ALLOW_ALL = True

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'grappelli',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sites',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    
    # third party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    'notifications',
    'background_task',
    'markdown_deux',
    'sorl.thumbnail',
    'material',
    'solo',
    'compressor',
    'guardian',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'impersonate',

    # custom apps
    'community.ramzaan',
    'community.mooc',
    'mainapp',
    'feedback',
    'usermanagement',
    'emailmanager',
    'lovecode.lovecodebackend',
    'affiliates',

    #android
    'androidapps.gymapp.gymappbackend',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'impersonate.middleware.ImpersonateMiddleware',
    # custom middlewares
    'mainapp.middleware.OnlineNowMiddleware'
]

ROOT_URLCONF = 'Bismillah.urls'


AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend',
)


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates"), os.path.join(BASE_DIR, "templates", "allauth")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Bismillah.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ['MYSQL_DATABASE_NAME'],
        'USER': os.environ['MYSQL_DATABASE_USER'],
        'PASSWORD': os.environ['MYSQL_DATABASE_PASSWORD'],
        'HOST': os.environ['MYSQL_DATABASE_HOST'],
        'PORT': os.environ['MYSQL_DATABASE_PORT'],
        'CONN_MAX_AGE': int(os.environ['CONN_MAX_AGE']),
        'OPTIONS': {'charset': 'utf8mb4'},
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, "static_cdn")

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
)

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# django all auth settings
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_CONFIRM_EMAIL_ON_GET (=False)
# ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = reverse("homepage:dashboard")
ACCOUNT_EMAIL_SUBJECT_PREFIX = "Codeilm.com"
ACCOUNT_USERNAME_REQUIRED = False
LOGIN_REDIRECT_URL = "/"
SOCIALACCOUNT_EMAIL_VERIFICATION = "none"


# Django notifications settings
NOTIFICATIONS_USE_JSONFIELD = True
MESSAGE_TAGS = {
    messages.INFO: 'green',
    50: 'critical',
}

# Django background tasks settings
BACKGROUND_TASK_RUN_ASYNC = True


if not DEBUG:
    SECURE_CONTENT_TYPE_NOSNIFF = bool(int(os.environ['SECURE_CONTENT_TYPE_NOSNIFF']))
    SECURE_BROWSER_XSS_FILTER = bool(int(os.environ['SECURE_BROWSER_XSS_FILTER']))
    SESSION_COOKIE_SECURE = bool(int(os.environ['SESSION_COOKIE_SECURE']))
    CSRF_COOKIE_SECURE = bool(int(os.environ['CSRF_COOKIE_SECURE']))
    COMPRESS_ENABLED = True
    X_FRAME_OPTIONS = os.environ['X_FRAME_OPTIONS']
else:
    COMPRESS_ENABLED = False

SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"

if not DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'file': {
                'level': os.environ['LOG_LEVEL'],
                'class': 'logging.FileHandler',
                'filename': os.environ['LOG_FILE'],
            },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
            },
            'null': {
                'class': 'logging.NullHandler',
            },
        },
        'loggers': {
            'django.security.DisallowedHost': {
                'handlers': ['null'],
                'propagate': False,
            },
            'django': {
                'handlers': ['file', 'mail_admins'],
                'level': os.environ['LOG_LEVEL'],
                'propagate': True,
            },
        },
    }

ADMINS = [('shahrukh', 'msr.concordfly@gmail.com'), ('shahrukh', 'towardslight52@gmail.com')]
SERVER_EMAIL = "towardslight52@gmail.com"

GEOIP_PATH = os.path.join(BASE_DIR, 'geo-ip-db')

if DEBUG:
    BASE_URL = "http://127.0.0.1:8000"
else:
    BASE_URL = "https://codeilm.com"


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

# email settings
if not DEBUG:
    EMAIL_HOST = 'email-smtp.us-west-2.amazonaws.com'
    EMAIL_HOST_USER = os.environ['SES_SMTP_USERNAME']
    EMAIL_HOST_PASSWORD = os.environ['SES_SMTP_PASSWORD']
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True

COMPRESS_ENABLED = True

DEFAULT_SALT = "CURbV3gO8bcBm9jyefWQ9vCQZ/A="
HASHIDS_ALPHABET = 'abcdefghijklmnpqrstuvwxyzABCDEFGHIJKLMNPQRSTUVWXYZ12345679'

DEFAULT_FROM_EMAIL = "Codeilm <towardslight52@gmail.com>"


RAMZAAN_COMMUNITY_ID = 5
BOOKS_COMMUNITY_ID = 6
MOOC_COMMUNITY_ID = 7

HASHID_FIELD_SALT = "Drz3/ay3eS+o4/Sgxxx/UBrq3Bms3Fi52NCu+kPhT5Y="


# SOCIALACCOUNT_PROVIDERS = {
#     'github': {
#         'SCOPE': [
#             'user',
#             'repo',
#             'read:org',
#         ],
#     }
# }


GITHUB_CLIENT_ID = "755685d9cb60cc87e15f"
GITHUB_CLIENT_SECRET = "d11f7aedba5186461ec384a8084ceab016e2abc7"


CODEILM_LAUNCH_DATE = "2019 07 1"

TUTORIAL_RANK = {
    "like": 0.1,
    "unlike": -0.1,
    "view": 0.02
}