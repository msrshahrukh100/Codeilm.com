{"version":3,"sources":["store/actions/repoDataActions.js","store/actions/authActions.js","store/actions/index.js","containers/RepoList/RepoList.js"],"names":["setRepoData","data","type","actionTypes","auth","dispatch","axios","get","then","response","token","user","console","log","localStorage","setItem","authToken","catch","error","__webpack_require__","d","__webpack_exports__","repoDataActions_setRepoData","authActions_auth","RepoList","state","userrepositories","links","pageNumber","loading","hasMoreRepo","fetchRepositories","defaults","headers","common","concat","getItem","_this","setState","next","this","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_9___default","dataLength","length","hasMore","loader","_components_UI_PageLayout_PageLayout__WEBPACK_IMPORTED_MODULE_10__","_components_UI_SkeletonLoaders_ListPageSkeleton__WEBPACK_IMPORTED_MODULE_11__","map","repo","_components_UI_MediaCard_MediaCard__WEBPACK_IMPORTED_MODULE_8__","key","id","onClick","props","link","name","search","default_branch","title","React","Component","withErrorHandler","withRouter","connect","actionCreators"],"mappings":"uGAEaA,EAAc,SAAEC,GAC3B,MAAO,CACLC,KAAMC,IACNF,KAAMA,aCaGG,EAAO,WAClB,OAAO,SAAAC,GACLA,EAhBK,CACLH,KAAMC,MAgBNG,IAAMC,IAAI,qBACPC,KAAK,SAAAC,GAbe,IAACC,EAAOC,EAc3BC,QAAQC,IAAIJ,EAASR,MACrBI,GAfoBK,EAeCD,EAASR,KAAKS,MAfRC,EAeeF,EAASR,KAAKU,KAd9DG,aAAaC,QAAQ,QAASL,GACvB,CACLR,KAAMC,IACNa,UAAWN,EACXC,KAAMA,OAYHM,MAAM,SAAAC,GACLN,QAAQC,IAAIK,OC3BpBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,+LCWMC,6MAEJC,MAAQ,CACNC,iBAAkB,GAClBC,MAAM,GACNC,WAAY,EACZC,SAAS,EACTC,aAAa,EACbZ,MAAO,QAGTa,kBAAoB,WAClBzB,IAAM0B,SAASC,QAAQC,OAAvB,qBAAAC,OAAwDrB,aAAasB,QAAQ,UAC7E9B,IAAMC,IAAI,qBAAuB8B,EAAKZ,MAAMG,YACzCpB,KAAK,SAAAC,GACDA,GAED4B,EAAKC,SAAS,SAAAb,GAAK,MAAK,CACtBC,iBAAkBD,EAAMC,iBAAiBS,OAAO1B,EAASR,KAAKA,MAC9D0B,MAAOlB,EAASR,KAAK0B,MACrBE,SAAS,EACTC,cAAarB,EAASR,KAAK0B,MAAMY,KACjCX,WAAYnB,EAASR,KAAK0B,MAAMY,KAAO9B,EAASR,KAAK0B,MAAMY,MAAQ,OAKxEtB,MAAM,SAAAC,GACLmB,EAAKC,SAAS,CACZpB,MAAOA,EACPW,SAAS,0FAMfW,KAAKT,qDAGE,IAAAU,EAAAD,KACP,OACEE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,WAAYN,KAAKf,MAAMC,iBAAiBqB,OACxCR,KAAMC,KAAKT,kBACXiB,QAASR,KAAKf,MAAMK,YACpBmB,OAAQP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAYR,EAAAC,EAAAC,cAACO,EAAA,EAAD,QAEvBX,KAAKf,MAAMC,iBAAiB0B,IAAI,SAAAC,GAAI,OAAIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAWC,IAAKF,EAAKG,GAAIC,QAAS,kBAAMhB,EAAKiB,MAAM1D,YAAYqD,IAAOM,KAAM,qBAAqBN,EAAKO,KAAMC,OAAQ,gBAAgBR,EAAKS,eAAgBC,MAAOV,EAAKO,iBA/C7LI,IAAMC,WA2DdC,sBAAiBC,YAAWC,YAAQ,KANtB,SAAA/D,GAC3B,MAAO,CACLL,YAAa,SAAAC,GAAI,OAAII,EAASgE,IAA2BpE,OAIlBmE,CAAoC5C,IAAYlB,IAAO","file":"static/js/14.ce6f8f27.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes'\n\nexport const setRepoData = ( data ) => {\n  return {\n    type: actionTypes.SET_REPO_DATA,\n    data: data\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport axios from '../../lovecodeaxios'\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = (token, user) => {\n  localStorage.setItem('token', token)\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    authToken: token,\n    user: user\n  }\n}\n\nexport const auth = () => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.get('/get-github-token')\n      .then(response => {\n        console.log(response.data);\n        dispatch(authSuccess(response.data.token, response.data.user))\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n}\n","export {\n  setRepoData\n} from './repoDataActions'\n\nexport {\n  auth\n} from './authActions'\n","import React from 'react'\nimport axios from '../../lovecodeaxios'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport MediaCard from '../../components/UI/MediaCard/MediaCard'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\nimport PageLayout from '../../components/UI/PageLayout/PageLayout'\nimport ListPageSkeleton from '../../components/UI/SkeletonLoaders/ListPageSkeleton'\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index'\n\nclass RepoList extends React.Component {\n\n  state = {\n    userrepositories: [],\n    links:{},\n    pageNumber: 0,\n    loading: true,\n    hasMoreRepo: false,\n    error: null\n  }\n\n  fetchRepositories = () => {\n    axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n    axios.get('/userrepositories/' + this.state.pageNumber)\n      .then(response => {\n        if(response) {\n\n          this.setState(state => ({\n            userrepositories: state.userrepositories.concat(response.data.data),\n            links: response.data.links,\n            loading: false,\n            hasMoreRepo: response.data.links.next ? true : false,\n            pageNumber: response.data.links.next ? response.data.links.next : -1\n          }))\n        }\n\n      })\n      .catch(error => {\n        this.setState({\n          error: error,\n          loading: false\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.fetchRepositories()\n  }\n\n  render() {\n    return (\n      <InfiniteScroll\n          dataLength={this.state.userrepositories.length}\n          next={this.fetchRepositories}\n          hasMore={this.state.hasMoreRepo}\n          loader={<PageLayout><ListPageSkeleton /></PageLayout>}\n      >\n      {this.state.userrepositories.map(repo => <MediaCard key={repo.id} onClick={() => this.props.setRepoData(repo)} link={'/tutorials/create/'+repo.name} search={\"?branch_name=\"+repo.default_branch} title={repo.name} />)}\n      </InfiniteScroll>\n    )\n  }\n}\n\nconst matchDispatchToProps = dispatch => {\n  return {\n    setRepoData: data => dispatch(actionCreators.setRepoData(data))\n  }\n}\n\nexport default withErrorHandler(withRouter(connect(null, matchDispatchToProps)(RepoList)), axios, \"list\")\n"],"sourceRoot":""}