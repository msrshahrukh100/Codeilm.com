{"version":3,"sources":["../node_modules/react-simplemde-editor/lib/index.js","../node_modules/easymde/src/js/easymde.js","../node_modules/codemirror/addon/edit/continuelist.js","../node_modules/easymde/src/js/codemirror/tablist.js","../node_modules/codemirror/addon/display/fullscreen.js","../node_modules/codemirror/addon/display/placeholder.js","../node_modules/codemirror/addon/selection/mark-selection.js","../node_modules/codemirror/addon/search/searchcursor.js","../node_modules/codemirror-spell-checker/src/js/spell-checker.js","../node_modules/typo-js/typo.js","../node_modules/marked/lib/marked.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js"],"names":["Object","defineProperty","exports","value","default","React","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","__webpack_require__","_objectWithoutProperties","source","excluded","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_defineProperties","props","descriptor","enumerable","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_id","generateId","concat","SimpleMDEEditor","_React$PureComponent","_this","instance","Constructor","_classCallCheck","this","state","keyChange","id","simpleMde","editorEl","editorToolbarEl","createEditor","SimpleMDE","initialOptions","element","document","getElementById","initialValue","allOptions","assign","options","eventWrapper","setState","onChange","removeEvents","removeEventListener","addEvents","elementWrapperRef","getElementsByClassName","addEventListener","codemirror","on","getCursor","_events","events","entries","forEach","_ref","_ref2","eventName","callback","getLineAndCursor","getDoc","getMdeInstance","addExtraKeys","extraKeys","setOption","setElementWrapperRef","protoProps","staticProps","subClass","superClass","create","constructor","_inherits","PureComponent","window","prevProps","_this$props","label","children","rest","createElement","ref","htmlFor","defaultProps","CodeMirror","CodeMirrorSpellChecker","marked","isMac","test","navigator","platform","anchorToExternalRegex","RegExp","bindings","toggleBold","toggleItalic","drawLink","toggleHeadingSmaller","toggleHeadingBigger","drawImage","toggleBlockquote","toggleOrderedList","toggleUnorderedList","toggleCodeBlock","togglePreview","toggleStrikethrough","toggleHeading1","toggleHeading2","toggleHeading3","cleanBlock","drawTable","drawHorizontalRule","undo","redo","toggleSideBySide","toggleFullScreen","shortcuts","getBindingName","f","isMobile","a","check","userAgent","vendor","opera","substr","fixShortcut","name","replace","createToolbarButton","enableTooltips","el","className","setAttribute","title","action","actionName","tooltip","createTooltip","noDisable","classList","add","noMobile","classNameParts","split","iconClasses","classNameIndex","classNamePart","match","tabIndex","icon","iconClassIndex","iconClass","appendChild","createSep","innerHTML","getState","cm","pos","stat","getTokenAt","type","data","text","types","ret","bold","getLine","line","quote","italic","strikethrough","code","link","image","saved_overflow","editor","getOption","body","style","overflow","wrap","getWrapperElement","previousSibling","toolbarElements","fullscreen","toolbarButton","sidebyside","nextSibling","onToggleFullScreen","_toggleBlock","blockStyles","fenceCharsToInsert","fencing_line","styles","token_state","token","base","code_type","line_num","firstTok","lastTok","getLineHandle","ch","indentedCode","fencedChars","block_start","block_end","lineCount","cur_start","cur_end","tok","is_code","start","slice","end","replaceRange","setSelection","focus","start_text","start_line","end_text","end_line","fence_chars","operation","search_from","next_line","next_line_last_tok","indentLine","no_sel_and_starting_of_line","sel_multi","start_line_sel","end_line_sel","repl_start","repl_end","_replaceSelection","insertFencingAtSelection","_toggleLine","_toggleHeading","lastChild","startPoint","endPoint","_cleanBlock","url","promptURLs","prompt","promptTexts","insertTexts","table","horizontalRule","wrapper","preview","useSideBySideListener","setTimeout","previewNormal","toolbar","toolbar_div","sideBySideRenderingFunction","previewRender","off","refresh","active","startEnd","getSelection","replaceSelection","direction","size","currHeadingLevel","search","listRegexp","whitespacesRegexp","repl","unordered-list","ordered-list","_getChar","_checkChar","char","rt","exec","start_chars","end_chars","join","_mergeProperties","property","extend","arguments","wordCount","m","count","charCodeAt","toolbarBuiltInButtons","heading","heading-smaller","heading-bigger","heading-1","heading-2","heading-3","separator-1","clean-block","separator-2","horizontal-rule","separator-3","side-by-side","separator-4","guide","separator-5","EasyMDE","parent","autoDownloadFA","autoDownloadFontAwesome","styleSheets","href","rel","getElementsByTagName","console","log","showIcons","status","plainText","markdown","parsingConfig","highlightFormatting","minHeight","autosave","unique_id","uniqueId","render","foundSavedValue","isLocalStorageAvailable","localStorage","setItem","removeItem","e","markedOptions","renderingConfig","singleLineBreaks","breaks","codeSyntaxHighlighting","hljs","highlight","highlightAuto","setOptions","htmlText","linkString","fixedLinkString","addAnchorTargetBlank","_rendered","mode","backdrop","keyMaps","event","keyCode","spellChecker","gitHubSpice","codeMirrorInstance","fromTextArea","theme","tabSize","indentUnit","indentWithTabs","lineNumbers","autofocus","lineWrapping","allowDropFileTypes","placeholder","getAttribute","styleSelectedText","configureMouse","repeat","addNew","getScrollerElement","forceSync","save","gui","createToolbar","statusbar","createStatusbar","enabled","sideBySide","createSideBySide","temp_cm","bind","easyMDE","binded","form","clearTimeout","autosaveTimeoutId","delay","loaded","getItem","setValue","d","Date","hh","getHours","getMinutes","dd","h","clearAutosavedValue","parentNode","insertBefore","syncSideBySidePreviewScroll","cScroll","pScroll","v","height","getScrollInfo","clientHeight","ratio","parseFloat","top","move","scrollHeight","scrollTop","onscroll","scrollTo","items","bar","toolbarData","toolbarGuideIcon","hideIcons","nonSeparatorIconsFollow","x","item","toolbarTips","onclick","preventDefault","open","cmWrapper","onUpdate","defaultValue","getValue","val","isPreviewActive","isSideBySideActive","isFullscreenActive","toTextArea","removeChild","module","listRE","emptyListRE","unorderedListRE","incrementRemainingMarkdownListNumbers","startLine","lookAhead","skipCount","startItem","startIndent","nextLineNumber","nextLine","nextItem","nextIndent","newNumber","parseInt","nextNumber","itemNumber","isNaN","commands","newlineAndIndentContinueMarkdownList","Pass","ranges","listSelections","replacements","head","eolState","getStateAfter","inner","innerMode","getMode","execCommand","inList","list","inQuote","cursorBeforeBullet","empty","indent","after","numbered","bullet","replaceSelections","mod","tabAndIndentMarkdownList","spaces","shiftTabAndUnindentMarkdownList","defineOption","old","Init","fullScreenRestore","pageYOffset","scrollLeft","pageXOffset","width","documentElement","setFullscreen","info","setNormal","clearPlaceholder","setPlaceholder","elt","cssText","placeHolder","createTextNode","display","lineSpace","firstChild","onBlur","isEmpty","prev","hasFocus","onCursorActivity","markedSelection","somethingSelected","clear","reset","from","to","array","coverRange","coverStart","find","coverEnd","CHUNK_SIZE","cmp","shift","pop","update","markedSelectionStyle","Pos","cmpPos","addAt","cls","endLine","atEnd","mark","markText","splice","doFold","noFold","ensureFlags","regexp","flags","current","ignoreCase","global","multiline","regexpFlags","charAt","searchRegexpForward","doc","last","lastLine","lastIndex","string","index","lastMatchIn","cutOff","newMatch","adjustPos","orig","folded","foldFunc","min","max","Math","mid","len","SearchCursor","query","caseFold","atOccurrence","clipPos","matches","reverse","fold","lines","first","firstLine","found","lastIndexOf","topString","cutFrom","endString","chunk","curLine","before","inside","startCh","maybeMultiline","String","normalize","str","toLowerCase","findNext","findPrevious","result","newText","origin","splitLines","defineExtension","defineDocExtension","cur","getSearchCursor","anchor","setSelections","Typo","defineMode","includes","apply","config","aff_loading","xhr_aff","XMLHttpRequest","onload","readyState","aff_data","responseText","num_loaded","typo","dic_data","send","dic_loading","xhr_dic","rx_word","overlay","stream","peek","word","overlayMode","__dirname","Buffer","dictionary","affData","wordsData","settings","rules","dictionaryTable","compoundRules","compoundRuleCodes","replacementTable","memoized","path","j","_len","_jlen","readDataFile","setFunc","response","_readFile","asyncLoad","then","setAffData","setup","setWordsData","_parseAFF","rule","ONLYINCOMPOUND","_parseDIC","ruleText","expressionText","character","loadedCallback","chrome","extension","dictionaryPath","getURL","load","charset","async","promise","req","Promise","resolve","reject","statusText","onerror","overrideMimeType","fs","existsSync","stats","statSync","fileDescriptor","openSync","buffer","readSync","toString","numEntries","lineParts","_removeAffixComments","definitionParts","ruleType","ruleCode","combineable","charactersToRemove","additionParts","charactersToAdd","continuationClasses","parseRuleCodes","regexToMatch","entry","remove","_removeDicComments","addWord","parts","ruleCodesArray","NEEDAFFIX","newWords","_applyRule","ii","_iilen","newWord","k","combineCode","combineRule","otherNewWords","iii","_iiilen","trim","textCodes","FLAG","continuationRule","aWord","trimmedWord","checkExact","toUpperCase","capitalizedWord","substring","hasFlag","lowercaseWord","ruleCodes","COMPOUNDMIN","flag","wordFlags","alphabet","suggest","limit","memoizedLimit","replacementEntry","correctedWord","edits1","words","rv","s","suggestions","ed1","ed2","corrections","known","weighted_corrections","sorted_corrections","sort","b","capitalization_scheme","correct","root","block","newline","fences","noop","hr","nptable","blockquote","html","def","lheading","paragraph","Lexer","tokens","links","defaults","normal","pedantic","gfm","tables","_label","_title","edit","getRegex","_tag","_comment","merge","lex","src","loose","cap","bull","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","rtrim","lang","depth","header","splitCells","align","cells","ordered","smartLists","task","checked","sanitize","pre","sanitizer","Error","inline","escape","autolink","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","fromCharCode","regex","opt","cleanUrl","prot","decodeURIComponent","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","random","infostring","escaped","langPrefix","level","raw","headerIds","headerPrefix","slug","xhtml","listitem","checkbox","tablerow","content","tablecell","baseUrl","parse","inlineText","parseText","row","cell","errMsg","silent","originalSlug","&","<",">","\"","'","tableRow","offset","curr","c","invert","suffLen","currChar","pending","message","getDefaults","parser","lexer","inlineLexer","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","easeOut","CircularProgress","forwardRef","classes","_props$color","color","_props$disableShrink","disableShrink","_props$size","_props$thickness","thickness","_props$value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","indeterminate","static","role","svg","viewBox","SIZE","circle","circleIndeterminate","circleStatic","circleDisableShrink","cx","cy","r","fill","strokeWidth","__webpack_exports__","lineHeight","transition","transitions","animation","animationName","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","@keyframes mui-progress-circular-rotate","100%","@keyframes mui-progress-circular-dash","0%","50%","flip"],"mappings":"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","file":"static/js/10.52105bed.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar noop = function noop() {};\n\nvar _id = 0;\n\nvar generateId = function generateId() {\n  return \"simplemde-editor-\".concat(++_id);\n};\n\nvar SimpleMDEEditor =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SimpleMDEEditor, _React$PureComponent);\n\n  function SimpleMDEEditor(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleMDEEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleMDEEditor).call(this, props));\n    _this.state = {\n      keyChange: false,\n      value: _this.props.value || \"\"\n    };\n    _this.id = _this.props.id ? _this.props.id : generateId();\n    _this.simpleMde = null;\n    _this.editorEl = null;\n    _this.editorToolbarEl = null;\n\n    _this.createEditor = function () {\n      var SimpleMDE = require(\"easymde\");\n\n      var initialOptions = {\n        element: document.getElementById(_this.id),\n        initialValue: _this.props.value\n      };\n      var allOptions = Object.assign({}, initialOptions, _this.props.options);\n      _this.simpleMde = new SimpleMDE(allOptions);\n    };\n\n    _this.eventWrapper = function () {\n      _this.setState({\n        keyChange: true,\n        value: _this.simpleMde.value()\n      });\n\n      _this.props.onChange(_this.simpleMde.value());\n    };\n\n    _this.removeEvents = function () {\n      if (_this.editorEl && _this.editorToolbarEl) {\n        _this.editorEl.removeEventListener(\"keyup\", _this.eventWrapper);\n\n        _this.editorEl.removeEventListener(\"paste\", _this.eventWrapper);\n\n        _this.editorToolbarEl.removeEventListener(\"click\", _this.eventWrapper);\n      }\n    };\n\n    _this.addEvents = function () {\n      if (_this.elementWrapperRef && _this.simpleMde) {\n        _this.editorEl = _this.elementWrapperRef;\n        _this.editorToolbarEl = _this.elementWrapperRef.getElementsByClassName(\"editor-toolbar\")[0];\n\n        _this.editorEl.addEventListener(\"keyup\", _this.eventWrapper);\n\n        _this.editorEl.addEventListener(\"paste\", _this.eventWrapper);\n\n        _this.editorToolbarEl && _this.editorToolbarEl.addEventListener(\"click\", _this.eventWrapper);\n\n        _this.simpleMde.codemirror.on(\"cursorActivity\", _this.getCursor);\n\n        var _events = _this.props.events; // Handle custom events\n\n        _events && Object.entries(_events).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              eventName = _ref2[0],\n              callback = _ref2[1];\n\n          if (eventName && callback) {\n            _this.simpleMde && _this.simpleMde.codemirror.on(eventName, callback);\n          }\n        });\n      }\n    };\n\n    _this.getCursor = function () {\n      // https://codemirror.net/doc/manual.html#api_selection\n      if (_this.props.getLineAndCursor) {\n        _this.props.getLineAndCursor(_this.simpleMde.codemirror.getDoc().getCursor());\n      }\n    };\n\n    _this.getMdeInstance = function () {\n      if (_this.props.getMdeInstance) {\n        _this.props.getMdeInstance(_this.simpleMde);\n      }\n    };\n\n    _this.addExtraKeys = function () {\n      // https://codemirror.net/doc/manual.html#option_extraKeys\n      if (_this.props.extraKeys) {\n        _this.simpleMde.codemirror.setOption(\"extraKeys\", _this.props.extraKeys);\n      }\n    };\n\n    _this.elementWrapperRef = null;\n\n    _this.setElementWrapperRef = function (element) {\n      _this.elementWrapperRef = element;\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleMDEEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof window !== undefined) {\n        this.createEditor();\n        this.addEvents();\n        this.addExtraKeys();\n        this.getCursor();\n        this.getMdeInstance();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.state.keyChange && this.props.value !== this.state.value && // This is somehow fixes moving cursor for controlled case\n      this.props.value !== prevProps.value // This one fixes no value change for uncontrolled input. If it's uncontrolled prevProps will be the same\n      ) {\n          this.simpleMde.value(this.props.value || \"\");\n        }\n\n      this.setState({\n        keyChange: false\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.editorEl !== null && this.editorEl !== undefined) {\n        this.removeEvents();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          events = _this$props.events,\n          value = _this$props.value,\n          options = _this$props.options,\n          children = _this$props.children,\n          extraKeys = _this$props.extraKeys,\n          getLineAndCursor = _this$props.getLineAndCursor,\n          getMdeInstance = _this$props.getMdeInstance,\n          label = _this$props.label,\n          onChange = _this$props.onChange,\n          id = _this$props.id,\n          rest = _objectWithoutProperties(_this$props, [\"events\", \"value\", \"options\", \"children\", \"extraKeys\", \"getLineAndCursor\", \"getMdeInstance\", \"label\", \"onChange\", \"id\"]);\n\n      return React.createElement(\"div\", Object.assign({\n        id: \"\".concat(this.id, \"-wrapper\")\n      }, rest, {\n        ref: this.setElementWrapperRef\n      }), label && React.createElement(\"label\", {\n        htmlFor: this.id\n      }, \" \", label, \" \"), React.createElement(\"textarea\", {\n        id: this.id\n      }));\n    }\n  }]);\n\n  return SimpleMDEEditor;\n}(React.PureComponent);\n\nexports.default = SimpleMDEEditor;\nSimpleMDEEditor.defaultProps = {\n  events: {},\n  onChange: noop,\n  options: {}\n};","/*global require,module*/\n'use strict';\n\nvar CodeMirror = require('codemirror');\n\nrequire('codemirror/addon/edit/continuelist.js');\n\nrequire('./codemirror/tablist');\n\nrequire('codemirror/addon/display/fullscreen.js');\n\nrequire('codemirror/mode/markdown/markdown.js');\n\nrequire('codemirror/addon/mode/overlay.js');\n\nrequire('codemirror/addon/display/placeholder.js');\n\nrequire('codemirror/addon/selection/mark-selection.js');\n\nrequire('codemirror/addon/search/searchcursor.js');\n\nrequire('codemirror/mode/gfm/gfm.js');\n\nrequire('codemirror/mode/xml/xml.js');\n\nvar CodeMirrorSpellChecker = require('codemirror-spell-checker');\n\nvar marked = require('marked'); // Some variables\n\n\nvar isMac = /Mac/.test(navigator.platform);\nvar anchorToExternalRegex = new RegExp(/(<a.*?https?:\\/\\/.*?[^a]>)+?/g); // Mapping of actions that can be bound to keyboard shortcuts or toolbar buttons\n\nvar bindings = {\n  'toggleBold': toggleBold,\n  'toggleItalic': toggleItalic,\n  'drawLink': drawLink,\n  'toggleHeadingSmaller': toggleHeadingSmaller,\n  'toggleHeadingBigger': toggleHeadingBigger,\n  'drawImage': drawImage,\n  'toggleBlockquote': toggleBlockquote,\n  'toggleOrderedList': toggleOrderedList,\n  'toggleUnorderedList': toggleUnorderedList,\n  'toggleCodeBlock': toggleCodeBlock,\n  'togglePreview': togglePreview,\n  'toggleStrikethrough': toggleStrikethrough,\n  'toggleHeading1': toggleHeading1,\n  'toggleHeading2': toggleHeading2,\n  'toggleHeading3': toggleHeading3,\n  'cleanBlock': cleanBlock,\n  'drawTable': drawTable,\n  'drawHorizontalRule': drawHorizontalRule,\n  'undo': undo,\n  'redo': redo,\n  'toggleSideBySide': toggleSideBySide,\n  'toggleFullScreen': toggleFullScreen\n};\nvar shortcuts = {\n  'toggleBold': 'Cmd-B',\n  'toggleItalic': 'Cmd-I',\n  'drawLink': 'Cmd-K',\n  'toggleHeadingSmaller': 'Cmd-H',\n  'toggleHeadingBigger': 'Shift-Cmd-H',\n  'cleanBlock': 'Cmd-E',\n  'drawImage': 'Cmd-Alt-I',\n  'toggleBlockquote': 'Cmd-\\'',\n  'toggleOrderedList': 'Cmd-Alt-L',\n  'toggleUnorderedList': 'Cmd-L',\n  'toggleCodeBlock': 'Cmd-Alt-C',\n  'togglePreview': 'Cmd-P',\n  'toggleSideBySide': 'F9',\n  'toggleFullScreen': 'F11'\n};\n\nvar getBindingName = function getBindingName(f) {\n  for (var key in bindings) {\n    if (bindings[key] === f) {\n      return key;\n    }\n  }\n\n  return null;\n};\n\nvar isMobile = function isMobile() {\n  var check = false;\n\n  (function (a) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n\n  return check;\n};\n/**\n * Modify HTML to add 'target=\"_blank\"' to links so they open in new tabs by default.\n * @param {string} htmlText - HTML to be modified.\n * @return {string} The modified HTML text.\n */\n\n\nfunction addAnchorTargetBlank(htmlText) {\n  var match;\n\n  while ((match = anchorToExternalRegex.exec(htmlText)) !== null) {\n    // With only one capture group in the RegExp, we can safely take the first index from the match.\n    var linkString = match[0];\n\n    if (linkString.indexOf('target=') === -1) {\n      var fixedLinkString = linkString.replace(/>$/, ' target=\"_blank\">');\n      htmlText = htmlText.replace(linkString, fixedLinkString);\n    }\n  }\n\n  return htmlText;\n}\n/**\n * Fix shortcut. Mac use Command, others use Ctrl.\n */\n\n\nfunction fixShortcut(name) {\n  if (isMac) {\n    name = name.replace('Ctrl', 'Cmd');\n  } else {\n    name = name.replace('Cmd', 'Ctrl');\n  }\n\n  return name;\n}\n/**\n * Create button element for toolbar.\n */\n\n\nfunction createToolbarButton(options, enableTooltips, shortcuts) {\n  options = options || {};\n  var el = document.createElement('button');\n  el.className = options.name;\n  el.setAttribute('type', 'button');\n  enableTooltips = enableTooltips == undefined ? true : enableTooltips;\n\n  if (options.title && enableTooltips) {\n    el.title = createTooltip(options.title, options.action, shortcuts);\n\n    if (isMac) {\n      el.title = el.title.replace('Ctrl', '⌘');\n      el.title = el.title.replace('Alt', '⌥');\n    }\n  }\n\n  if (options.noDisable) {\n    el.classList.add('no-disable');\n  }\n\n  if (options.noMobile) {\n    el.classList.add('no-mobile');\n  } // Provide backwards compatibility with simple-markdown-editor by adding custom classes to the button.\n\n\n  var classNameParts = options.className.split(' ');\n  var iconClasses = [];\n\n  for (var classNameIndex = 0; classNameIndex < classNameParts.length; classNameIndex++) {\n    var classNamePart = classNameParts[classNameIndex]; // Split icon classes from the button.\n    // Regex will detect \"fa\", \"fas\", \"fa-something\" and \"fa-some-icon-1\", but not \"fanfare\".\n\n    if (classNamePart.match(/^fa([srlb]|(-[\\w-]*)|$)/)) {\n      iconClasses.push(classNamePart);\n    } else {\n      el.classList.add(classNamePart);\n    }\n  }\n\n  el.tabIndex = -1; // Create icon element and append as a child to the button\n\n  var icon = document.createElement('i');\n\n  for (var iconClassIndex = 0; iconClassIndex < iconClasses.length; iconClassIndex++) {\n    var iconClass = iconClasses[iconClassIndex];\n    icon.classList.add(iconClass);\n  }\n\n  el.appendChild(icon);\n  return el;\n}\n\nfunction createSep() {\n  var el = document.createElement('i');\n  el.className = 'separator';\n  el.innerHTML = '|';\n  return el;\n}\n\nfunction createTooltip(title, action, shortcuts) {\n  var actionName;\n  var tooltip = title;\n\n  if (action) {\n    actionName = getBindingName(action);\n\n    if (shortcuts[actionName]) {\n      tooltip += ' (' + fixShortcut(shortcuts[actionName]) + ')';\n    }\n  }\n\n  return tooltip;\n}\n/**\n * The state of CodeMirror at the given position.\n */\n\n\nfunction getState(cm, pos) {\n  pos = pos || cm.getCursor('start');\n  var stat = cm.getTokenAt(pos);\n  if (!stat.type) return {};\n  var types = stat.type.split(' ');\n  var ret = {},\n      data,\n      text;\n\n  for (var i = 0; i < types.length; i++) {\n    data = types[i];\n\n    if (data === 'strong') {\n      ret.bold = true;\n    } else if (data === 'variable-2') {\n      text = cm.getLine(pos.line);\n\n      if (/^\\s*\\d+\\.\\s/.test(text)) {\n        ret['ordered-list'] = true;\n      } else {\n        ret['unordered-list'] = true;\n      }\n    } else if (data === 'atom') {\n      ret.quote = true;\n    } else if (data === 'em') {\n      ret.italic = true;\n    } else if (data === 'quote') {\n      ret.quote = true;\n    } else if (data === 'strikethrough') {\n      ret.strikethrough = true;\n    } else if (data === 'comment') {\n      ret.code = true;\n    } else if (data === 'link') {\n      ret.link = true;\n    } else if (data === 'tag') {\n      ret.image = true;\n    } else if (data.match(/^header(-[1-6])?$/)) {\n      ret[data.replace('header', 'heading')] = true;\n    }\n  }\n\n  return ret;\n} // Saved overflow setting\n\n\nvar saved_overflow = '';\n/**\n * Toggle full screen of the editor.\n */\n\nfunction toggleFullScreen(editor) {\n  // Set fullscreen\n  var cm = editor.codemirror;\n  cm.setOption('fullScreen', !cm.getOption('fullScreen')); // Prevent scrolling on body during fullscreen active\n\n  if (cm.getOption('fullScreen')) {\n    saved_overflow = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = saved_overflow;\n  } // Update toolbar class\n\n\n  var wrap = cm.getWrapperElement();\n\n  if (!/fullscreen/.test(wrap.previousSibling.className)) {\n    wrap.previousSibling.className += ' fullscreen';\n  } else {\n    wrap.previousSibling.className = wrap.previousSibling.className.replace(/\\s*fullscreen\\b/, '');\n  } // Update toolbar button\n\n\n  if (editor.toolbarElements && editor.toolbarElements.fullscreen) {\n    var toolbarButton = editor.toolbarElements.fullscreen;\n\n    if (!/active/.test(toolbarButton.className)) {\n      toolbarButton.className += ' active';\n    } else {\n      toolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, '');\n    }\n  } // Hide side by side if needed\n\n\n  var sidebyside = cm.getWrapperElement().nextSibling;\n  if (/editor-preview-active-side/.test(sidebyside.className)) toggleSideBySide(editor);\n\n  if (editor.options.onToggleFullScreen) {\n    editor.options.onToggleFullScreen(cm.getOption('fullScreen') || false);\n  }\n}\n/**\n * Action for toggling bold.\n */\n\n\nfunction toggleBold(editor) {\n  _toggleBlock(editor, 'bold', editor.options.blockStyles.bold);\n}\n/**\n * Action for toggling italic.\n */\n\n\nfunction toggleItalic(editor) {\n  _toggleBlock(editor, 'italic', editor.options.blockStyles.italic);\n}\n/**\n * Action for toggling strikethrough.\n */\n\n\nfunction toggleStrikethrough(editor) {\n  _toggleBlock(editor, 'strikethrough', '~~');\n}\n/**\n * Action for toggling code block.\n */\n\n\nfunction toggleCodeBlock(editor) {\n  var fenceCharsToInsert = editor.options.blockStyles.code;\n\n  function fencing_line(line) {\n    /* return true, if this is a ``` or ~~~ line */\n    if (typeof line !== 'object') {\n      throw 'fencing_line() takes a \\'line\\' object (not a line number, or line text).  Got: ' + typeof line + ': ' + line;\n    }\n\n    return line.styles && line.styles[2] && line.styles[2].indexOf('formatting-code-block') !== -1;\n  }\n\n  function token_state(token) {\n    // base goes an extra level deep when mode backdrops are used, e.g. spellchecker on\n    return token.state.base.base || token.state.base;\n  }\n\n  function code_type(cm, line_num, line, firstTok, lastTok) {\n    /*\n     * Return \"single\", \"indented\", \"fenced\" or false\n     *\n     * cm and line_num are required.  Others are optional for efficiency\n     *   To check in the middle of a line, pass in firstTok yourself.\n     */\n    line = line || cm.getLineHandle(line_num);\n    firstTok = firstTok || cm.getTokenAt({\n      line: line_num,\n      ch: 1\n    });\n    lastTok = lastTok || !!line.text && cm.getTokenAt({\n      line: line_num,\n      ch: line.text.length - 1\n    });\n    var types = firstTok.type ? firstTok.type.split(' ') : [];\n\n    if (lastTok && token_state(lastTok).indentedCode) {\n      // have to check last char, since first chars of first line aren\"t marked as indented\n      return 'indented';\n    } else if (types.indexOf('comment') === -1) {\n      // has to be after \"indented\" check, since first chars of first indented line aren\"t marked as such\n      return false;\n    } else if (token_state(firstTok).fencedChars || token_state(lastTok).fencedChars || fencing_line(line)) {\n      return 'fenced';\n    } else {\n      return 'single';\n    }\n  }\n\n  function insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert) {\n    var start_line_sel = cur_start.line + 1,\n        end_line_sel = cur_end.line + 1,\n        sel_multi = cur_start.line !== cur_end.line,\n        repl_start = fenceCharsToInsert + '\\n',\n        repl_end = '\\n' + fenceCharsToInsert;\n\n    if (sel_multi) {\n      end_line_sel++;\n    } // handle last char including \\n or not\n\n\n    if (sel_multi && cur_end.ch === 0) {\n      repl_end = fenceCharsToInsert + '\\n';\n      end_line_sel--;\n    }\n\n    _replaceSelection(cm, false, [repl_start, repl_end]);\n\n    cm.setSelection({\n      line: start_line_sel,\n      ch: 0\n    }, {\n      line: end_line_sel,\n      ch: 0\n    });\n  }\n\n  var cm = editor.codemirror,\n      cur_start = cm.getCursor('start'),\n      cur_end = cm.getCursor('end'),\n      tok = cm.getTokenAt({\n    line: cur_start.line,\n    ch: cur_start.ch || 1\n  }),\n      // avoid ch 0 which is a cursor pos but not token\n  line = cm.getLineHandle(cur_start.line),\n      is_code = code_type(cm, cur_start.line, line, tok);\n  var block_start, block_end, lineCount;\n\n  if (is_code === 'single') {\n    // similar to some EasyMDE _toggleBlock logic\n    var start = line.text.slice(0, cur_start.ch).replace('`', ''),\n        end = line.text.slice(cur_start.ch).replace('`', '');\n    cm.replaceRange(start + end, {\n      line: cur_start.line,\n      ch: 0\n    }, {\n      line: cur_start.line,\n      ch: 99999999999999\n    });\n    cur_start.ch--;\n\n    if (cur_start !== cur_end) {\n      cur_end.ch--;\n    }\n\n    cm.setSelection(cur_start, cur_end);\n    cm.focus();\n  } else if (is_code === 'fenced') {\n    if (cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n      // use selection\n      // find the fenced line so we know what type it is (tilde, backticks, number of them)\n      for (block_start = cur_start.line; block_start >= 0; block_start--) {\n        line = cm.getLineHandle(block_start);\n\n        if (fencing_line(line)) {\n          break;\n        }\n      }\n\n      var fencedTok = cm.getTokenAt({\n        line: block_start,\n        ch: 1\n      });\n      var fence_chars = token_state(fencedTok).fencedChars;\n      var start_text, start_line;\n      var end_text, end_line; // check for selection going up against fenced lines, in which case we don't want to add more fencing\n\n      if (fencing_line(cm.getLineHandle(cur_start.line))) {\n        start_text = '';\n        start_line = cur_start.line;\n      } else if (fencing_line(cm.getLineHandle(cur_start.line - 1))) {\n        start_text = '';\n        start_line = cur_start.line - 1;\n      } else {\n        start_text = fence_chars + '\\n';\n        start_line = cur_start.line;\n      }\n\n      if (fencing_line(cm.getLineHandle(cur_end.line))) {\n        end_text = '';\n        end_line = cur_end.line;\n\n        if (cur_end.ch === 0) {\n          end_line += 1;\n        }\n      } else if (cur_end.ch !== 0 && fencing_line(cm.getLineHandle(cur_end.line + 1))) {\n        end_text = '';\n        end_line = cur_end.line + 1;\n      } else {\n        end_text = fence_chars + '\\n';\n        end_line = cur_end.line + 1;\n      }\n\n      if (cur_end.ch === 0) {\n        // full last line selected, putting cursor at beginning of next\n        end_line -= 1;\n      }\n\n      cm.operation(function () {\n        // end line first, so that line numbers don't change\n        cm.replaceRange(end_text, {\n          line: end_line,\n          ch: 0\n        }, {\n          line: end_line + (end_text ? 0 : 1),\n          ch: 0\n        });\n        cm.replaceRange(start_text, {\n          line: start_line,\n          ch: 0\n        }, {\n          line: start_line + (start_text ? 0 : 1),\n          ch: 0\n        });\n      });\n      cm.setSelection({\n        line: start_line + (start_text ? 1 : 0),\n        ch: 0\n      }, {\n        line: end_line + (start_text ? 1 : -1),\n        ch: 0\n      });\n      cm.focus();\n    } else {\n      // no selection, search for ends of this fenced block\n      var search_from = cur_start.line;\n\n      if (fencing_line(cm.getLineHandle(cur_start.line))) {\n        // gets a little tricky if cursor is right on a fenced line\n        if (code_type(cm, cur_start.line + 1) === 'fenced') {\n          block_start = cur_start.line;\n          search_from = cur_start.line + 1; // for searching for \"end\"\n        } else {\n          block_end = cur_start.line;\n          search_from = cur_start.line - 1; // for searching for \"start\"\n        }\n      }\n\n      if (block_start === undefined) {\n        for (block_start = search_from; block_start >= 0; block_start--) {\n          line = cm.getLineHandle(block_start);\n\n          if (fencing_line(line)) {\n            break;\n          }\n        }\n      }\n\n      if (block_end === undefined) {\n        lineCount = cm.lineCount();\n\n        for (block_end = search_from; block_end < lineCount; block_end++) {\n          line = cm.getLineHandle(block_end);\n\n          if (fencing_line(line)) {\n            break;\n          }\n        }\n      }\n\n      cm.operation(function () {\n        cm.replaceRange('', {\n          line: block_start,\n          ch: 0\n        }, {\n          line: block_start + 1,\n          ch: 0\n        });\n        cm.replaceRange('', {\n          line: block_end - 1,\n          ch: 0\n        }, {\n          line: block_end,\n          ch: 0\n        });\n      });\n      cm.focus();\n    }\n  } else if (is_code === 'indented') {\n    if (cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n      // use selection\n      block_start = cur_start.line;\n      block_end = cur_end.line;\n\n      if (cur_end.ch === 0) {\n        block_end--;\n      }\n    } else {\n      // no selection, search for ends of this indented block\n      for (block_start = cur_start.line; block_start >= 0; block_start--) {\n        line = cm.getLineHandle(block_start);\n\n        if (line.text.match(/^\\s*$/)) {\n          // empty or all whitespace - keep going\n          continue;\n        } else {\n          if (code_type(cm, block_start, line) !== 'indented') {\n            block_start += 1;\n            break;\n          }\n        }\n      }\n\n      lineCount = cm.lineCount();\n\n      for (block_end = cur_start.line; block_end < lineCount; block_end++) {\n        line = cm.getLineHandle(block_end);\n\n        if (line.text.match(/^\\s*$/)) {\n          // empty or all whitespace - keep going\n          continue;\n        } else {\n          if (code_type(cm, block_end, line) !== 'indented') {\n            block_end -= 1;\n            break;\n          }\n        }\n      }\n    } // if we are going to un-indent based on a selected set of lines, and the next line is indented too, we need to\n    // insert a blank line so that the next line(s) continue to be indented code\n\n\n    var next_line = cm.getLineHandle(block_end + 1),\n        next_line_last_tok = next_line && cm.getTokenAt({\n      line: block_end + 1,\n      ch: next_line.text.length - 1\n    }),\n        next_line_indented = next_line_last_tok && token_state(next_line_last_tok).indentedCode;\n\n    if (next_line_indented) {\n      cm.replaceRange('\\n', {\n        line: block_end + 1,\n        ch: 0\n      });\n    }\n\n    for (var i = block_start; i <= block_end; i++) {\n      cm.indentLine(i, 'subtract'); // TODO: this doesn't get tracked in the history, so can't be undone :(\n    }\n\n    cm.focus();\n  } else {\n    // insert code formatting\n    var no_sel_and_starting_of_line = cur_start.line === cur_end.line && cur_start.ch === cur_end.ch && cur_start.ch === 0;\n    var sel_multi = cur_start.line !== cur_end.line;\n\n    if (no_sel_and_starting_of_line || sel_multi) {\n      insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert);\n    } else {\n      _replaceSelection(cm, false, ['`', '`']);\n    }\n  }\n}\n/**\n * Action for toggling blockquote.\n */\n\n\nfunction toggleBlockquote(editor) {\n  var cm = editor.codemirror;\n\n  _toggleLine(cm, 'quote');\n}\n/**\n * Action for toggling heading size: normal -> h1 -> h2 -> h3 -> h4 -> h5 -> h6 -> normal\n */\n\n\nfunction toggleHeadingSmaller(editor) {\n  var cm = editor.codemirror;\n\n  _toggleHeading(cm, 'smaller');\n}\n/**\n * Action for toggling heading size: normal -> h6 -> h5 -> h4 -> h3 -> h2 -> h1 -> normal\n */\n\n\nfunction toggleHeadingBigger(editor) {\n  var cm = editor.codemirror;\n\n  _toggleHeading(cm, 'bigger');\n}\n/**\n * Action for toggling heading size 1\n */\n\n\nfunction toggleHeading1(editor) {\n  var cm = editor.codemirror;\n\n  _toggleHeading(cm, undefined, 1);\n}\n/**\n * Action for toggling heading size 2\n */\n\n\nfunction toggleHeading2(editor) {\n  var cm = editor.codemirror;\n\n  _toggleHeading(cm, undefined, 2);\n}\n/**\n * Action for toggling heading size 3\n */\n\n\nfunction toggleHeading3(editor) {\n  var cm = editor.codemirror;\n\n  _toggleHeading(cm, undefined, 3);\n}\n/**\n * Action for toggling ul.\n */\n\n\nfunction toggleUnorderedList(editor) {\n  var cm = editor.codemirror;\n\n  _toggleLine(cm, 'unordered-list');\n}\n/**\n * Action for toggling ol.\n */\n\n\nfunction toggleOrderedList(editor) {\n  var cm = editor.codemirror;\n\n  _toggleLine(cm, 'ordered-list');\n}\n/**\n * Action for clean block (remove headline, list, blockquote code, markers)\n */\n\n\nfunction cleanBlock(editor) {\n  var cm = editor.codemirror;\n\n  _cleanBlock(cm);\n}\n/**\n * Action for drawing a link.\n */\n\n\nfunction drawLink(editor) {\n  var cm = editor.codemirror;\n  var stat = getState(cm);\n  var options = editor.options;\n  var url = 'https://';\n\n  if (options.promptURLs) {\n    url = prompt(options.promptTexts.link, 'https://');\n\n    if (!url) {\n      return false;\n    }\n  }\n\n  _replaceSelection(cm, stat.link, options.insertTexts.link, url);\n}\n/**\n * Action for drawing an img.\n */\n\n\nfunction drawImage(editor) {\n  var cm = editor.codemirror;\n  var stat = getState(cm);\n  var options = editor.options;\n  var url = 'https://';\n\n  if (options.promptURLs) {\n    url = prompt(options.promptTexts.image, 'https://');\n\n    if (!url) {\n      return false;\n    }\n  }\n\n  _replaceSelection(cm, stat.image, options.insertTexts.image, url);\n}\n/**\n * Action for drawing a table.\n */\n\n\nfunction drawTable(editor) {\n  var cm = editor.codemirror;\n  var stat = getState(cm);\n  var options = editor.options;\n\n  _replaceSelection(cm, stat.table, options.insertTexts.table);\n}\n/**\n * Action for drawing a horizontal rule.\n */\n\n\nfunction drawHorizontalRule(editor) {\n  var cm = editor.codemirror;\n  var stat = getState(cm);\n  var options = editor.options;\n\n  _replaceSelection(cm, stat.image, options.insertTexts.horizontalRule);\n}\n/**\n * Undo action.\n */\n\n\nfunction undo(editor) {\n  var cm = editor.codemirror;\n  cm.undo();\n  cm.focus();\n}\n/**\n * Redo action.\n */\n\n\nfunction redo(editor) {\n  var cm = editor.codemirror;\n  cm.redo();\n  cm.focus();\n}\n/**\n * Toggle side by side preview\n */\n\n\nfunction toggleSideBySide(editor) {\n  var cm = editor.codemirror;\n  var wrapper = cm.getWrapperElement();\n  var preview = wrapper.nextSibling;\n  var toolbarButton = editor.toolbarElements && editor.toolbarElements['side-by-side'];\n  var useSideBySideListener = false;\n\n  if (/editor-preview-active-side/.test(preview.className)) {\n    preview.className = preview.className.replace(/\\s*editor-preview-active-side\\s*/g, '');\n    if (toolbarButton) toolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, '');\n    wrapper.className = wrapper.className.replace(/\\s*CodeMirror-sided\\s*/g, ' ');\n  } else {\n    // When the preview button is clicked for the first time,\n    // give some time for the transition from editor.css to fire and the view to slide from right to left,\n    // instead of just appearing.\n    setTimeout(function () {\n      if (!cm.getOption('fullScreen')) toggleFullScreen(editor);\n      preview.className += ' editor-preview-active-side';\n    }, 1);\n    if (toolbarButton) toolbarButton.className += ' active';\n    wrapper.className += ' CodeMirror-sided';\n    useSideBySideListener = true;\n  } // Hide normal preview if active\n\n\n  var previewNormal = wrapper.lastChild;\n\n  if (/editor-preview-active/.test(previewNormal.className)) {\n    previewNormal.className = previewNormal.className.replace(/\\s*editor-preview-active\\s*/g, '');\n    var toolbar = editor.toolbarElements.preview;\n    var toolbar_div = wrapper.previousSibling;\n    toolbar.className = toolbar.className.replace(/\\s*active\\s*/g, '');\n    toolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, '');\n  }\n\n  var sideBySideRenderingFunction = function sideBySideRenderingFunction() {\n    preview.innerHTML = editor.options.previewRender(editor.value(), preview);\n  };\n\n  if (!cm.sideBySideRenderingFunction) {\n    cm.sideBySideRenderingFunction = sideBySideRenderingFunction;\n  }\n\n  if (useSideBySideListener) {\n    preview.innerHTML = editor.options.previewRender(editor.value(), preview);\n    cm.on('update', cm.sideBySideRenderingFunction);\n  } else {\n    cm.off('update', cm.sideBySideRenderingFunction);\n  } // Refresh to fix selection being off (#309)\n\n\n  cm.refresh();\n}\n/**\n * Preview action.\n */\n\n\nfunction togglePreview(editor) {\n  var cm = editor.codemirror;\n  var wrapper = cm.getWrapperElement();\n  var toolbar_div = wrapper.previousSibling;\n  var toolbar = editor.options.toolbar ? editor.toolbarElements.preview : false;\n  var preview = wrapper.lastChild;\n\n  if (!preview || !/editor-preview/.test(preview.className)) {\n    preview = document.createElement('div');\n    preview.className = 'editor-preview';\n    wrapper.appendChild(preview);\n  }\n\n  if (/editor-preview-active/.test(preview.className)) {\n    preview.className = preview.className.replace(/\\s*editor-preview-active\\s*/g, '');\n\n    if (toolbar) {\n      toolbar.className = toolbar.className.replace(/\\s*active\\s*/g, '');\n      toolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, '');\n    }\n  } else {\n    // When the preview button is clicked for the first time,\n    // give some time for the transition from editor.css to fire and the view to slide from right to left,\n    // instead of just appearing.\n    setTimeout(function () {\n      preview.className += ' editor-preview-active';\n    }, 1);\n\n    if (toolbar) {\n      toolbar.className += ' active';\n      toolbar_div.className += ' disabled-for-preview';\n    }\n  }\n\n  preview.innerHTML = editor.options.previewRender(editor.value(), preview); // Turn off side by side if needed\n\n  var sidebyside = cm.getWrapperElement().nextSibling;\n  if (/editor-preview-active-side/.test(sidebyside.className)) toggleSideBySide(editor);\n}\n\nfunction _replaceSelection(cm, active, startEnd, url) {\n  if (/editor-preview-active/.test(cm.getWrapperElement().lastChild.className)) return;\n  var text;\n  var start = startEnd[0];\n  var end = startEnd[1];\n  var startPoint = {},\n      endPoint = {};\n  Object.assign(startPoint, cm.getCursor('start'));\n  Object.assign(endPoint, cm.getCursor('end'));\n\n  if (url) {\n    end = end.replace('#url#', url);\n  }\n\n  if (active) {\n    text = cm.getLine(startPoint.line);\n    start = text.slice(0, startPoint.ch);\n    end = text.slice(startPoint.ch);\n    cm.replaceRange(start + end, {\n      line: startPoint.line,\n      ch: 0\n    });\n  } else {\n    text = cm.getSelection();\n    cm.replaceSelection(start + text + end);\n    startPoint.ch += start.length;\n\n    if (startPoint !== endPoint) {\n      endPoint.ch += start.length;\n    }\n  }\n\n  cm.setSelection(startPoint, endPoint);\n  cm.focus();\n}\n\nfunction _toggleHeading(cm, direction, size) {\n  if (/editor-preview-active/.test(cm.getWrapperElement().lastChild.className)) return;\n  var startPoint = cm.getCursor('start');\n  var endPoint = cm.getCursor('end');\n\n  for (var i = startPoint.line; i <= endPoint.line; i++) {\n    (function (i) {\n      var text = cm.getLine(i);\n      var currHeadingLevel = text.search(/[^#]/);\n\n      if (direction !== undefined) {\n        if (currHeadingLevel <= 0) {\n          if (direction == 'bigger') {\n            text = '###### ' + text;\n          } else {\n            text = '# ' + text;\n          }\n        } else if (currHeadingLevel == 6 && direction == 'smaller') {\n          text = text.substr(7);\n        } else if (currHeadingLevel == 1 && direction == 'bigger') {\n          text = text.substr(2);\n        } else {\n          if (direction == 'bigger') {\n            text = text.substr(1);\n          } else {\n            text = '#' + text;\n          }\n        }\n      } else {\n        if (size == 1) {\n          if (currHeadingLevel <= 0) {\n            text = '# ' + text;\n          } else if (currHeadingLevel == size) {\n            text = text.substr(currHeadingLevel + 1);\n          } else {\n            text = '# ' + text.substr(currHeadingLevel + 1);\n          }\n        } else if (size == 2) {\n          if (currHeadingLevel <= 0) {\n            text = '## ' + text;\n          } else if (currHeadingLevel == size) {\n            text = text.substr(currHeadingLevel + 1);\n          } else {\n            text = '## ' + text.substr(currHeadingLevel + 1);\n          }\n        } else {\n          if (currHeadingLevel <= 0) {\n            text = '### ' + text;\n          } else if (currHeadingLevel == size) {\n            text = text.substr(currHeadingLevel + 1);\n          } else {\n            text = '### ' + text.substr(currHeadingLevel + 1);\n          }\n        }\n      }\n\n      cm.replaceRange(text, {\n        line: i,\n        ch: 0\n      }, {\n        line: i,\n        ch: 99999999999999\n      });\n    })(i);\n  }\n\n  cm.focus();\n}\n\nfunction _toggleLine(cm, name) {\n  if (/editor-preview-active/.test(cm.getWrapperElement().lastChild.className)) return;\n  var listRegexp = /^(\\s*)(\\*|-|\\+|\\d*\\.)(\\s+)/;\n  var whitespacesRegexp = /^\\s*/;\n  var stat = getState(cm);\n  var startPoint = cm.getCursor('start');\n  var endPoint = cm.getCursor('end');\n  var repl = {\n    'quote': /^(\\s*)>\\s+/,\n    'unordered-list': listRegexp,\n    'ordered-list': listRegexp\n  };\n\n  var _getChar = function _getChar(name, i) {\n    var map = {\n      'quote': '>',\n      'unordered-list': '*',\n      'ordered-list': '%%i.'\n    };\n    return map[name].replace('%%i', i);\n  };\n\n  var _checkChar = function _checkChar(name, char) {\n    var map = {\n      'quote': '>',\n      'unordered-list': '*',\n      'ordered-list': 'd+.'\n    };\n    var rt = new RegExp(map[name]);\n    return char && rt.test(char);\n  };\n\n  var line = 1;\n\n  for (var i = startPoint.line; i <= endPoint.line; i++) {\n    (function (i) {\n      var text = cm.getLine(i);\n\n      if (stat[name]) {\n        text = text.replace(repl[name], '$1');\n      } else {\n        var arr = listRegexp.exec(text);\n\n        var char = _getChar(name, line);\n\n        if (arr !== null) {\n          if (_checkChar(name, arr[2])) {\n            char = '';\n          }\n\n          text = arr[1] + char + arr[3] + text.replace(whitespacesRegexp, '').replace(repl[name], '$1');\n        } else {\n          text = char + ' ' + text;\n        }\n\n        line += 1;\n      }\n\n      cm.replaceRange(text, {\n        line: i,\n        ch: 0\n      }, {\n        line: i,\n        ch: 99999999999999\n      });\n    })(i);\n  }\n\n  cm.focus();\n}\n\nfunction _toggleBlock(editor, type, start_chars, end_chars) {\n  if (/editor-preview-active/.test(editor.codemirror.getWrapperElement().lastChild.className)) return;\n  end_chars = typeof end_chars === 'undefined' ? start_chars : end_chars;\n  var cm = editor.codemirror;\n  var stat = getState(cm);\n  var text;\n  var start = start_chars;\n  var end = end_chars;\n  var startPoint = cm.getCursor('start');\n  var endPoint = cm.getCursor('end');\n\n  if (stat[type]) {\n    text = cm.getLine(startPoint.line);\n    start = text.slice(0, startPoint.ch);\n    end = text.slice(startPoint.ch);\n\n    if (type == 'bold') {\n      start = start.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/, '');\n      end = end.replace(/(\\*\\*|__)/, '');\n    } else if (type == 'italic') {\n      start = start.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/, '');\n      end = end.replace(/(\\*|_)/, '');\n    } else if (type == 'strikethrough') {\n      start = start.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/, '');\n      end = end.replace(/(\\*\\*|~~)/, '');\n    }\n\n    cm.replaceRange(start + end, {\n      line: startPoint.line,\n      ch: 0\n    }, {\n      line: startPoint.line,\n      ch: 99999999999999\n    });\n\n    if (type == 'bold' || type == 'strikethrough') {\n      startPoint.ch -= 2;\n\n      if (startPoint !== endPoint) {\n        endPoint.ch -= 2;\n      }\n    } else if (type == 'italic') {\n      startPoint.ch -= 1;\n\n      if (startPoint !== endPoint) {\n        endPoint.ch -= 1;\n      }\n    }\n  } else {\n    text = cm.getSelection();\n\n    if (type == 'bold') {\n      text = text.split('**').join('');\n      text = text.split('__').join('');\n    } else if (type == 'italic') {\n      text = text.split('*').join('');\n      text = text.split('_').join('');\n    } else if (type == 'strikethrough') {\n      text = text.split('~~').join('');\n    }\n\n    cm.replaceSelection(start + text + end);\n    startPoint.ch += start_chars.length;\n    endPoint.ch = startPoint.ch + text.length;\n  }\n\n  cm.setSelection(startPoint, endPoint);\n  cm.focus();\n}\n\nfunction _cleanBlock(cm) {\n  if (/editor-preview-active/.test(cm.getWrapperElement().lastChild.className)) return;\n  var startPoint = cm.getCursor('start');\n  var endPoint = cm.getCursor('end');\n  var text;\n\n  for (var line = startPoint.line; line <= endPoint.line; line++) {\n    text = cm.getLine(line);\n    text = text.replace(/^[ ]*([# ]+|\\*|-|[> ]+|[0-9]+(.|\\)))[ ]*/, '');\n    cm.replaceRange(text, {\n      line: line,\n      ch: 0\n    }, {\n      line: line,\n      ch: 99999999999999\n    });\n  }\n} // Merge the properties of one object into another.\n\n\nfunction _mergeProperties(target, source) {\n  for (var property in source) {\n    if (source.hasOwnProperty(property)) {\n      if (source[property] instanceof Array) {\n        target[property] = source[property].concat(target[property] instanceof Array ? target[property] : []);\n      } else if (source[property] !== null && typeof source[property] === 'object' && source[property].constructor === Object) {\n        target[property] = _mergeProperties(target[property] || {}, source[property]);\n      } else {\n        target[property] = source[property];\n      }\n    }\n  }\n\n  return target;\n} // Merge an arbitrary number of objects into one.\n\n\nfunction extend(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    target = _mergeProperties(target, arguments[i]);\n  }\n\n  return target;\n}\n/* The right word count in respect for CJK. */\n\n\nfunction wordCount(data) {\n  var pattern = /[a-zA-Z0-9_\\u00A0-\\u02AF\\u0392-\\u03c9\\u0410-\\u04F9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\n  var m = data.match(pattern);\n  var count = 0;\n  if (m === null) return count;\n\n  for (var i = 0; i < m.length; i++) {\n    if (m[i].charCodeAt(0) >= 0x4E00) {\n      count += m[i].length;\n    } else {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nvar toolbarBuiltInButtons = {\n  'bold': {\n    name: 'bold',\n    action: toggleBold,\n    className: 'fa fa-bold',\n    title: 'Bold',\n    default: true\n  },\n  'italic': {\n    name: 'italic',\n    action: toggleItalic,\n    className: 'fa fa-italic',\n    title: 'Italic',\n    default: true\n  },\n  'strikethrough': {\n    name: 'strikethrough',\n    action: toggleStrikethrough,\n    className: 'fa fa-strikethrough',\n    title: 'Strikethrough'\n  },\n  'heading': {\n    name: 'heading',\n    action: toggleHeadingSmaller,\n    className: 'fa fa-header fa-heading',\n    title: 'Heading',\n    default: true\n  },\n  'heading-smaller': {\n    name: 'heading-smaller',\n    action: toggleHeadingSmaller,\n    className: 'fa fa-header fa-heading header-smaller',\n    title: 'Smaller Heading'\n  },\n  'heading-bigger': {\n    name: 'heading-bigger',\n    action: toggleHeadingBigger,\n    className: 'fa fa-header fa-heading header-bigger',\n    title: 'Bigger Heading'\n  },\n  'heading-1': {\n    name: 'heading-1',\n    action: toggleHeading1,\n    className: 'fa fa-header fa-heading header-1',\n    title: 'Big Heading'\n  },\n  'heading-2': {\n    name: 'heading-2',\n    action: toggleHeading2,\n    className: 'fa fa-header fa-heading header-2',\n    title: 'Medium Heading'\n  },\n  'heading-3': {\n    name: 'heading-3',\n    action: toggleHeading3,\n    className: 'fa fa-header fa-heading header-3',\n    title: 'Small Heading'\n  },\n  'separator-1': {\n    name: 'separator-1'\n  },\n  'code': {\n    name: 'code',\n    action: toggleCodeBlock,\n    className: 'fa fa-code',\n    title: 'Code'\n  },\n  'quote': {\n    name: 'quote',\n    action: toggleBlockquote,\n    className: 'fa fa-quote-left',\n    title: 'Quote',\n    default: true\n  },\n  'unordered-list': {\n    name: 'unordered-list',\n    action: toggleUnorderedList,\n    className: 'fa fa-list-ul',\n    title: 'Generic List',\n    default: true\n  },\n  'ordered-list': {\n    name: 'ordered-list',\n    action: toggleOrderedList,\n    className: 'fa fa-list-ol',\n    title: 'Numbered List',\n    default: true\n  },\n  'clean-block': {\n    name: 'clean-block',\n    action: cleanBlock,\n    className: 'fa fa-eraser',\n    title: 'Clean block'\n  },\n  'separator-2': {\n    name: 'separator-2'\n  },\n  'link': {\n    name: 'link',\n    action: drawLink,\n    className: 'fa fa-link',\n    title: 'Create Link',\n    default: true\n  },\n  'image': {\n    name: 'image',\n    action: drawImage,\n    className: 'fa fa-image',\n    title: 'Insert Image',\n    default: true\n  },\n  'table': {\n    name: 'table',\n    action: drawTable,\n    className: 'fa fa-table',\n    title: 'Insert Table'\n  },\n  'horizontal-rule': {\n    name: 'horizontal-rule',\n    action: drawHorizontalRule,\n    className: 'fa fa-minus',\n    title: 'Insert Horizontal Line'\n  },\n  'separator-3': {\n    name: 'separator-3'\n  },\n  'preview': {\n    name: 'preview',\n    action: togglePreview,\n    className: 'fa fa-eye',\n    noDisable: true,\n    title: 'Toggle Preview',\n    default: true\n  },\n  'side-by-side': {\n    name: 'side-by-side',\n    action: toggleSideBySide,\n    className: 'fa fa-columns',\n    noDisable: true,\n    noMobile: true,\n    title: 'Toggle Side by Side',\n    default: true\n  },\n  'fullscreen': {\n    name: 'fullscreen',\n    action: toggleFullScreen,\n    className: 'fa fa-arrows-alt',\n    noDisable: true,\n    noMobile: true,\n    title: 'Toggle Fullscreen',\n    default: true\n  },\n  'separator-4': {\n    name: 'separator-4'\n  },\n  'guide': {\n    name: 'guide',\n    action: 'https://www.markdownguide.org/basic-syntax/',\n    className: 'fa fa-question-circle',\n    noDisable: true,\n    title: 'Markdown Guide',\n    default: true\n  },\n  'separator-5': {\n    name: 'separator-5'\n  },\n  'undo': {\n    name: 'undo',\n    action: undo,\n    className: 'fa fa-undo',\n    noDisable: true,\n    title: 'Undo'\n  },\n  'redo': {\n    name: 'redo',\n    action: redo,\n    className: 'fa fa-repeat fa-redo',\n    noDisable: true,\n    title: 'Redo'\n  }\n};\nvar insertTexts = {\n  link: ['[', '](#url#)'],\n  image: ['![](', '#url#)'],\n  table: ['', '\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text     | Text     |\\n\\n'],\n  horizontalRule: ['', '\\n\\n-----\\n\\n']\n};\nvar promptTexts = {\n  link: 'URL for the link:',\n  image: 'URL of the image:'\n};\nvar blockStyles = {\n  'bold': '**',\n  'code': '```',\n  'italic': '*'\n};\n/**\n * Interface of EasyMDE.\n */\n\nfunction EasyMDE(options) {\n  // Handle options parameter\n  options = options || {}; // Used later to refer to it\"s parent\n\n  options.parent = this; // Check if Font Awesome needs to be auto downloaded\n\n  var autoDownloadFA = true;\n\n  if (options.autoDownloadFontAwesome === false) {\n    autoDownloadFA = false;\n  }\n\n  if (options.autoDownloadFontAwesome !== true) {\n    var styleSheets = document.styleSheets;\n\n    for (var i = 0; i < styleSheets.length; i++) {\n      if (!styleSheets[i].href) continue;\n\n      if (styleSheets[i].href.indexOf('//maxcdn.bootstrapcdn.com/font-awesome/') > -1) {\n        autoDownloadFA = false;\n      }\n    }\n  }\n\n  if (autoDownloadFA) {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = 'https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css';\n    document.getElementsByTagName('head')[0].appendChild(link);\n  } // Find the textarea to use\n\n\n  if (options.element) {\n    this.element = options.element;\n  } else if (options.element === null) {\n    // This means that the element option was specified, but no element was found\n    console.log('EasyMDE: Error. No element was found.');\n    return;\n  } // Handle toolbar\n\n\n  if (options.toolbar === undefined) {\n    // Initialize\n    options.toolbar = []; // Loop over the built in buttons, to get the preferred order\n\n    for (var key in toolbarBuiltInButtons) {\n      if (toolbarBuiltInButtons.hasOwnProperty(key)) {\n        if (key.indexOf('separator-') != -1) {\n          options.toolbar.push('|');\n        }\n\n        if (toolbarBuiltInButtons[key].default === true || options.showIcons && options.showIcons.constructor === Array && options.showIcons.indexOf(key) != -1) {\n          options.toolbar.push(key);\n        }\n      }\n    }\n  } // Handle status bar\n\n\n  if (!options.hasOwnProperty('status')) {\n    options.status = ['autosave', 'lines', 'words', 'cursor'];\n  } // Add default preview rendering function\n\n\n  if (!options.previewRender) {\n    options.previewRender = function (plainText) {\n      // Note: \"this\" refers to the options object\n      return this.parent.markdown(plainText);\n    };\n  } // Set default options for parsing config\n\n\n  options.parsingConfig = extend({\n    highlightFormatting: true // needed for toggleCodeBlock to detect types of code\n\n  }, options.parsingConfig || {}); // Merging the insertTexts, with the given options\n\n  options.insertTexts = extend({}, insertTexts, options.insertTexts || {}); // Merging the promptTexts, with the given options\n\n  options.promptTexts = extend({}, promptTexts, options.promptTexts || {}); // Merging the blockStyles, with the given options\n\n  options.blockStyles = extend({}, blockStyles, options.blockStyles || {}); // Merging the shortcuts, with the given options\n\n  options.shortcuts = extend({}, shortcuts, options.shortcuts || {});\n  options.minHeight = options.minHeight || '300px'; // Change unique_id to uniqueId for backwards compatibility\n\n  if (options.autosave != undefined && options.autosave.unique_id != undefined && options.autosave.unique_id != '') options.autosave.uniqueId = options.autosave.unique_id; // Update this options\n\n  this.options = options; // Auto render\n\n  this.render(); // The codemirror component is only available after rendering\n  // so, the setter for the initialValue can only run after\n  // the element has been rendered\n\n  if (options.initialValue && (!this.options.autosave || this.options.autosave.foundSavedValue !== true)) {\n    this.value(options.initialValue);\n  }\n}\n/**\n * Default markdown render.\n */\n\n\nEasyMDE.prototype.markdown = function (text) {\n  if (marked) {\n    // Initialize\n    var markedOptions;\n\n    if (this.options && this.options.renderingConfig && this.options.renderingConfig.markedOptions) {\n      markedOptions = this.options.renderingConfig.markedOptions;\n    } else {\n      markedOptions = {};\n    } // Update options\n\n\n    if (this.options && this.options.renderingConfig && this.options.renderingConfig.singleLineBreaks === false) {\n      markedOptions.breaks = false;\n    } else {\n      markedOptions.breaks = true;\n    }\n\n    if (this.options && this.options.renderingConfig && this.options.renderingConfig.codeSyntaxHighlighting === true) {\n      /* Get HLJS from config or window */\n      var hljs = this.options.renderingConfig.hljs || window.hljs;\n      /* Check if HLJS loaded */\n\n      if (hljs) {\n        markedOptions.highlight = function (code) {\n          return hljs.highlightAuto(code).value;\n        };\n      }\n    } // Set options\n\n\n    marked.setOptions(markedOptions); // Convert the markdown to HTML\n\n    var htmlText = marked(text); // Edit the HTML anchors to add 'target=\"_blank\"' by default.\n\n    htmlText = addAnchorTargetBlank(htmlText);\n    return htmlText;\n  }\n};\n/**\n * Render editor to the given element.\n */\n\n\nEasyMDE.prototype.render = function (el) {\n  if (!el) {\n    el = this.element || document.getElementsByTagName('textarea')[0];\n  }\n\n  if (this._rendered && this._rendered === el) {\n    // Already rendered.\n    return;\n  }\n\n  this.element = el;\n  var options = this.options;\n  var self = this;\n  var keyMaps = {};\n\n  for (var key in options.shortcuts) {\n    // null stands for \"do not bind this command\"\n    if (options.shortcuts[key] !== null && bindings[key] !== null) {\n      (function (key) {\n        keyMaps[fixShortcut(options.shortcuts[key])] = function () {\n          bindings[key](self);\n        };\n      })(key);\n    }\n  }\n\n  keyMaps['Enter'] = 'newlineAndIndentContinueMarkdownList';\n  keyMaps['Tab'] = 'tabAndIndentMarkdownList';\n  keyMaps['Shift-Tab'] = 'shiftTabAndUnindentMarkdownList';\n\n  keyMaps['Esc'] = function (cm) {\n    if (cm.getOption('fullScreen')) toggleFullScreen(self);\n  };\n\n  document.addEventListener('keydown', function (e) {\n    e = e || window.event;\n\n    if (e.keyCode == 27) {\n      if (self.codemirror.getOption('fullScreen')) toggleFullScreen(self);\n    }\n  }, false);\n  var mode, backdrop;\n\n  if (options.spellChecker !== false) {\n    mode = 'spell-checker';\n    backdrop = options.parsingConfig;\n    backdrop.name = 'gfm';\n    backdrop.gitHubSpice = false;\n    CodeMirrorSpellChecker({\n      codeMirrorInstance: CodeMirror\n    });\n  } else {\n    mode = options.parsingConfig;\n    mode.name = 'gfm';\n    mode.gitHubSpice = false;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  function configureMouse(cm, repeat, event) {\n    return {\n      addNew: false\n    };\n  }\n\n  this.codemirror = CodeMirror.fromTextArea(el, {\n    mode: mode,\n    backdrop: backdrop,\n    theme: options.theme != undefined ? options.theme : 'easymde',\n    tabSize: options.tabSize != undefined ? options.tabSize : 2,\n    indentUnit: options.tabSize != undefined ? options.tabSize : 2,\n    indentWithTabs: options.indentWithTabs === false ? false : true,\n    lineNumbers: false,\n    autofocus: options.autofocus === true ? true : false,\n    extraKeys: keyMaps,\n    lineWrapping: options.lineWrapping === false ? false : true,\n    allowDropFileTypes: ['text/plain'],\n    placeholder: options.placeholder || el.getAttribute('placeholder') || '',\n    styleSelectedText: options.styleSelectedText != undefined ? options.styleSelectedText : !isMobile(),\n    configureMouse: configureMouse\n  });\n  this.codemirror.getScrollerElement().style.minHeight = options.minHeight;\n\n  if (options.forceSync === true) {\n    var cm = this.codemirror;\n    cm.on('change', function () {\n      cm.save();\n    });\n  }\n\n  this.gui = {};\n\n  if (options.toolbar !== false) {\n    this.gui.toolbar = this.createToolbar();\n  }\n\n  if (options.status !== false) {\n    this.gui.statusbar = this.createStatusbar();\n  }\n\n  if (options.autosave != undefined && options.autosave.enabled === true) {\n    this.autosave();\n  }\n\n  this.gui.sideBySide = this.createSideBySide();\n  this._rendered = this.element; // Fixes CodeMirror bug (#344)\n\n  var temp_cm = this.codemirror;\n  setTimeout(function () {\n    temp_cm.refresh();\n  }.bind(temp_cm), 0);\n}; // Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem throw QuotaExceededError. We're going to detect this and set a variable accordingly.\n\n\nfunction isLocalStorageAvailable() {\n  if (typeof localStorage === 'object') {\n    try {\n      localStorage.setItem('smde_localStorage', 1);\n      localStorage.removeItem('smde_localStorage');\n    } catch (e) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n}\n\nEasyMDE.prototype.autosave = function () {\n  if (isLocalStorageAvailable()) {\n    var easyMDE = this;\n\n    if (this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == '') {\n      console.log('EasyMDE: You must set a uniqueId to use the autosave feature');\n      return;\n    }\n\n    if (this.options.autosave.binded !== true) {\n      if (easyMDE.element.form != null && easyMDE.element.form != undefined) {\n        easyMDE.element.form.addEventListener('submit', function () {\n          clearTimeout(easyMDE.autosaveTimeoutId);\n          easyMDE.autosaveTimeoutId = undefined;\n          localStorage.removeItem('smde_' + easyMDE.options.autosave.uniqueId); // Restart autosaving in case the submit will be cancelled down the line\n\n          setTimeout(function () {\n            easyMDE.autosave();\n          }, easyMDE.options.autosave.delay || 10000);\n        });\n      }\n\n      this.options.autosave.binded = true;\n    }\n\n    if (this.options.autosave.loaded !== true) {\n      if (typeof localStorage.getItem('smde_' + this.options.autosave.uniqueId) == 'string' && localStorage.getItem('smde_' + this.options.autosave.uniqueId) != '') {\n        this.codemirror.setValue(localStorage.getItem('smde_' + this.options.autosave.uniqueId));\n        this.options.autosave.foundSavedValue = true;\n      }\n\n      this.options.autosave.loaded = true;\n    }\n\n    localStorage.setItem('smde_' + this.options.autosave.uniqueId, easyMDE.value());\n    var el = document.getElementById('autosaved');\n\n    if (el != null && el != undefined && el != '') {\n      var d = new Date();\n      var hh = d.getHours();\n      var m = d.getMinutes();\n      var dd = 'am';\n      var h = hh;\n\n      if (h >= 12) {\n        h = hh - 12;\n        dd = 'pm';\n      }\n\n      if (h == 0) {\n        h = 12;\n      }\n\n      m = m < 10 ? '0' + m : m;\n      el.innerHTML = 'Autosaved: ' + h + ':' + m + ' ' + dd;\n    }\n\n    this.autosaveTimeoutId = setTimeout(function () {\n      easyMDE.autosave();\n    }, this.options.autosave.delay || 10000);\n  } else {\n    console.log('EasyMDE: localStorage not available, cannot autosave');\n  }\n};\n\nEasyMDE.prototype.clearAutosavedValue = function () {\n  if (isLocalStorageAvailable()) {\n    if (this.options.autosave == undefined || this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == '') {\n      console.log('EasyMDE: You must set a uniqueId to clear the autosave value');\n      return;\n    }\n\n    localStorage.removeItem('smde_' + this.options.autosave.uniqueId);\n  } else {\n    console.log('EasyMDE: localStorage not available, cannot autosave');\n  }\n};\n\nEasyMDE.prototype.createSideBySide = function () {\n  var cm = this.codemirror;\n  var wrapper = cm.getWrapperElement();\n  var preview = wrapper.nextSibling;\n\n  if (!preview || !/editor-preview-side/.test(preview.className)) {\n    preview = document.createElement('div');\n    preview.className = 'editor-preview-side';\n    wrapper.parentNode.insertBefore(preview, wrapper.nextSibling);\n  }\n\n  if (this.options.syncSideBySidePreviewScroll === false) return preview; // Syncs scroll  editor -> preview\n\n  var cScroll = false;\n  var pScroll = false;\n  cm.on('scroll', function (v) {\n    if (cScroll) {\n      cScroll = false;\n      return;\n    }\n\n    pScroll = true;\n    var height = v.getScrollInfo().height - v.getScrollInfo().clientHeight;\n    var ratio = parseFloat(v.getScrollInfo().top) / height;\n    var move = (preview.scrollHeight - preview.clientHeight) * ratio;\n    preview.scrollTop = move;\n  }); // Syncs scroll  preview -> editor\n\n  preview.onscroll = function () {\n    if (pScroll) {\n      pScroll = false;\n      return;\n    }\n\n    cScroll = true;\n    var height = preview.scrollHeight - preview.clientHeight;\n    var ratio = parseFloat(preview.scrollTop) / height;\n    var move = (cm.getScrollInfo().height - cm.getScrollInfo().clientHeight) * ratio;\n    cm.scrollTo(0, move);\n  };\n\n  return preview;\n};\n\nEasyMDE.prototype.createToolbar = function (items) {\n  items = items || this.options.toolbar;\n\n  if (!items || items.length === 0) {\n    return;\n  }\n\n  var i;\n\n  for (i = 0; i < items.length; i++) {\n    if (toolbarBuiltInButtons[items[i]] != undefined) {\n      items[i] = toolbarBuiltInButtons[items[i]];\n    }\n  }\n\n  var bar = document.createElement('div');\n  bar.className = 'editor-toolbar';\n  var self = this;\n  var toolbarData = {};\n  self.toolbar = items;\n\n  for (i = 0; i < items.length; i++) {\n    if (items[i].name == 'guide' && self.options.toolbarGuideIcon === false) continue;\n    if (self.options.hideIcons && self.options.hideIcons.indexOf(items[i].name) != -1) continue; // Fullscreen does not work well on mobile devices (even tablets)\n    // In the future, hopefully this can be resolved\n\n    if ((items[i].name == 'fullscreen' || items[i].name == 'side-by-side') && isMobile()) continue; // Don't include trailing separators\n\n    if (items[i] === '|') {\n      var nonSeparatorIconsFollow = false;\n\n      for (var x = i + 1; x < items.length; x++) {\n        if (items[x] !== '|' && (!self.options.hideIcons || self.options.hideIcons.indexOf(items[x].name) == -1)) {\n          nonSeparatorIconsFollow = true;\n        }\n      }\n\n      if (!nonSeparatorIconsFollow) continue;\n    } // Create the icon and append to the toolbar\n\n\n    (function (item) {\n      var el;\n\n      if (item === '|') {\n        el = createSep();\n      } else {\n        el = createToolbarButton(item, self.options.toolbarTips, self.options.shortcuts);\n      } // bind events, special for info\n\n\n      if (item.action) {\n        if (typeof item.action === 'function') {\n          el.onclick = function (e) {\n            e.preventDefault();\n            item.action(self);\n          };\n        } else if (typeof item.action === 'string') {\n          el.onclick = function (e) {\n            e.preventDefault();\n            window.open(item.action, '_blank');\n          };\n        }\n      }\n\n      toolbarData[item.name || item] = el;\n      bar.appendChild(el);\n    })(items[i]);\n  }\n\n  self.toolbarElements = toolbarData;\n  var cm = this.codemirror;\n  cm.on('cursorActivity', function () {\n    var stat = getState(cm);\n\n    for (var key in toolbarData) {\n      (function (key) {\n        var el = toolbarData[key];\n\n        if (stat[key]) {\n          el.className += ' active';\n        } else if (key != 'fullscreen' && key != 'side-by-side') {\n          el.className = el.className.replace(/\\s*active\\s*/g, '');\n        }\n      })(key);\n    }\n  });\n  var cmWrapper = cm.getWrapperElement();\n  cmWrapper.parentNode.insertBefore(bar, cmWrapper);\n  return bar;\n};\n\nEasyMDE.prototype.createStatusbar = function (status) {\n  // Initialize\n  status = status || this.options.status;\n  var options = this.options;\n  var cm = this.codemirror; // Make sure the status variable is valid\n\n  if (!status || status.length === 0) return; // Set up the built-in items\n\n  var items = [];\n  var i, onUpdate, defaultValue;\n\n  for (i = 0; i < status.length; i++) {\n    // Reset some values\n    onUpdate = undefined;\n    defaultValue = undefined; // Handle if custom or not\n\n    if (typeof status[i] === 'object') {\n      items.push({\n        className: status[i].className,\n        defaultValue: status[i].defaultValue,\n        onUpdate: status[i].onUpdate\n      });\n    } else {\n      var name = status[i];\n\n      if (name === 'words') {\n        defaultValue = function defaultValue(el) {\n          el.innerHTML = wordCount(cm.getValue());\n        };\n\n        onUpdate = function onUpdate(el) {\n          el.innerHTML = wordCount(cm.getValue());\n        };\n      } else if (name === 'lines') {\n        defaultValue = function defaultValue(el) {\n          el.innerHTML = cm.lineCount();\n        };\n\n        onUpdate = function onUpdate(el) {\n          el.innerHTML = cm.lineCount();\n        };\n      } else if (name === 'cursor') {\n        defaultValue = function defaultValue(el) {\n          el.innerHTML = '0:0';\n        };\n\n        onUpdate = function onUpdate(el) {\n          var pos = cm.getCursor();\n          el.innerHTML = pos.line + ':' + pos.ch;\n        };\n      } else if (name === 'autosave') {\n        defaultValue = function defaultValue(el) {\n          if (options.autosave != undefined && options.autosave.enabled === true) {\n            el.setAttribute('id', 'autosaved');\n          }\n        };\n      }\n\n      items.push({\n        className: name,\n        defaultValue: defaultValue,\n        onUpdate: onUpdate\n      });\n    }\n  } // Create element for the status bar\n\n\n  var bar = document.createElement('div');\n  bar.className = 'editor-statusbar'; // Create a new span for each item\n\n  for (i = 0; i < items.length; i++) {\n    // Store in temporary variable\n    var item = items[i]; // Create span element\n\n    var el = document.createElement('span');\n    el.className = item.className; // Ensure the defaultValue is a function\n\n    if (typeof item.defaultValue === 'function') {\n      item.defaultValue(el);\n    } // Ensure the onUpdate is a function\n\n\n    if (typeof item.onUpdate === 'function') {\n      // Create a closure around the span of the current action, then execute the onUpdate handler\n      this.codemirror.on('update', function (el, item) {\n        return function () {\n          item.onUpdate(el);\n        };\n      }(el, item));\n    } // Append the item to the status bar\n\n\n    bar.appendChild(el);\n  } // Insert the status bar into the DOM\n\n\n  var cmWrapper = this.codemirror.getWrapperElement();\n  cmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\n  return bar;\n};\n/**\n * Get or set the text content.\n */\n\n\nEasyMDE.prototype.value = function (val) {\n  var cm = this.codemirror;\n\n  if (val === undefined) {\n    return cm.getValue();\n  } else {\n    cm.getDoc().setValue(val);\n\n    if (this.isPreviewActive()) {\n      var wrapper = cm.getWrapperElement();\n      var preview = wrapper.lastChild;\n      preview.innerHTML = this.options.previewRender(val, preview);\n    }\n\n    return this;\n  }\n};\n/**\n * Bind static methods for exports.\n */\n\n\nEasyMDE.toggleBold = toggleBold;\nEasyMDE.toggleItalic = toggleItalic;\nEasyMDE.toggleStrikethrough = toggleStrikethrough;\nEasyMDE.toggleBlockquote = toggleBlockquote;\nEasyMDE.toggleHeadingSmaller = toggleHeadingSmaller;\nEasyMDE.toggleHeadingBigger = toggleHeadingBigger;\nEasyMDE.toggleHeading1 = toggleHeading1;\nEasyMDE.toggleHeading2 = toggleHeading2;\nEasyMDE.toggleHeading3 = toggleHeading3;\nEasyMDE.toggleCodeBlock = toggleCodeBlock;\nEasyMDE.toggleUnorderedList = toggleUnorderedList;\nEasyMDE.toggleOrderedList = toggleOrderedList;\nEasyMDE.cleanBlock = cleanBlock;\nEasyMDE.drawLink = drawLink;\nEasyMDE.drawImage = drawImage;\nEasyMDE.drawTable = drawTable;\nEasyMDE.drawHorizontalRule = drawHorizontalRule;\nEasyMDE.undo = undo;\nEasyMDE.redo = redo;\nEasyMDE.togglePreview = togglePreview;\nEasyMDE.toggleSideBySide = toggleSideBySide;\nEasyMDE.toggleFullScreen = toggleFullScreen;\n/**\n * Bind instance methods for exports.\n */\n\nEasyMDE.prototype.toggleBold = function () {\n  toggleBold(this);\n};\n\nEasyMDE.prototype.toggleItalic = function () {\n  toggleItalic(this);\n};\n\nEasyMDE.prototype.toggleStrikethrough = function () {\n  toggleStrikethrough(this);\n};\n\nEasyMDE.prototype.toggleBlockquote = function () {\n  toggleBlockquote(this);\n};\n\nEasyMDE.prototype.toggleHeadingSmaller = function () {\n  toggleHeadingSmaller(this);\n};\n\nEasyMDE.prototype.toggleHeadingBigger = function () {\n  toggleHeadingBigger(this);\n};\n\nEasyMDE.prototype.toggleHeading1 = function () {\n  toggleHeading1(this);\n};\n\nEasyMDE.prototype.toggleHeading2 = function () {\n  toggleHeading2(this);\n};\n\nEasyMDE.prototype.toggleHeading3 = function () {\n  toggleHeading3(this);\n};\n\nEasyMDE.prototype.toggleCodeBlock = function () {\n  toggleCodeBlock(this);\n};\n\nEasyMDE.prototype.toggleUnorderedList = function () {\n  toggleUnorderedList(this);\n};\n\nEasyMDE.prototype.toggleOrderedList = function () {\n  toggleOrderedList(this);\n};\n\nEasyMDE.prototype.cleanBlock = function () {\n  cleanBlock(this);\n};\n\nEasyMDE.prototype.drawLink = function () {\n  drawLink(this);\n};\n\nEasyMDE.prototype.drawImage = function () {\n  drawImage(this);\n};\n\nEasyMDE.prototype.drawTable = function () {\n  drawTable(this);\n};\n\nEasyMDE.prototype.drawHorizontalRule = function () {\n  drawHorizontalRule(this);\n};\n\nEasyMDE.prototype.undo = function () {\n  undo(this);\n};\n\nEasyMDE.prototype.redo = function () {\n  redo(this);\n};\n\nEasyMDE.prototype.togglePreview = function () {\n  togglePreview(this);\n};\n\nEasyMDE.prototype.toggleSideBySide = function () {\n  toggleSideBySide(this);\n};\n\nEasyMDE.prototype.toggleFullScreen = function () {\n  toggleFullScreen(this);\n};\n\nEasyMDE.prototype.isPreviewActive = function () {\n  var cm = this.codemirror;\n  var wrapper = cm.getWrapperElement();\n  var preview = wrapper.lastChild;\n  return /editor-preview-active/.test(preview.className);\n};\n\nEasyMDE.prototype.isSideBySideActive = function () {\n  var cm = this.codemirror;\n  var wrapper = cm.getWrapperElement();\n  var preview = wrapper.nextSibling;\n  return /editor-preview-active-side/.test(preview.className);\n};\n\nEasyMDE.prototype.isFullscreenActive = function () {\n  var cm = this.codemirror;\n  return cm.getOption('fullScreen');\n};\n\nEasyMDE.prototype.getState = function () {\n  var cm = this.codemirror;\n  return getState(cm);\n};\n\nEasyMDE.prototype.toTextArea = function () {\n  var cm = this.codemirror;\n  var wrapper = cm.getWrapperElement();\n\n  if (wrapper.parentNode) {\n    if (this.gui.toolbar) {\n      wrapper.parentNode.removeChild(this.gui.toolbar);\n    }\n\n    if (this.gui.statusbar) {\n      wrapper.parentNode.removeChild(this.gui.statusbar);\n    }\n\n    if (this.gui.sideBySide) {\n      wrapper.parentNode.removeChild(this.gui.sideBySide);\n    }\n  }\n\n  cm.toTextArea();\n\n  if (this.autosaveTimeoutId) {\n    clearTimeout(this.autosaveTimeoutId);\n    this.autosaveTimeoutId = undefined;\n    this.clearAutosavedValue();\n  }\n};\n\nmodule.exports = EasyMDE;","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function (cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n        replacements = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head; // If we're not in Markdown mode, fall back to normal newlineAndIndent\n\n      var eolState = cm.getStateAfter(pos.line);\n      var inner = CodeMirror.innerMode(cm.getMode(), eolState);\n\n      if (inner.mode.name !== \"markdown\") {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      } else {\n        eolState = inner.state;\n      }\n\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== 0;\n      var line = cm.getLine(pos.line),\n          match = listRE.exec(line);\n      var cursorBeforeBullet = /^\\s*$/.test(line.slice(0, pos.ch));\n\n      if (!ranges[i].empty() || !inList && !inQuote || !match || cursorBeforeBullet) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n\n      if (emptyListRE.test(line)) {\n        if (!/>\\s*$/.test(line)) cm.replaceRange(\"\", {\n          line: pos.line,\n          ch: 0\n        }, {\n          line: pos.line,\n          ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n      } else {\n        var indent = match[1],\n            after = match[5];\n        var numbered = !(unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0);\n        var bullet = numbered ? parseInt(match[3], 10) + 1 + match[4] : match[2].replace(\"x\", \" \");\n        replacements[i] = \"\\n\" + indent + bullet + after;\n        if (numbered) incrementRemainingMarkdownListNumbers(cm, pos);\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  }; // Auto-updating Markdown list numbers when a new item is added to the\n  // middle of a list\n\n\n  function incrementRemainingMarkdownListNumbers(cm, pos) {\n    var startLine = pos.line,\n        lookAhead = 0,\n        skipCount = 0;\n    var startItem = listRE.exec(cm.getLine(startLine)),\n        startIndent = startItem[1];\n\n    do {\n      lookAhead += 1;\n      var nextLineNumber = startLine + lookAhead;\n      var nextLine = cm.getLine(nextLineNumber),\n          nextItem = listRE.exec(nextLine);\n\n      if (nextItem) {\n        var nextIndent = nextItem[1];\n        var newNumber = parseInt(startItem[3], 10) + lookAhead - skipCount;\n        var nextNumber = parseInt(nextItem[3], 10),\n            itemNumber = nextNumber;\n\n        if (startIndent === nextIndent && !isNaN(nextNumber)) {\n          if (newNumber === nextNumber) itemNumber = nextNumber + 1;\n          if (newNumber > nextNumber) itemNumber = newNumber + 1;\n          cm.replaceRange(nextLine.replace(listRE, nextIndent + itemNumber + nextItem[4] + nextItem[5]), {\n            line: nextLineNumber,\n            ch: 0\n          }, {\n            line: nextLineNumber,\n            ch: nextLine.length\n          });\n        } else {\n          if (startIndent.length > nextIndent.length) return; // This doesn't run if the next line immediatley indents, as it is\n          // not clear of the users intention (new indented item or same level)\n\n          if (startIndent.length < nextIndent.length && lookAhead === 1) return;\n          skipCount += 1;\n        }\n      }\n    } while (nextItem);\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\nvar CodeMirror = require('codemirror');\n\nCodeMirror.commands.tabAndIndentMarkdownList = function (cm) {\n  var ranges = cm.listSelections();\n  var pos = ranges[0].head;\n  var eolState = cm.getStateAfter(pos.line);\n  var inList = eolState.list !== false;\n\n  if (inList) {\n    cm.execCommand('indentMore');\n    return;\n  }\n\n  if (cm.options.indentWithTabs) {\n    cm.execCommand('insertTab');\n  } else {\n    var spaces = Array(cm.options.tabSize + 1).join(' ');\n    cm.replaceSelection(spaces);\n  }\n};\n\nCodeMirror.commands.shiftTabAndUnindentMarkdownList = function (cm) {\n  var ranges = cm.listSelections();\n  var pos = ranges[0].head;\n  var eolState = cm.getStateAfter(pos.line);\n  var inList = eolState.list !== false;\n\n  if (inList) {\n    cm.execCommand('indentLess');\n    return;\n  }\n\n  if (cm.options.indentWithTabs) {\n    cm.execCommand('insertTab');\n  } else {\n    var spaces = Array(cm.options.tabSize + 1).join(' ');\n    cm.replaceSelection(spaces);\n  }\n};","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"fullScreen\", false, function (cm, val, old) {\n    if (old == CodeMirror.Init) old = false;\n    if (!old == !val) return;\n    if (val) setFullscreen(cm);else setNormal(cm);\n  });\n\n  function setFullscreen(cm) {\n    var wrap = cm.getWrapperElement();\n    cm.state.fullScreenRestore = {\n      scrollTop: window.pageYOffset,\n      scrollLeft: window.pageXOffset,\n      width: wrap.style.width,\n      height: wrap.style.height\n    };\n    wrap.style.width = \"\";\n    wrap.style.height = \"auto\";\n    wrap.className += \" CodeMirror-fullscreen\";\n    document.documentElement.style.overflow = \"hidden\";\n    cm.refresh();\n  }\n\n  function setNormal(cm) {\n    var wrap = cm.getWrapperElement();\n    wrap.className = wrap.className.replace(/\\s*CodeMirror-fullscreen\\b/, \"\");\n    document.documentElement.style.overflow = \"\";\n    var info = cm.state.fullScreenRestore;\n    wrap.style.width = info.width;\n    wrap.style.height = info.height;\n    window.scrollTo(info.scrollLeft, info.scrollTop);\n    cm.refresh();\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function (cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\");\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder);\n    elt.appendChild(placeHolder);\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(),\n        empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n    if (empty) setPlaceholder(cm);else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return cm.lineCount() === 1 && cm.getLine(0) === \"\";\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Because sometimes you need to mark the selected *text*.\n//\n// Adds an option 'styleSelectedText' which, when enabled, gives\n// selected text the CSS class given as option value, or\n// \"CodeMirror-selectedtext\" when the value is not a string.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"styleSelectedText\", false, function (cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n\n    if (val && !prev) {\n      cm.state.markedSelection = [];\n      cm.state.markedSelectionStyle = typeof val == \"string\" ? val : \"CodeMirror-selectedtext\";\n      reset(cm);\n      cm.on(\"cursorActivity\", onCursorActivity);\n      cm.on(\"change\", onChange);\n    } else if (!val && prev) {\n      cm.off(\"cursorActivity\", onCursorActivity);\n      cm.off(\"change\", onChange);\n      clear(cm);\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n    }\n  });\n\n  function onCursorActivity(cm) {\n    if (cm.state.markedSelection) cm.operation(function () {\n      update(cm);\n    });\n  }\n\n  function onChange(cm) {\n    if (cm.state.markedSelection && cm.state.markedSelection.length) cm.operation(function () {\n      clear(cm);\n    });\n  }\n\n  var CHUNK_SIZE = 8;\n  var Pos = CodeMirror.Pos;\n  var cmp = CodeMirror.cmpPos;\n\n  function coverRange(cm, from, to, addAt) {\n    if (cmp(from, to) == 0) return;\n    var array = cm.state.markedSelection;\n    var cls = cm.state.markedSelectionStyle;\n\n    for (var line = from.line;;) {\n      var start = line == from.line ? from : Pos(line, 0);\n      var endLine = line + CHUNK_SIZE,\n          atEnd = endLine >= to.line;\n      var end = atEnd ? to : Pos(endLine, 0);\n      var mark = cm.markText(start, end, {\n        className: cls\n      });\n      if (addAt == null) array.push(mark);else array.splice(addAt++, 0, mark);\n      if (atEnd) break;\n      line = endLine;\n    }\n  }\n\n  function clear(cm) {\n    var array = cm.state.markedSelection;\n\n    for (var i = 0; i < array.length; ++i) {\n      array[i].clear();\n    }\n\n    array.length = 0;\n  }\n\n  function reset(cm) {\n    clear(cm);\n    var ranges = cm.listSelections();\n\n    for (var i = 0; i < ranges.length; i++) {\n      coverRange(cm, ranges[i].from(), ranges[i].to());\n    }\n  }\n\n  function update(cm) {\n    if (!cm.somethingSelected()) return clear(cm);\n    if (cm.listSelections().length > 1) return reset(cm);\n    var from = cm.getCursor(\"start\"),\n        to = cm.getCursor(\"end\");\n    var array = cm.state.markedSelection;\n    if (!array.length) return coverRange(cm, from, to);\n    var coverStart = array[0].find(),\n        coverEnd = array[array.length - 1].find();\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE || cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0) return reset(cm);\n\n    while (cmp(from, coverStart.from) > 0) {\n      array.shift().clear();\n      coverStart = array[0].find();\n    }\n\n    if (cmp(from, coverStart.from) < 0) {\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\n        array.shift().clear();\n        coverRange(cm, from, coverStart.to, 0);\n      } else {\n        coverRange(cm, from, coverStart.from, 0);\n      }\n    }\n\n    while (cmp(to, coverEnd.to) < 0) {\n      array.pop().clear();\n      coverEnd = array[array.length - 1].find();\n    }\n\n    if (cmp(to, coverEnd.to) > 0) {\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n        array.pop().clear();\n        coverRange(cm, coverEnd.from, to);\n      } else {\n        coverRange(cm, coverEnd.to, to);\n      }\n    }\n  }\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags;\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp),\n        target = current;\n\n    for (var i = 0; i < flags.length; i++) {\n      if (target.indexOf(flags.charAt(i)) == -1) target += flags.charAt(i);\n    }\n\n    return current == target ? regexp : new RegExp(regexp.source, target);\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\");\n\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch;\n      var string = doc.getLine(line),\n          match = regexp.exec(string);\n      if (match) return {\n        from: Pos(line, match.index),\n        to: Pos(line, match.index + match[0].length),\n        match: match\n      };\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start);\n    regexp = ensureFlags(regexp, \"gm\");\n    var string,\n        chunk = 1;\n\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break;\n        var curLine = doc.getLine(line++);\n        string = string == null ? curLine : string + \"\\n\" + curLine;\n      }\n\n      chunk = chunk * 2;\n      regexp.lastIndex = start.ch;\n      var match = regexp.exec(string);\n\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"),\n            inside = match[0].split(\"\\n\");\n        var startLine = start.line + before.length - 1,\n            startCh = before[before.length - 1].length;\n        return {\n          from: Pos(startLine, startCh),\n          to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n          match: match\n        };\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp) {\n    var cutOff = 0,\n        match;\n\n    for (;;) {\n      regexp.lastIndex = cutOff;\n      var newMatch = regexp.exec(string);\n      if (!newMatch) return match;\n      match = newMatch;\n      cutOff = match.index + (match[0].length || 1);\n      if (cutOff == string.length) return match;\n    }\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\");\n\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line);\n      if (ch > -1) string = string.slice(0, ch);\n      var match = lastMatchIn(string, regexp);\n      if (match) return {\n        from: Pos(line, match.index),\n        to: Pos(line, match.index + match[0].length),\n        match: match\n      };\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"gm\");\n    var string,\n        chunk = 1;\n\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunk; i++) {\n        var curLine = doc.getLine(line--);\n        string = string == null ? curLine.slice(0, start.ch) : curLine + \"\\n\" + string;\n      }\n\n      chunk *= 2;\n      var match = lastMatchIn(string, regexp);\n\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"),\n            inside = match[0].split(\"\\n\");\n        var startLine = line + before.length,\n            startCh = before[before.length - 1].length;\n        return {\n          from: Pos(startLine, startCh),\n          to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n          match: match\n        };\n      }\n    }\n  }\n\n  var doFold, noFold;\n\n  if (String.prototype.normalize) {\n    doFold = function doFold(str) {\n      return str.normalize(\"NFD\").toLowerCase();\n    };\n\n    noFold = function noFold(str) {\n      return str.normalize(\"NFD\");\n    };\n  } else {\n    doFold = function doFold(str) {\n      return str.toLowerCase();\n    };\n\n    noFold = function noFold(str) {\n      return str;\n    };\n  } // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n\n\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos;\n\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min;\n      var mid = min + max >> 1;\n      var len = foldFunc(orig.slice(0, mid)).length;\n      if (len == pos) return mid;else if (len > pos) max = mid;else min = mid + 1;\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null;\n    var fold = caseFold ? doFold : noFold;\n    var lines = fold(query).split(/\\r|\\n\\r?/);\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch),\n          string = fold(orig);\n\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0]);\n        if (found == -1) continue search;\n        var start = adjustPos(orig, string, found, fold) + ch;\n        return {\n          from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n          to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n        };\n      } else {\n        var cutFrom = string.length - lines[0].length;\n        if (string.slice(cutFrom) != lines[0]) continue search;\n\n        for (var i = 1; i < lines.length - 1; i++) {\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search;\n        }\n\n        var end = doc.getLine(line + lines.length - 1),\n            endString = fold(end),\n            lastLine = lines[lines.length - 1];\n        if (endString.slice(0, lastLine.length) != lastLine) continue search;\n        return {\n          from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n          to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n        };\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null;\n    var fold = caseFold ? doFold : noFold;\n    var lines = fold(query).split(/\\r|\\n\\r?/);\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line);\n      if (ch > -1) orig = orig.slice(0, ch);\n      var string = fold(orig);\n\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0]);\n        if (found == -1) continue search;\n        return {\n          from: Pos(line, adjustPos(orig, string, found, fold)),\n          to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n        };\n      } else {\n        var lastLine = lines[lines.length - 1];\n        if (string.slice(0, lastLine.length) != lastLine) continue search;\n\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++) {\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search;\n        }\n\n        var top = doc.getLine(line + 1 - lines.length),\n            topString = fold(top);\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search;\n        return {\n          from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n          to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n        };\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false;\n    this.doc = doc;\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n    this.pos = {\n      from: pos,\n      to: pos\n    };\n    var caseFold;\n\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold;\n    } else {\n      // Backwards compat for when caseFold was the 4th argument\n      caseFold = options;\n      options = null;\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false;\n\n      this.matches = function (reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold);\n      };\n    } else {\n      query = ensureFlags(query, \"gm\");\n      if (!options || options.multiline !== false) this.matches = function (reverse, pos) {\n        return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos);\n      };else this.matches = function (reverse, pos) {\n        return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos);\n      };\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function findNext() {\n      return this.find(false);\n    },\n    findPrevious: function findPrevious() {\n      return this.find(true);\n    },\n    find: function find(reverse) {\n      var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to)); // Implements weird auto-growing behavior on null-matches for\n      // backwards-compatiblity with the vim code (unfortunately)\n\n      while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\n        if (reverse) {\n          if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1);else if (result.from.line == this.doc.firstLine()) result = null;else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)));\n        } else {\n          if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1);else if (result.to.line == this.doc.lastLine()) result = null;else result = this.matches(reverse, Pos(result.to.line + 1, 0));\n        }\n      }\n\n      if (result) {\n        this.pos = result;\n        this.atOccurrence = true;\n        return this.pos.match || true;\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n        this.pos = {\n          from: end,\n          to: end\n        };\n        return this.atOccurrence = false;\n      }\n    },\n    from: function from() {\n      if (this.atOccurrence) return this.pos.from;\n    },\n    to: function to() {\n      if (this.atOccurrence) return this.pos.to;\n    },\n    replace: function replace(newText, origin) {\n      if (!this.atOccurrence) return;\n      var lines = CodeMirror.splitLines(newText);\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1, lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n    }\n  };\n  CodeMirror.defineExtension(\"getSearchCursor\", function (query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold);\n  });\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function (query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold);\n  });\n  CodeMirror.defineExtension(\"selectMatches\", function (query, caseFold) {\n    var ranges = [];\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break;\n      ranges.push({\n        anchor: cur.from(),\n        head: cur.to()\n      });\n    }\n\n    if (ranges.length) this.setSelections(ranges, 0);\n  });\n});","// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\"; // Requires\n\nvar Typo = require(\"typo-js\"); // Create function\n\n\nfunction CodeMirrorSpellChecker(options) {\n  // Initialize\n  options = options || {}; // Verify\n\n  if (typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n    console.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n    return;\n  } // Because some browsers don't support this functionality yet\n\n\n  if (!String.prototype.includes) {\n    String.prototype.includes = function () {\n      \"use strict\";\n\n      return String.prototype.indexOf.apply(this, arguments) !== -1;\n    };\n  } // Define the new mode\n\n\n  options.codeMirrorInstance.defineMode(\"spell-checker\", function (config) {\n    // Load AFF/DIC data\n    if (!CodeMirrorSpellChecker.aff_loading) {\n      CodeMirrorSpellChecker.aff_loading = true;\n      var xhr_aff = new XMLHttpRequest();\n      xhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\n      xhr_aff.onload = function () {\n        if (xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n          CodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n\n      xhr_aff.send(null);\n    }\n\n    if (!CodeMirrorSpellChecker.dic_loading) {\n      CodeMirrorSpellChecker.dic_loading = true;\n      var xhr_dic = new XMLHttpRequest();\n      xhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\n      xhr_dic.onload = function () {\n        if (xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n          CodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n\n      xhr_dic.send(null);\n    } // Define what separates a word\n\n\n    var rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \"; // Create the overlay and such\n\n    var overlay = {\n      token: function token(stream) {\n        var ch = stream.peek();\n        var word = \"\";\n\n        if (rx_word.includes(ch)) {\n          stream.next();\n          return null;\n        }\n\n        while ((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n          word += ch;\n          stream.next();\n        }\n\n        if (CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word)) return \"spell-error\"; // CSS class: cm-spell-error\n\n        return null;\n      }\n    };\n    var mode = options.codeMirrorInstance.getMode(config, config.backdrop || \"text/plain\");\n    return options.codeMirrorInstance.overlayMode(mode, overlay, true);\n  });\n} // Initialize data globally to reduce memory consumption\n\n\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo; // Export\n\nmodule.exports = CodeMirrorSpellChecker;","/* globals chrome: false */\n\n/* globals __dirname: false */\n\n/* globals require: false */\n\n/* globals Buffer: false */\n\n/* globals module: false */\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\nvar Typo;\n\n(function () {\n  \"use strict\";\n  /**\n   * Typo constructor.\n   *\n   * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n   *                              \"en_US\". This is only used to auto-load dictionaries.\n   * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\n   *                              and Typo.js is being used in a Chrome extension, the .aff\n   *                              file will be loaded automatically from\n   *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\n   *                              In other environments, it will be loaded from\n   *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\n   * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\n   *                              and Typo.js is being used in a Chrome extension, the .dic\n   *                              file will be loaded automatically from\n   *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\n   *                              In other environments, it will be loaded from\n   *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\n   * @param {Object} [settings]   Constructor settings. Available properties are:\n   *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\n   *                              environment.\n   *                              {Object} [flags]: flag information.\n   *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\n   *                              asynchronously.\n   *                              {Function} [loadedCallback]: Called when both affData and wordsData\n   *                              have been loaded. Only used if asyncLoad is set to true. The parameter\n   *                              is the instantiated Typo object.\n   *\n   * @returns {Typo} A Typo object.\n   */\n\n  Typo = function Typo(dictionary, affData, wordsData, settings) {\n    settings = settings || {};\n    this.dictionary = null;\n    this.rules = {};\n    this.dictionaryTable = {};\n    this.compoundRules = [];\n    this.compoundRuleCodes = {};\n    this.replacementTable = [];\n    this.flags = settings.flags || {};\n    this.memoized = {};\n    this.loaded = false;\n    var self = this;\n    var path; // Loop-control variables.\n\n    var i, j, _len, _jlen;\n\n    if (dictionary) {\n      self.dictionary = dictionary; // If the data is preloaded, just setup the Typo object.\n\n      if (affData && wordsData) {\n        setup();\n      } // Loading data for Chrome extentions.\n      else if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\n          if (settings.dictionaryPath) {\n            path = settings.dictionaryPath;\n          } else {\n            path = \"typo/dictionaries\";\n          }\n\n          if (!affData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\"), setAffData);\n          if (!wordsData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\"), setWordsData);\n        } else {\n          if (settings.dictionaryPath) {\n            path = settings.dictionaryPath;\n          } else if (typeof __dirname !== 'undefined') {\n            path = __dirname + '/dictionaries';\n          } else {\n            path = './dictionaries';\n          }\n\n          if (!affData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\", setAffData);\n          if (!wordsData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\", setWordsData);\n        }\n    }\n\n    function readDataFile(url, setFunc) {\n      var response = self._readFile(url, null, settings.asyncLoad);\n\n      if (settings.asyncLoad) {\n        response.then(function (data) {\n          setFunc(data);\n        });\n      } else {\n        setFunc(response);\n      }\n    }\n\n    function setAffData(data) {\n      affData = data;\n\n      if (wordsData) {\n        setup();\n      }\n    }\n\n    function setWordsData(data) {\n      wordsData = data;\n\n      if (affData) {\n        setup();\n      }\n    }\n\n    function setup() {\n      self.rules = self._parseAFF(affData); // Save the rule codes that are used in compound rules.\n\n      self.compoundRuleCodes = {};\n\n      for (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n        var rule = self.compoundRules[i];\n\n        for (j = 0, _jlen = rule.length; j < _jlen; j++) {\n          self.compoundRuleCodes[rule[j]] = [];\n        }\n      } // If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\n      // will do the work of saving the list of words that are compound-only.\n\n\n      if (\"ONLYINCOMPOUND\" in self.flags) {\n        self.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\n      }\n\n      self.dictionaryTable = self._parseDIC(wordsData); // Get rid of any codes from the compound rule codes that are never used \n      // (or that were special regex characters).  Not especially necessary... \n\n      for (i in self.compoundRuleCodes) {\n        if (self.compoundRuleCodes[i].length === 0) {\n          delete self.compoundRuleCodes[i];\n        }\n      } // Build the full regular expressions for each compound rule.\n      // I have a feeling (but no confirmation yet) that this method of \n      // testing for compound words is probably slow.\n\n\n      for (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n        var ruleText = self.compoundRules[i];\n        var expressionText = \"\";\n\n        for (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n          var character = ruleText[j];\n\n          if (character in self.compoundRuleCodes) {\n            expressionText += \"(\" + self.compoundRuleCodes[character].join(\"|\") + \")\";\n          } else {\n            expressionText += character;\n          }\n        }\n\n        self.compoundRules[i] = new RegExp(expressionText, \"i\");\n      }\n\n      self.loaded = true;\n\n      if (settings.asyncLoad && settings.loadedCallback) {\n        settings.loadedCallback(self);\n      }\n    }\n\n    return this;\n  };\n\n  Typo.prototype = {\n    /**\n     * Loads a Typo instance from a hash of all of the Typo properties.\n     *\n     * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n     */\n    load: function load(obj) {\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          this[i] = obj[i];\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Read the contents of a file.\n     * \n     * @param {String} path The path (relative) to the file.\n     * @param {String} [charset=\"ISO8859-1\"] The expected charset of the file\n     * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\n     *        files are read synchronously.\n     * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\n     *          always returned.\n     */\n    _readFile: function _readFile(path, charset, async) {\n      charset = charset || \"utf8\";\n\n      if (typeof XMLHttpRequest !== 'undefined') {\n        var promise;\n        var req = new XMLHttpRequest();\n        req.open(\"GET\", path, async);\n\n        if (async) {\n          promise = new Promise(function (resolve, reject) {\n            req.onload = function () {\n              if (req.status === 200) {\n                resolve(req.responseText);\n              } else {\n                reject(req.statusText);\n              }\n            };\n\n            req.onerror = function () {\n              reject(req.statusText);\n            };\n          });\n        }\n\n        if (req.overrideMimeType) req.overrideMimeType(\"text/plain; charset=\" + charset);\n        req.send(null);\n        return async ? promise : req.responseText;\n      } else if (typeof require !== 'undefined') {\n        // Node.js\n        var fs = require(\"fs\");\n\n        try {\n          if (fs.existsSync(path)) {\n            var stats = fs.statSync(path);\n            var fileDescriptor = fs.openSync(path, 'r');\n            var buffer = new Buffer(stats.size);\n            fs.readSync(fileDescriptor, buffer, 0, buffer.length, null);\n            return buffer.toString(charset, 0, buffer.length);\n          } else {\n            console.log(\"Path \" + path + \" does not exist.\");\n          }\n        } catch (e) {\n          console.log(e);\n          return '';\n        }\n      }\n    },\n\n    /**\n     * Parse the rules out from a .aff file.\n     *\n     * @param {String} data The contents of the affix file.\n     * @returns object The rules from the file.\n     */\n    _parseAFF: function _parseAFF(data) {\n      var rules = {};\n      var line, subline, numEntries, lineParts;\n\n      var i, j, _len, _jlen; // Remove comment lines\n\n\n      data = this._removeAffixComments(data);\n      var lines = data.split(\"\\n\");\n\n      for (i = 0, _len = lines.length; i < _len; i++) {\n        line = lines[i];\n        var definitionParts = line.split(/\\s+/);\n        var ruleType = definitionParts[0];\n\n        if (ruleType == \"PFX\" || ruleType == \"SFX\") {\n          var ruleCode = definitionParts[1];\n          var combineable = definitionParts[2];\n          numEntries = parseInt(definitionParts[3], 10);\n          var entries = [];\n\n          for (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n            subline = lines[j];\n            lineParts = subline.split(/\\s+/);\n            var charactersToRemove = lineParts[2];\n            var additionParts = lineParts[3].split(\"/\");\n            var charactersToAdd = additionParts[0];\n            if (charactersToAdd === \"0\") charactersToAdd = \"\";\n            var continuationClasses = this.parseRuleCodes(additionParts[1]);\n            var regexToMatch = lineParts[4];\n            var entry = {};\n            entry.add = charactersToAdd;\n            if (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\n            if (regexToMatch !== \".\") {\n              if (ruleType === \"SFX\") {\n                entry.match = new RegExp(regexToMatch + \"$\");\n              } else {\n                entry.match = new RegExp(\"^\" + regexToMatch);\n              }\n            }\n\n            if (charactersToRemove != \"0\") {\n              if (ruleType === \"SFX\") {\n                entry.remove = new RegExp(charactersToRemove + \"$\");\n              } else {\n                entry.remove = charactersToRemove;\n              }\n            }\n\n            entries.push(entry);\n          }\n\n          rules[ruleCode] = {\n            \"type\": ruleType,\n            \"combineable\": combineable == \"Y\",\n            \"entries\": entries\n          };\n          i += numEntries;\n        } else if (ruleType === \"COMPOUNDRULE\") {\n          numEntries = parseInt(definitionParts[1], 10);\n\n          for (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n            line = lines[j];\n            lineParts = line.split(/\\s+/);\n            this.compoundRules.push(lineParts[1]);\n          }\n\n          i += numEntries;\n        } else if (ruleType === \"REP\") {\n          lineParts = line.split(/\\s+/);\n\n          if (lineParts.length === 3) {\n            this.replacementTable.push([lineParts[1], lineParts[2]]);\n          }\n        } else {\n          // ONLYINCOMPOUND\n          // COMPOUNDMIN\n          // FLAG\n          // KEEPCASE\n          // NEEDAFFIX\n          this.flags[ruleType] = definitionParts[1];\n        }\n      }\n\n      return rules;\n    },\n\n    /**\n     * Removes comment lines and then cleans up blank lines and trailing whitespace.\n     *\n     * @param {String} data The data from an affix file.\n     * @return {String} The cleaned-up data.\n     */\n    _removeAffixComments: function _removeAffixComments(data) {\n      // Remove comments\n      // This used to remove any string starting with '#' up to the end of the line,\n      // but some COMPOUNDRULE definitions include '#' as part of the rule.\n      // I haven't seen any affix files that use comments on the same line as real data,\n      // so I don't think this will break anything.\n      data = data.replace(/^\\s*#.*$/mg, \"\"); // Trim each line\n\n      data = data.replace(/^\\s\\s*/m, '').replace(/\\s\\s*$/m, ''); // Remove blank lines.\n\n      data = data.replace(/\\n{2,}/g, \"\\n\"); // Trim the entire string\n\n      data = data.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n      return data;\n    },\n\n    /**\n     * Parses the words out from the .dic file.\n     *\n     * @param {String} data The data from the dictionary file.\n     * @returns object The lookup table containing all of the words and\n     *                 word forms from the dictionary.\n     */\n    _parseDIC: function _parseDIC(data) {\n      data = this._removeDicComments(data);\n      var lines = data.split(\"\\n\");\n      var dictionaryTable = {};\n\n      function addWord(word, rules) {\n        // Some dictionaries will list the same word multiple times with different rule sets.\n        if (!dictionaryTable.hasOwnProperty(word)) {\n          dictionaryTable[word] = null;\n        }\n\n        if (rules.length > 0) {\n          if (dictionaryTable[word] === null) {\n            dictionaryTable[word] = [];\n          }\n\n          dictionaryTable[word].push(rules);\n        }\n      } // The first line is the number of words in the dictionary.\n\n\n      for (var i = 1, _len = lines.length; i < _len; i++) {\n        var line = lines[i];\n        var parts = line.split(\"/\", 2);\n        var word = parts[0]; // Now for each affix rule, generate that form of the word.\n\n        if (parts.length > 1) {\n          var ruleCodesArray = this.parseRuleCodes(parts[1]); // Save the ruleCodes for compound word situations.\n\n          if (!(\"NEEDAFFIX\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n            addWord(word, ruleCodesArray);\n          }\n\n          for (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n            var code = ruleCodesArray[j];\n            var rule = this.rules[code];\n\n            if (rule) {\n              var newWords = this._applyRule(word, rule);\n\n              for (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n                var newWord = newWords[ii];\n                addWord(newWord, []);\n\n                if (rule.combineable) {\n                  for (var k = j + 1; k < _jlen; k++) {\n                    var combineCode = ruleCodesArray[k];\n                    var combineRule = this.rules[combineCode];\n\n                    if (combineRule) {\n                      if (combineRule.combineable && rule.type != combineRule.type) {\n                        var otherNewWords = this._applyRule(newWord, combineRule);\n\n                        for (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n                          var otherNewWord = otherNewWords[iii];\n                          addWord(otherNewWord, []);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n\n            if (code in this.compoundRuleCodes) {\n              this.compoundRuleCodes[code].push(word);\n            }\n          }\n        } else {\n          addWord(word.trim(), []);\n        }\n      }\n\n      return dictionaryTable;\n    },\n\n    /**\n     * Removes comment lines and then cleans up blank lines and trailing whitespace.\n     *\n     * @param {String} data The data from a .dic file.\n     * @return {String} The cleaned-up data.\n     */\n    _removeDicComments: function _removeDicComments(data) {\n      // I can't find any official documentation on it, but at least the de_DE\n      // dictionary uses tab-indented lines as comments.\n      // Remove comments\n      data = data.replace(/^\\t.*$/mg, \"\");\n      return data;\n    },\n    parseRuleCodes: function parseRuleCodes(textCodes) {\n      if (!textCodes) {\n        return [];\n      } else if (!(\"FLAG\" in this.flags)) {\n        return textCodes.split(\"\");\n      } else if (this.flags.FLAG === \"long\") {\n        var flags = [];\n\n        for (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n          flags.push(textCodes.substr(i, 2));\n        }\n\n        return flags;\n      } else if (this.flags.FLAG === \"num\") {\n        return textCodes.split(\",\");\n      }\n    },\n\n    /**\n     * Applies an affix rule to a word.\n     *\n     * @param {String} word The base word.\n     * @param {Object} rule The affix rule.\n     * @returns {String[]} The new words generated by the rule.\n     */\n    _applyRule: function _applyRule(word, rule) {\n      var entries = rule.entries;\n      var newWords = [];\n\n      for (var i = 0, _len = entries.length; i < _len; i++) {\n        var entry = entries[i];\n\n        if (!entry.match || word.match(entry.match)) {\n          var newWord = word;\n\n          if (entry.remove) {\n            newWord = newWord.replace(entry.remove, \"\");\n          }\n\n          if (rule.type === \"SFX\") {\n            newWord = newWord + entry.add;\n          } else {\n            newWord = entry.add + newWord;\n          }\n\n          newWords.push(newWord);\n\n          if (\"continuationClasses\" in entry) {\n            for (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n              var continuationRule = this.rules[entry.continuationClasses[j]];\n\n              if (continuationRule) {\n                newWords = newWords.concat(this._applyRule(newWord, continuationRule));\n              }\n              /*\n              else {\n              \t// This shouldn't happen, but it does, at least in the de_DE dictionary.\n              \t// I think the author mistakenly supplied lower-case rule codes instead \n              \t// of upper-case.\n              }\n              */\n\n            }\n          }\n        }\n      }\n\n      return newWords;\n    },\n\n    /**\n     * Checks whether a word or a capitalization variant exists in the current dictionary.\n     * The word is trimmed and several variations of capitalizations are checked.\n     * If you want to check a word without any changes made to it, call checkExact()\n     *\n     * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n     *\n     * @param {String} aWord The word to check.\n     * @returns {Boolean}\n     */\n    check: function check(aWord) {\n      if (!this.loaded) {\n        throw \"Dictionary not loaded.\";\n      } // Remove leading and trailing whitespace\n\n\n      var trimmedWord = aWord.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\n      if (this.checkExact(trimmedWord)) {\n        return true;\n      } // The exact word is not in the dictionary.\n\n\n      if (trimmedWord.toUpperCase() === trimmedWord) {\n        // The word was supplied in all uppercase.\n        // Check for a capitalized form of the word.\n        var capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\n        if (this.hasFlag(capitalizedWord, \"KEEPCASE\")) {\n          // Capitalization variants are not allowed for this word.\n          return false;\n        }\n\n        if (this.checkExact(capitalizedWord)) {\n          return true;\n        }\n      }\n\n      var lowercaseWord = trimmedWord.toLowerCase();\n\n      if (lowercaseWord !== trimmedWord) {\n        if (this.hasFlag(lowercaseWord, \"KEEPCASE\")) {\n          // Capitalization variants are not allowed for this word.\n          return false;\n        } // Check for a lowercase form\n\n\n        if (this.checkExact(lowercaseWord)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Checks whether a word exists in the current dictionary.\n     *\n     * @param {String} word The word to check.\n     * @returns {Boolean}\n     */\n    checkExact: function checkExact(word) {\n      if (!this.loaded) {\n        throw \"Dictionary not loaded.\";\n      }\n\n      var ruleCodes = this.dictionaryTable[word];\n\n      var i, _len;\n\n      if (typeof ruleCodes === 'undefined') {\n        // Check if this might be a compound word.\n        if (\"COMPOUNDMIN\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n          for (i = 0, _len = this.compoundRules.length; i < _len; i++) {\n            if (word.match(this.compoundRules[i])) {\n              return true;\n            }\n          }\n        }\n      } else if (ruleCodes === null) {\n        // a null (but not undefined) value for an entry in the dictionary table\n        // means that the word is in the dictionary but has no flags.\n        return true;\n      } else if (typeof ruleCodes === 'object') {\n        // this.dictionary['hasOwnProperty'] will be a function.\n        for (i = 0, _len = ruleCodes.length; i < _len; i++) {\n          if (!this.hasFlag(word, \"ONLYINCOMPOUND\", ruleCodes[i])) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Looks up whether a given word is flagged with a given flag.\n     *\n     * @param {String} word The word in question.\n     * @param {String} flag The flag in question.\n     * @return {Boolean}\n     */\n    hasFlag: function hasFlag(word, flag, wordFlags) {\n      if (!this.loaded) {\n        throw \"Dictionary not loaded.\";\n      }\n\n      if (flag in this.flags) {\n        if (typeof wordFlags === 'undefined') {\n          wordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n        }\n\n        if (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns a list of suggestions for a misspelled word.\n     *\n     * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n     * This suggestor is primitive, but it works.\n     *\n     * @param {String} word The misspelling.\n     * @param {Number} [limit=5] The maximum number of suggestions to return.\n     * @returns {String[]} The array of suggestions.\n     */\n    alphabet: \"\",\n    suggest: function suggest(word, limit) {\n      if (!this.loaded) {\n        throw \"Dictionary not loaded.\";\n      }\n\n      limit = limit || 5;\n\n      if (this.memoized.hasOwnProperty(word)) {\n        var memoizedLimit = this.memoized[word]['limit']; // Only return the cached list if it's big enough or if there weren't enough suggestions\n        // to fill a smaller limit.\n\n        if (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\n          return this.memoized[word]['suggestions'].slice(0, limit);\n        }\n      }\n\n      if (this.check(word)) return []; // Check the replacement table.\n\n      for (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n        var replacementEntry = this.replacementTable[i];\n\n        if (word.indexOf(replacementEntry[0]) !== -1) {\n          var correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\n          if (this.check(correctedWord)) {\n            return [correctedWord];\n          }\n        }\n      }\n\n      var self = this;\n      self.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      /*\n      if (!self.alphabet) {\n      \t// Use the alphabet as implicitly defined by the words in the dictionary.\n      \tvar alphaHash = {};\n      \t\n      \tfor (var i in self.dictionaryTable) {\n      \t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n      \t\t\talphaHash[i[j]] = true;\n      \t\t}\n      \t}\n      \t\n      \tfor (var i in alphaHash) {\n      \t\tself.alphabet += i;\n      \t}\n      \t\n      \tvar alphaArray = self.alphabet.split(\"\");\n      \talphaArray.sort();\n      \tself.alphabet = alphaArray.join(\"\");\n      }\n      */\n\n      function edits1(words) {\n        var rv = [];\n\n        var ii, i, j, _iilen, _len, _jlen;\n\n        for (ii = 0, _iilen = words.length; ii < _iilen; ii++) {\n          var word = words[ii];\n\n          for (i = 0, _len = word.length + 1; i < _len; i++) {\n            var s = [word.substring(0, i), word.substring(i)];\n\n            if (s[1]) {\n              rv.push(s[0] + s[1].substring(1));\n            } // Eliminate transpositions of identical letters\n\n\n            if (s[1].length > 1 && s[1][1] !== s[1][0]) {\n              rv.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\n            }\n\n            if (s[1]) {\n              for (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n                // Eliminate replacement of a letter by itself\n                if (self.alphabet[j] != s[1].substring(0, 1)) {\n                  rv.push(s[0] + self.alphabet[j] + s[1].substring(1));\n                }\n              }\n            }\n\n            if (s[1]) {\n              for (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n                rv.push(s[0] + self.alphabet[j] + s[1]);\n              }\n            }\n          }\n        }\n\n        return rv;\n      }\n\n      function known(words) {\n        var rv = [];\n\n        for (var i = 0, _len = words.length; i < _len; i++) {\n          if (self.check(words[i])) {\n            rv.push(words[i]);\n          }\n        }\n\n        return rv;\n      }\n\n      function correct(word) {\n        // Get the edit-distance-1 and edit-distance-2 forms of this word.\n        var ed1 = edits1([word]);\n        var ed2 = edits1(ed1);\n        var corrections = known(ed1.concat(ed2));\n\n        var i, _len; // Sort the edits based on how many different ways they were created.\n\n\n        var weighted_corrections = {};\n\n        for (i = 0, _len = corrections.length; i < _len; i++) {\n          if (!(corrections[i] in weighted_corrections)) {\n            weighted_corrections[corrections[i]] = 1;\n          } else {\n            weighted_corrections[corrections[i]] += 1;\n          }\n        }\n\n        var sorted_corrections = [];\n\n        for (i in weighted_corrections) {\n          if (weighted_corrections.hasOwnProperty(i)) {\n            sorted_corrections.push([i, weighted_corrections[i]]);\n          }\n        }\n\n        function sorter(a, b) {\n          if (a[1] < b[1]) {\n            return -1;\n          }\n\n          return 1;\n        }\n\n        sorted_corrections.sort(sorter).reverse();\n        var rv = [];\n        var capitalization_scheme = \"lowercase\";\n\n        if (word.toUpperCase() === word) {\n          capitalization_scheme = \"uppercase\";\n        } else if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\n          capitalization_scheme = \"capitalized\";\n        }\n\n        for (i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\n          if (\"uppercase\" === capitalization_scheme) {\n            sorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\n          } else if (\"capitalized\" === capitalization_scheme) {\n            sorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\n          }\n\n          if (!self.hasFlag(sorted_corrections[i][0], \"NOSUGGEST\")) {\n            rv.push(sorted_corrections[i][0]);\n          }\n        }\n\n        return rv;\n      }\n\n      this.memoized[word] = {\n        'suggestions': correct(word),\n        'limit': limit\n      };\n      return this.memoized[word]['suggestions'];\n    }\n  };\n})(); // Support for use as a node.js module.\n\n\nif (typeof module !== 'undefined') {\n  module.exports = Typo;\n}","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n;\n\n(function (root) {\n  'use strict';\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    nptable: noop,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block.paragraph).replace('hr', block.hr).replace('heading', block.heading).replace('lheading', block.lheading).replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = edit(block.paragraph).replace('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|').getRegex();\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n    table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n  });\n  /**\n   * Pedantic grammar\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n  });\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Block Rules\n   */\n\n\n  Lexer.rules = block;\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\n   * Preprocessing\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\n   * Lexing\n   */\n\n\n  Lexer.prototype.token = function (src, top) {\n    src = src.replace(/^ +$/gm, '');\n    var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? rtrim(cap, '\\n') : cap\n        });\n        continue;\n      } // fences (gfm)\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n          continue;\n        }\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n        this.tokens.push(listStart); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n          listItems.push(t);\n          this.tokens.push(t); // Recurse.\n\n          this.token(item, false);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n\n        continue;\n      } // table (gfm)\n\n\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          this.tokens.push(item);\n          continue;\n        }\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\n   * Inline-Level Grammar\n   */\n\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noop,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noop,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\n  inline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Inline Rules\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\n   * Lexing/Compiling\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        title,\n        cap,\n        prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        var lastParenIndex = findClosingBracket(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // url (gfm)\n\n\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (this.inRawBlock) {\n          out += this.renderer.text(cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n\n  InlineLexer.escapes = function (text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  };\n  /**\n   * Compile Link\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = link.href,\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\n   * Smartypants Transformations\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  };\n  /**\n   * Mangle Links\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n  /**\n   * Renderer\n   */\n\n\n  function Renderer(options) {\n    this.options = options || marked.defaults;\n  }\n\n  Renderer.prototype.code = function (code, infostring, escaped) {\n    var lang = (infostring || '').match(/\\S*/)[0];\n\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n    } // ignore IDs\n\n\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.checkbox = function (checked) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n    if (href === null) {\n      return text;\n    }\n\n    var out = '<a href=\"' + escape(href) + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n    if (href === null) {\n      return text;\n    }\n\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  function TextRenderer() {} // no need for block level renderers\n\n\n  TextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n    return text;\n  };\n\n  TextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n    return '' + text;\n  };\n\n  TextRenderer.prototype.br = function () {\n    return '';\n  };\n  /**\n   * Parsing & Compiling\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n  /**\n   * Static Parse Method\n   */\n\n\n  Parser.parse = function (src, options) {\n    var parser = new Parser(options);\n    return parser.parse(src);\n  };\n  /**\n   * Parse Loop\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n    this.inlineText = new InlineLexer(src.links, merge({}, this.options, {\n      renderer: new TextRenderer()\n    }));\n    this.tokens = src.reverse();\n    var out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n  /**\n   * Next Token\n   */\n\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n  /**\n   * Preview Next Token\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\n   * Parse Text Tokens\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\n   * Parse Current Token\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)), this.slugger);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              j; // header\n\n          cell = '';\n\n          for (i = 0; i < this.token.header.length; i++) {\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          body = '';\n          var ordered = this.token.ordered,\n              start = this.token.start;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered, start);\n        }\n\n      case 'list_item_start':\n        {\n          body = '';\n          var loose = this.token.loose;\n          var checked = this.token.checked;\n          var task = this.token.task;\n\n          if (this.token.task) {\n            body += this.renderer.checkbox(checked);\n          }\n\n          while (this.next().type !== 'list_item_end') {\n            body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body, task, checked);\n        }\n\n      case 'html':\n        {\n          // TODO parse inline content if parameter markdown=1\n          return this.renderer.html(this.token.text);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n\n      default:\n        {\n          var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n          if (this.options.silent) {\n            console.log(errMsg);\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n    }\n  };\n  /**\n   * Slugger generates header id\n   */\n\n\n  function Slugger() {\n    this.seen = {};\n  }\n  /**\n   * Convert string to unique id\n   */\n\n\n  Slugger.prototype.slug = function (value) {\n    var slug = value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      var originalSlug = slug;\n\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n\n    this.seen[slug] = 0;\n    return slug;\n  };\n  /**\n   * Helpers\n   */\n\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escape.escapeTest.test(html)) {\n        return html.replace(escape.escapeReplace, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    } else {\n      if (escape.escapeTestNoEncode.test(html)) {\n        return html.replace(escape.escapeReplaceNoEncode, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    }\n\n    return html;\n  }\n\n  escape.escapeTest = /[&<>\"']/;\n  escape.escapeReplace = /[&<>\"']/g;\n  escape.replacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  escape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  escape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    return {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return this;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n  }\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n\n    if (href.slice(0, 2) === '//') {\n      return base.replace(/:[\\s\\S]*/, ':') + href;\n    } else if (href.charAt(0) === '/') {\n      return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var baseUrls = {};\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/),\n        i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    if (str.length === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < str.length) {\n      var currChar = str.charAt(str.length - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, str.length - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var level = 0;\n\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.getDefaults = function () {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: new Renderer(),\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tables: true,\n      xhtml: false\n    };\n  };\n\n  marked.defaults = marked.getDefaults();\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n\n  if (typeof module !== 'undefined' && typeof exports === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    root.marked = marked;\n  }\n})(this || (typeof window !== 'undefined' ? window : global));","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  var clampedValue = Math.min(Math.max(min, value), max);\n  return (clampedValue - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block',\n      lineHeight: 1 // Keep the progress centered\n\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: 'mui-progress-circular-rotate 1.4s linear infinite',\n      // Backward compatible logic between JSS v9 and v10.\n      // To remove with the release of Material-UI v4\n      animationName: '$mui-progress-circular-rotate'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {},\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: 'mui-progress-circular-dash 1.4s ease-in-out infinite',\n      // Backward compatible logic between JSS v9 and v10.\n      // To remove with the release of Material-UI v4\n      animationName: '$mui-progress-circular-dash',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes mui-progress-circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes mui-progress-circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], variant === 'indeterminate' && classes.indeterminate, variant === 'static' && classes.static),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, variant === 'indeterminate' && classes.circleIndeterminate, variant === 'static' && classes.circleStatic, disableShrink && classes.circleDisableShrink),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` property ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);"],"sourceRoot":""}