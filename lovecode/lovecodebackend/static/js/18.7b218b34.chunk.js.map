{"version":3,"sources":["components/MetaTags/BasicMetaTags.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","components/TutorialCreateDialog/TutorialCreateDialog.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","basicMetaTags","props","_props$title","title","_props$description","description","_props$canonicalUrl","canonicalUrl","a","createElement","titleTemplate","defaultTitle","itemProp","lang","name","content","property","rel","href","sizes","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_createBreakpoints__WEBPACK_IMPORTED_MODULE_6__","SPACINGS","GRID_SIZES","Grid","forwardRef","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","Object","root","concat","String","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","styles","forEach","themeSpacing","& > $item","padding","generateGutter","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","breakpoints","up","generateGrid","__webpack_exports__","r","d","TutorialCreateDialog","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3__","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__","react_icons__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","_MetaTags_BasicMetaTags__WEBPACK_IMPORTED_MODULE_8__","useStyles","makeStyles","paper","textAlign","to","Provider","value","gutterBottom","variant"],"mappings":"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","file":"static/js/18.7b218b34.chunk.js","sourcesContent":["import React from 'react'\nimport {Helmet} from \"react-helmet\";\n\n\nconst basicMetaTags = (props) => {\n  const { title = \"Codeilm\" } = props\n  const { description = \"Codeilm is the online community for developers to Share, Inspire & Teach, how they build their Projects, in the form of Tutorials using Markdown.\" } = props\n  const { canonicalUrl = \"https://codeilm.com\" } = props\n\n  return (\n    <Helmet\n      titleTemplate=\"%s - Codeilm\"\n      defaultTitle=\"Codeilm\"\n    >\n\n    <title itemProp=\"name\" lang=\"en\">{ title }</title>\n    <meta name=\"description\" content={ description } />\n\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:title\" content={ title } />\n    <meta property=\"og:description\" content={ description } />\n    <meta property=\"og:url\" content={ canonicalUrl } />\n    <meta property=\"og:image\" content=\"https://codeilm.com/static/images/logo/codeilm.png\" />\n\n    <link rel=\"canonical\" href={ canonicalUrl } />\n\n    <link rel=\"apple-touch-icon\" href=\"https://codeilm.com/static/images/logo/codeilm.png\" />\n    <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"https://codeilm.com/static/images/logo/codeilm.png\" />\n\n\n</Helmet>\n  )\n}\n\nexport default basicMetaTags\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - http://v4-alpha.getbootstrap.com/layout/flexbox-grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: -themeSpacing / 2,\n      width: \"calc(100% + \".concat(themeSpacing, \"px)\"),\n      '& > $item': {\n        padding: themeSpacing / 2\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), breakpointKeys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function (props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  // can't use named function expression since the function body references `Grid`\n  // which would point to the render function instead of the actual component\n  Grid.displayName = 'ForwardRef(Grid)';\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { FaGithub } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { FaRegPaperPlane } from \"react-icons/fa\";\nimport BasicMetaTags from '../MetaTags/BasicMetaTags'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n}));\n\nexport default function TutorialCreateDialog() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <BasicMetaTags title=\"Create your story\" />\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Link to=\"/create/github\">\n            <Paper className={classes.paper}>\n              <IconContext.Provider value={{ size: '4em' }}>\n                <FaGithub />\n              </IconContext.Provider>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Create a story from a GitHub repository\n              </Typography>\n            </Paper>\n          </Link>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Link to=\"/create/new\">\n            <Paper className={classes.paper}>\n              <IconContext.Provider value={{ size: '4em' }}>\n                <FaRegPaperPlane />\n              </IconContext.Provider>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Create a new story\n              </Typography>\n            </Paper>\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"],"sourceRoot":""}