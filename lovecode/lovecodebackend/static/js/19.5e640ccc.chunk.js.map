{"version":3,"sources":["containers/RepoList/RepoList.js"],"names":["RepoList","state","userrepositories","links","pageNumber","loading","hasMoreRepo","error","fetchRepositories","axios","defaults","headers","common","concat","localStorage","getItem","get","_this","then","response","setState","data","next","catch","handleClick","repo","props","setRepoData","history","push","pathname","name","search","default_branch","this","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_9___default","dataLength","length","hasMore","loader","_components_UI_PageLayout_PageLayout__WEBPACK_IMPORTED_MODULE_10__","_components_UI_SkeletonLoaders_ListPageSkeleton__WEBPACK_IMPORTED_MODULE_11__","map","content","style","paddingLeft","description","stargazers_count","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_16__","marginRight","size","avatar","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_17__","react_icons_go__WEBPACK_IMPORTED_MODULE_15__","label","forks_count","_components_UI_MediaCard_MediaCard__WEBPACK_IMPORTED_MODULE_8__","key","id","onClick","title","React","Component","withErrorHandler","withRouter","connect","dispatch","actionCreators"],"mappings":"8QAkBMA,6MAEJC,MAAQ,CACNC,iBAAkB,GAClBC,MAAM,GACNC,WAAY,EACZC,SAAS,EACTC,aAAa,EACbC,MAAO,QAGTC,kBAAoB,WAClBC,IAAMC,SAASC,QAAQC,OAAvB,qBAAAC,OAAwDC,aAAaC,QAAQ,UAC7EN,IAAMO,IAAI,qBAAuBC,EAAKhB,MAAMG,YACzCc,KAAK,SAAAC,GACDA,GAEDF,EAAKG,SAAS,SAAAnB,GAAK,MAAK,CACtBC,iBAAkBD,EAAMC,iBAAiBW,OAAOM,EAASE,KAAKA,MAC9DlB,MAAOgB,EAASE,KAAKlB,MACrBE,SAAS,EACTC,cAAaa,EAASE,KAAKlB,MAAMmB,KACjClB,WAAYe,EAASE,KAAKlB,MAAMmB,KAAOH,EAASE,KAAKlB,MAAMmB,MAAQ,OAKxEC,MAAM,SAAAhB,GACLU,EAAKG,SAAS,CACZb,MAAOA,EACPF,SAAS,SASjBmB,YAAc,SAAAC,GACZR,EAAKS,MAAMC,YAAYF,GACvBR,EAAKS,MAAME,QAAQC,KAAK,CACtBC,SAAQ,WAAAjB,OAAaY,EAAKM,MAC1BC,OAAM,gBAAAnB,OAAkBY,EAAKQ,sGAP/BC,KAAK1B,qDAWE,IAAA2B,EAAAD,KACP,OACEE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,WAAYN,KAAKjC,MAAMC,iBAAiBuC,OACxCnB,KAAMY,KAAK1B,kBACXkC,QAASR,KAAKjC,MAAMK,YACpBqC,OAAQP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAYR,EAAAC,EAAAC,cAACO,EAAA,EAAD,QAEvBX,KAAKjC,MAAMC,iBAAiB4C,IAAI,SAAArB,GAC/B,IAAMsB,EACJX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,YAAa,SAC1Bb,EAAAC,EAAAC,cAAA,SAAIb,EAAKyB,aACRzB,EAAK0B,iBACJf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACAJ,MAAO,CAACK,YAAa,QACrBC,KAAK,QACLC,OACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,OAGJC,MAAOjC,EAAK0B,iBAAmB,EAAI1B,EAAK0B,iBAAmB,SAAW1B,EAAK0B,iBAAmB,UAG9F,KACD1B,EAAKkC,YACJvB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACAE,KAAK,QACLC,OACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,OAGJC,MAAOjC,EAAKkC,YAAc,EAAIlC,EAAKkC,YAAc,SAAWlC,EAAKkC,YAAc,UAE7E,MAIN,OACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACAC,IAAKpC,EAAKqC,GACVC,QAAS,kBAAM5B,EAAKX,YAAYC,IAChCuC,MAAOvC,EAAKM,KACZgB,QAASA,cA3FIkB,IAAMC,WA4GdC,sBAAiBC,YAAWC,YAAQ,KANtB,SAAAC,GAC3B,MAAO,CACL3C,YAAa,SAAAN,GAAI,OAAIiD,EAASC,IAA2BlD,OAIlBgD,CAAoCrE,IAAYS,IAAO","file":"static/js/19.5e640ccc.chunk.js","sourcesContent":["import React from 'react'\nimport axios from '../../lovecodeaxios'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport MediaCard from '../../components/UI/MediaCard/MediaCard'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\nimport PageLayout from '../../components/UI/PageLayout/PageLayout'\nimport ListPageSkeleton from '../../components/UI/SkeletonLoaders/ListPageSkeleton'\nimport { withRouter } from \"react-router\";\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index'\nimport { GoRepoForked } from \"react-icons/go\";\nimport { GoStar } from \"react-icons/go\";\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\n\n\n\nclass RepoList extends React.Component {\n\n  state = {\n    userrepositories: [],\n    links:{},\n    pageNumber: 0,\n    loading: true,\n    hasMoreRepo: false,\n    error: null\n  }\n\n  fetchRepositories = () => {\n    axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n    axios.get('/userrepositories/' + this.state.pageNumber)\n      .then(response => {\n        if(response) {\n\n          this.setState(state => ({\n            userrepositories: state.userrepositories.concat(response.data.data),\n            links: response.data.links,\n            loading: false,\n            hasMoreRepo: response.data.links.next ? true : false,\n            pageNumber: response.data.links.next ? response.data.links.next : -1\n          }))\n        }\n\n      })\n      .catch(error => {\n        this.setState({\n          error: error,\n          loading: false\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.fetchRepositories()\n  }\n\n  handleClick = repo => {\n    this.props.setRepoData(repo)\n    this.props.history.push({\n      pathname: `/create/${repo.name}`,\n      search: `?branch_name=${repo.default_branch}`\n    })\n  }\n\n  render() {\n    return (\n      <InfiniteScroll\n          dataLength={this.state.userrepositories.length}\n          next={this.fetchRepositories}\n          hasMore={this.state.hasMoreRepo}\n          loader={<PageLayout><ListPageSkeleton /></PageLayout>}\n      >\n      {this.state.userrepositories.map(repo => {\n        const content = (\n          <div style={{paddingLeft: '13px'}}>\n          <p>{repo.description}</p>\n          {repo.stargazers_count ?\n            <Chip\n            style={{marginRight: '10px'}}\n            size=\"small\"\n            avatar={\n              <Avatar>\n                <GoStar />\n              </Avatar>\n            }\n            label={repo.stargazers_count > 1 ? repo.stargazers_count + \" stars\" : repo.stargazers_count + \" star\"}\n            />\n\n          : null}\n          {repo.forks_count ?\n            <Chip\n            size=\"small\"\n            avatar={\n              <Avatar>\n                <GoRepoForked />\n              </Avatar>\n            }\n            label={repo.forks_count > 1 ? repo.forks_count + \" forks\" : repo.forks_count + \" fork\"}\n            />\n            : null}\n          </div>\n\n        )\n        return (\n          <MediaCard\n          key={repo.id}\n          onClick={() => this.handleClick(repo)}\n          title={repo.name}\n          content={content}\n          />\n        )\n      }\n\n    )}\n      </InfiniteScroll>\n    )\n  }\n}\n\nconst matchDispatchToProps = dispatch => {\n  return {\n    setRepoData: data => dispatch(actionCreators.setRepoData(data))\n  }\n}\n\nexport default withErrorHandler(withRouter(connect(null, matchDispatchToProps)(RepoList)), axios, \"circular\")\n"],"sourceRoot":""}