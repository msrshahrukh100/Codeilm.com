{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/AsyncButton.js","../src/CopyButton.js","../src/Modal.js","../src/TempValue.js","../src/LocalStorage.js","../src/useOnline.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React from 'react'\n\nexport function useAsyncCallback(cb) {\n  const [loading, setLoading] = React.useState(null)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const passedCallback = React.useCallback(\n    async function(...props) {\n      setLoading(true)\n      setError(null)\n      try {\n        const response = await cb(...props)\n        setData(response)\n        return response\n      } catch (e) {\n        setError(e)\n      } finally {\n        setLoading(false)\n      }\n    },\n    [cb]\n  )\n\n  return [\n    passedCallback,\n    {\n      data,\n      loading,\n      error\n    }\n  ]\n}\n\nexport const AsyncButton = React.memo(function AsyncButton(props) {\n  const [onClick, { data, loading, error }] = useAsyncCallback(props.onClick)\n  return props.children({\n    data,\n    loading,\n    error,\n    onClick\n  })\n})\n","import React from 'react'\nimport copy from 'copy-to-clipboard'\n\nimport { useAsyncCallback } from './AsyncButton'\n\nconst wait = t => new Promise(res => setTimeout(res, t))\n\nexport function useCopyTextHandler(textToCopy, { interval } = {}) {\n  const [onClick, { loading: copied }] = useAsyncCallback(async () => {\n    copy(textToCopy)\n    if (interval !== 0) {\n      await wait(interval == null ? 1000 : interval)\n    }\n  }, [textToCopy, interval])\n\n  return {\n    onClick,\n    copied\n  }\n}\n\nexport const CopyButton = React.memo(function CopyButton(props) {\n  return props.children(useCopyTextHandler(props.text, { interval: props.interval }))\n})\n","import React from 'react'\nimport enhanceWithClickOutside from 'react-click-outside'\n\nexport const useEventListener = function(eventName, handler) {\n  return React.useEffect(() => {\n    document.addEventListener(eventName, handler, false)\n\n    return () => document.removeEventListener(eventName, handler, false)\n  })\n}\n\nexport const useKeyboardListener = function(key, handler) {\n  const handleKeyDown = React.useCallback(\n    function handleKeyDown(event) {\n      if (event.key === key) {\n        return handler(event)\n      }\n    },\n    [key, handler]\n  )\n\n  useEventListener('keydown', handleKeyDown)\n}\n\nconst ESCAPE_KEY = 'Escape'\n\nconst ClickAway = enhanceWithClickOutside(\n  class WrappedComponent extends React.PureComponent {\n    handleClickOutside(e) {\n      this.props.onClickAway(e)\n    }\n    render() {\n      return this.props.children\n    }\n  }\n)\n\nexport const Modal = React.memo(props => {\n  useKeyboardListener(ESCAPE_KEY, props.onClickAway)\n  return <ClickAway onClickAway={props.onClickAway}>{props.open ? props.children : null}</ClickAway>\n})\n\nModal.displayName = 'Modal'\n","import React from 'react'\nimport isEqual from 'react-fast-compare'\n\nimport { useAsyncCallback } from './AsyncButton'\n\nexport function useTempValue(initialValue, { onSubmit, onReset } = {}) {\n  const [value, setState] = React.useState(initialValue)\n  const [baseValue, setBaseValue] = React.useState(initialValue)\n\n  const hasChanged = !React.useMemo(() => isEqual(baseValue, value), [baseValue, value])\n\n  const onInputChange = React.useCallback(e => setState(e.target.value), [setState])\n\n  const [handleSubmit, { data, loading, error }] = useAsyncCallback(async () => {\n    if (onSubmit) {\n      await onSubmit(value)\n    }\n    setBaseValue(value)\n  })\n\n  function handleReset() {\n    if (onReset) {\n      onReset(value)\n    }\n    setState(baseValue)\n  }\n\n  return {\n    value,\n    hasChanged,\n    data,\n    loading,\n    error,\n    onChange: setState,\n    onInputChange,\n    reset: handleReset,\n    submit: handleSubmit\n  }\n}\n\nexport const TempValue = React.memo(function TempValue(props) {\n  const all = useTempValue(props.initialValue, props)\n\n  return props.children(all)\n})\n\nfunction noop() {}\nTempValue.defaultProps = {\n  onReset: noop,\n  onSubmit: noop\n}\n","import React from 'react'\n\nconst stringify = value => (typeof value === 'string' ? value : JSON.stringify(value))\nconst parse = o => {\n  try {\n    return JSON.parse(o)\n  } catch (error) {\n    return o\n  }\n}\n\nexport function useLocalStorage(key) {\n  const [state, setState] = React.useState(null)\n\n  React.useEffect(() => {\n    if (localStorage.hasOwnProperty(key)) {\n      // get the key's value from localStorage\n      let value = localStorage.getItem(key)\n\n      // parse the localStorage string and setState\n      setState(parse(value))\n    }\n  }, [key])\n\n  React.useEffect(() => {\n    function handleStorageChange(e) {\n      const { isTrusted, newValue: value } = e\n\n      if (isTrusted) {\n        setState(value)\n      }\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n\n    return () => window.removeEventListener('storage', handleStorageChange)\n  }, [])\n\n  React.useEffect(() => {\n    if (state == undefined) {\n      localStorage.removeItem(key)\n    } else {\n      localStorage.setItem(key, stringify(state))\n    }\n  }, [key, state])\n\n  return [state, setState]\n}\n","import React from 'react'\n\nfunction useWindowListener(key, fn) {\n  const callbackRef = React.useRef(fn)\n\n  React.useEffect(() => {\n    const cb = callbackRef.current\n    window.addEventListener(key, cb)\n    return () => window.removeEventListener(key, cb)\n  }, [key])\n}\n\nexport function useOnline() {\n  const [online, setOnline] = React.useState(true)\n\n  React.useEffect(() => {\n    setOnline(\n      typeof navigator !== 'undefined' && typeof navigator.onLine === 'boolean'\n        ? navigator.onLine\n        : true\n    )\n  }, [])\n\n  useWindowListener('offline', () => setOnline(false))\n  useWindowListener('online', () => setOnline(true))\n\n  return online\n}\n"],"names":["_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","asyncIterator","_yield","next","Promise","resolve","returnValue","error","return","throw","reject","useAsyncCallback","cb","React","useState","useCallback","setLoading","setError","body","finalizer","recover","props","response","setData","data","loading","AsyncButton","memo","onClick","children","wait","t","res","setTimeout","useCopyTextHandler","textToCopy","ref","copy","interval","CopyButton","text","useEventListener","eventName","handler","useEffect","document","addEventListener","removeEventListener","useKeyboardListener","key","handleKeyDown","event","ClickAway","enhanceWithClickOutside","handleClickOutside","onClickAway","render","Modal","open","useTempValue","initialValue","hasChanged","useMemo","isEqual","baseValue","onInputChange","setState","target","setBaseValue","onSubmit","onChange","reset","onReset","submit","displayName","TempValue","all","noop","defaultProps","stringify","JSON","parse","useWindowListener","fn","callbackRef","useRef","current","window","localStorage","hasOwnProperty","getItem","handleStorageChange","undefined","removeItem","setItem","setOnline","navigator","onLine","online"],"mappings":"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"}