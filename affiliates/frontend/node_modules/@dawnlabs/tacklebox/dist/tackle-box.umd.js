(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/slicedToArray'), require('react'), require('react-copy-to-clipboard'), require('.'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits'), require('react-click-outside'), require('react-fast-compare'), require('@babel/runtime/helpers/defineProperty'), require('@babel/runtime/helpers/assertThisInitialized')) :
  typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/slicedToArray', 'react', 'react-copy-to-clipboard', '.', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits', 'react-click-outside', 'react-fast-compare', '@babel/runtime/helpers/defineProperty', '@babel/runtime/helpers/assertThisInitialized'], factory) :
  (factory((global.TackleBox = {}),global._regeneratorRuntime,global._asyncToGenerator,global._slicedToArray,global.React,global.CopyToClipboard,global._,global._classCallCheck,global._createClass,global._possibleConstructorReturn,global._getPrototypeOf,global._inherits,global.enhanceWithClickOutside,global.isEqual,global._defineProperty,global._assertThisInitialized));
}(this, (function (exports,_regeneratorRuntime,_asyncToGenerator,_slicedToArray,React,CopyToClipboard,_,_classCallCheck,_createClass,_possibleConstructorReturn,_getPrototypeOf,_inherits,enhanceWithClickOutside,isEqual,_defineProperty,_assertThisInitialized) { 'use strict';

  _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;
  _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;
  _slicedToArray = _slicedToArray && _slicedToArray.hasOwnProperty('default') ? _slicedToArray['default'] : _slicedToArray;
  var React__default = 'default' in React ? React['default'] : React;
  CopyToClipboard = CopyToClipboard && CopyToClipboard.hasOwnProperty('default') ? CopyToClipboard['default'] : CopyToClipboard;
  _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;
  _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;
  _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;
  _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;
  _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;
  enhanceWithClickOutside = enhanceWithClickOutside && enhanceWithClickOutside.hasOwnProperty('default') ? enhanceWithClickOutside['default'] : enhanceWithClickOutside;
  isEqual = isEqual && isEqual.hasOwnProperty('default') ? isEqual['default'] : isEqual;
  _defineProperty = _defineProperty && _defineProperty.hasOwnProperty('default') ? _defineProperty['default'] : _defineProperty;
  _assertThisInitialized = _assertThisInitialized && _assertThisInitialized.hasOwnProperty('default') ? _assertThisInitialized['default'] : _assertThisInitialized;

  function useAsyncCallback(cb) {
    var _useState = React.useState(null),
        _useState2 = _slicedToArray(_useState, 2),
        loading = _useState2[0],
        setLoading = _useState2[1];

    var _useState3 = React.useState(null),
        _useState4 = _slicedToArray(_useState3, 2),
        error = _useState4[0],
        setError = _useState4[1];

    var _useState5 = React.useState(null),
        _useState6 = _slicedToArray(_useState5, 2),
        data = _useState6[0],
        setData = _useState6[1];

    return [
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee() {
      var response,
          _args = arguments;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              setError(null);
              _context.prev = 2;
              _context.next = 5;
              return cb.apply(void 0, _args);

            case 5:
              response = _context.sent;
              setData(response);
              return _context.abrupt("return", response);

            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](2);
              setError(_context.t0);

            case 13:
              _context.prev = 13;
              setLoading(false);
              return _context.finish(13);

            case 16:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this, [[2, 10, 13, 16]]);
    })), {
      data: data,
      loading: loading,
      error: error
    }];
  }
  var AsyncButton = React.memo(function AsyncButton(props) {
    var _useAsyncCallback = useAsyncCallback(props.onClick),
        _useAsyncCallback2 = _slicedToArray(_useAsyncCallback, 2),
        onClick = _useAsyncCallback2[0],
        _useAsyncCallback2$ = _useAsyncCallback2[1],
        data = _useAsyncCallback2$.data,
        loading = _useAsyncCallback2$.loading,
        error = _useAsyncCallback2$.error;

    return props.children({
      data: data,
      loading: loading,
      error: error,
      onClick: onClick
    });
  });

  var wait = function wait(t) {
    return function () {
      return new Promise(function (res) {
        return setTimeout(res, t);
      });
    };
  };

  var CopyButton = React.memo(function CopyButton(props) {
    var _useAsyncCallback = _.useAsyncCallback(wait(props.interval == null ? 1000 : props.interval)),
        _useAsyncCallback2 = _slicedToArray(_useAsyncCallback, 2),
        onCopy = _useAsyncCallback2[0],
        copied = _useAsyncCallback2[1].loading;

    return React__default.createElement(CopyToClipboard, {
      text: props.text,
      onCopy: onCopy
    }, props.children({
      copied: copied
    }));
  });

  var useEventListener = function useEventListener(eventName, handler) {
    return React.useEffect(function () {
      document.addEventListener(eventName, handler, false);
      return function () {
        return document.removeEventListener(eventName, handler, false);
      };
    });
  };
  var useKeyboardListener = function useKeyboardListener(key, handler) {
    function handleKeyDown(event) {
      if (event.key === key) {
        return handler(event);
      }
    }

    return useEventListener('keydown', handleKeyDown);
  };
  var ESCAPE_KEY = 'Escape';
  var ClickAway = enhanceWithClickOutside(
  /*#__PURE__*/
  function (_React$PureComponent) {
    _inherits(WrappedComponent, _React$PureComponent);

    function WrappedComponent() {
      _classCallCheck(this, WrappedComponent);

      return _possibleConstructorReturn(this, _getPrototypeOf(WrappedComponent).apply(this, arguments));
    }

    _createClass(WrappedComponent, [{
      key: "handleClickOutside",
      value: function handleClickOutside(e) {
        this.props.onClickAway(e);
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.children;
      }
    }]);

    return WrappedComponent;
  }(React__default.PureComponent));
  var Modal = React.memo(function (props) {
    useKeyboardListener(ESCAPE_KEY, props.onClickAway);
    return React__default.createElement(ClickAway, {
      onClickAway: props.onClickAway
    }, props.open ? props.children : null);
  });
  Modal.displayName = 'Modal';

  function useTempValue(initialValue) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        onSubmit = _ref.onSubmit,
        onReset = _ref.onReset;

    var _useState = React.useState(initialValue),
        _useState2 = _slicedToArray(_useState, 2),
        value = _useState2[0],
        setState = _useState2[1];

    var _useState3 = React.useState(initialValue),
        _useState4 = _slicedToArray(_useState3, 2),
        baseValue = _useState4[0],
        setBaseValue = _useState4[1];

    var hasChanged = !React.useMemo(function () {
      return isEqual(baseValue, value);
    }, [baseValue, value]);

    var _useAsyncCallback = _.useAsyncCallback(
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee() {
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!onSubmit) {
                _context.next = 3;
                break;
              }

              _context.next = 3;
              return onSubmit(value);

            case 3:
              setBaseValue(value);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }))),
        _useAsyncCallback2 = _slicedToArray(_useAsyncCallback, 2),
        handleSubmit = _useAsyncCallback2[0],
        _useAsyncCallback2$ = _useAsyncCallback2[1],
        data = _useAsyncCallback2$.data,
        loading = _useAsyncCallback2$.loading,
        error = _useAsyncCallback2$.error;

    function handleReset() {
      if (onReset) {
        onReset(value);
      }

      setState(baseValue);
    }

    return {
      value: value,
      hasChanged: hasChanged,
      data: data,
      loading: loading,
      error: error,
      onChange: setState,
      onInputChange: function onInputChange(e) {
        return setState(e.target.value);
      },
      reset: handleReset,
      submit: handleSubmit
    };
  }
  var TempValue = React.memo(function TempValue(props) {
    var all = useTempValue(props.initialValue, props);
    return props.children(all);
  });

  function noop() {}

  TempValue.defaultProps = {
    onReset: noop,
    onSubmit: noop
  };

  var toString = function toString(value) {
    return JSON.stringify(value);
  };

  function useLocalStorage(key) {
    var _useState = React.useState(null),
        _useState2 = _slicedToArray(_useState, 2),
        state = _useState2[0],
        setState = _useState2[1];

    React.useEffect(function () {
      if (localStorage.hasOwnProperty(key)) {
        // get the key's value from localStorage
        var value = localStorage.getItem(key); // parse the localStorage string and setState

        try {
          value = JSON.parse(value);
        } finally {
          setState(value);
        }
      }
    }, []);

    function handleStorageChange(e) {
      var isTrusted = e.isTrusted,
          value = e.newValue;

      if (isTrusted) {
        setState(value);
      }
    }

    React.useEffect(function () {
      window.addEventListener('storage', handleStorageChange);
      return function () {
        return window.removeEventListener('storage', handleStorageChange);
      };
    }, []);
    React.useEffect(function () {
      if (state == undefined) {
        localStorage.removeItem(key);
      } else {
        localStorage.setItem(key, toString(state));
      }
    }, [key, state]);
    return {
      state: state,
      setState: setState
    };
  }
  var LocalStorage =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(LocalStorage, _React$Component);

    function LocalStorage(props) {
      var _this;

      _classCallCheck(this, LocalStorage);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalStorage).call(this, props));
      _this.state = {};
      _this.normalizeSetState = _this.normalizeSetState.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      _this.update = _this.update.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      _this.clear = _this.clear.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      _this.clearState = _this.clearState.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      _this.handleStorageChange = _this.handleStorageChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      _this.handleStorageUpdate = _this.handleStorageUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));
      return _this;
    }

    _createClass(LocalStorage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.storage = window.localStorage;
        var component = this; // https://hackernoon.com/how-to-take-advantage-of-local-storage-in-your-react-projects-a895f2b2d3f2

        Object.keys(this.state).forEach(function (key) {
          // if the key exists in localStorage
          if (localStorage.hasOwnProperty(key)) {
            // get the key's value from localStorage
            var value = localStorage.getItem(key); // parse the localStorage string and setState

            try {
              value = JSON.parse(value);
              component.setState(_defineProperty({}, key, value));
            } catch (e) {
              // handle empty string
              component.setState(_defineProperty({}, key, value));
            }
          }
        });
        window.addEventListener('storage', this.handleStorageChange);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        window.removeEventListener('storage', this.handleStorageChange);
      }
    }, {
      key: "handleStorageChange",
      value: function handleStorageChange(e) {
        var isTrusted = e.isTrusted,
            key = e.key,
            value = e.newValue;

        if (isTrusted) {
          if (key) {
            this.normalizeSetState(key, value);
          } else {
            this.clearState();
          }
        }
      }
    }, {
      key: "normalizeSetState",
      value: function normalizeSetState(key, value) {
        if (value == null) {
          this.setState(_defineProperty({}, key, undefined));
        } else {
          this.setState(_defineProperty({}, key, value));
        }
      }
    }, {
      key: "handleStorageUpdate",
      value: function handleStorageUpdate(key, value) {
        if (this.storage) {
          if (value == null) {
            this.storage.removeItem(key);
          } else {
            this.storage.setItem(key, toString(value));
          }
        }
      }
    }, {
      key: "update",
      value: function update(changes) {
        var _this2 = this;

        this.setState(changes, function () {
          Object.keys(_this2.state).map(function (key) {
            return _this2.handleStorageUpdate(key, changes[key]);
          });
        });
      }
    }, {
      key: "clear",
      value: function clear() {
        this.storage && this.storage.clear();
        this.clearState();
      }
    }, {
      key: "clearState",
      value: function clearState() {
        var _this3 = this;

        Object.keys(this.state).forEach(function (key) {
          return _this3.normalizeSetState(key, undefined);
        });
      }
    }, {
      key: "render",
      value: function render() {
        return this.props.children({
          state: this.state,
          setState: this.update,
          clear: this.clear
        });
      }
    }]);

    return LocalStorage;
  }(React__default.Component);

  exports.useAsyncCallback = useAsyncCallback;
  exports.AsyncButton = AsyncButton;
  exports.CopyButton = CopyButton;
  exports.useEventListener = useEventListener;
  exports.useKeyboardListener = useKeyboardListener;
  exports.Modal = Modal;
  exports.useTempValue = useTempValue;
  exports.TempValue = TempValue;
  exports.useLocalStorage = useLocalStorage;
  exports.LocalStorage = LocalStorage;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=tackle-box.umd.js.map
