"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var useState = React.useState, useEffect = React.useEffect;
var defaults = {
    useKeyboardJS: false
};
var useKeyPress = function (targetKey, config) {
    if (config === void 0) { config = defaults; }
    var _a = useState(false), state = _a[0], setState = _a[1];
    var _b = useState(null), keyboardjs = _b[0], setKeyboardJs = _b[1];
    var useKeyboardJS = config.useKeyboardJS;
    if (useKeyboardJS) {
        Promise.resolve().then(function () { return require("keyboardjs"); }).then(setKeyboardJs);
    }
    var regularDownHandler = function (_a) {
        var key = _a.key;
        if (key === targetKey) {
            setState(true);
        }
    };
    var regularUpHandler = function (_a) {
        var key = _a.key;
        if (key === targetKey) {
            setState(false);
        }
    };
    var customDownHandler = function () {
        setState(true);
    };
    var customUpHandler = function () {
        setState(false);
    };
    useEffect(function () {
        if (useKeyboardJS) {
            if (keyboardjs) {
                keyboardjs.bind(targetKey, customDownHandler, customUpHandler);
            }
        }
        else {
            window.addEventListener("keydown", regularDownHandler);
            window.addEventListener("keyup", regularUpHandler);
        }
        return function () {
            if (useKeyboardJS) {
                if (keyboardjs) {
                    keyboardjs.unbind(targetKey, customDownHandler, customUpHandler);
                }
            }
            else {
                window.removeEventListener("keydown", regularDownHandler);
                window.removeEventListener("keyup", regularUpHandler);
            }
        };
    }, [targetKey, useKeyPress, keyboardjs]);
    return state;
};
exports.default = useKeyPress;
