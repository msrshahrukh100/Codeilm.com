{"map":"{\"version\":3,\"sources\":[\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/components/UI/CircularPreloader/CircularPreloader.js\",\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/hoc/asyncComponent/asyncComponent.js\",\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/hoc/Layout/Layout.js\",\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/App.js\",\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/serviceWorker.js\",\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/index.js\"],\"names\":[\"useStyles\",\"makeStyles\",\"theme\",\"progress\",\"margin\",\"spacing\",\"CircularIndeterminate\",\"classes\",\"react_default\",\"a\",\"createElement\",\"style\",\"textAlign\",\"marginTop\",\"CircularProgress\",\"className\",\"asyncComponent\",\"importComponent\",\"_Component\",\"_temp\",\"_getPrototypeOf2\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"apply\",\"concat\",\"state\",\"component\",\"inherits\",\"createClass\",\"key\",\"value\",\"_this2\",\"then\",\"cmp\",\"setState\",\"default\",\"C\",\"props\",\"Component\",\"TutorialList\",\"Promise\",\"all\",\"__webpack_require__\",\"e\",\"bind\",\"TutorialDetail\",\"Layout\",\"Fragment\",\"react_router\",\"path\",\"render\",\"React\",\"App\",\"prevProps\",\"userId\",\"console\",\"log\",\"ReactGA\",\"set\",\"hoc_Layout_Layout\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"debug\",\"initialize\",\"history\",\"createBrowserHistory\",\"listen\",\"pageview\",\"pathname\",\"search\",\"app\",\"basename\",\"src_App\",\"ReactDOM\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  progress: {\\n    margin: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function CircularIndeterminate() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div style={{textAlign: 'center', marginTop: 30}}>\\n      <CircularProgress className={classes.progress} />\\n    </div>\\n  );\\n}\\n\",\"import React, { Component } from 'react';\\nimport CircularPreloader from '../../components/UI/CircularPreloader/CircularPreloader'\\n\\nconst asyncComponent = (importComponent) => {\\n    return class extends Component {\\n        state = {\\n            component: null\\n        }\\n\\n        componentDidMount () {\\n            importComponent()\\n                .then(cmp => {\\n                    this.setState({component: cmp.default});\\n                });\\n        }\\n\\n        render () {\\n            const C = this.state.component;\\n\\n            return C ? <C {...this.props} /> : <CircularPreloader />;\\n        }\\n    }\\n}\\n\\nexport default asyncComponent;\\n\",\"import React from 'react'\\nimport { Route, Switch } from 'react-router-dom'\\nimport asyncComponent from '../asyncComponent/asyncComponent';\\n\\nconst TutorialList = asyncComponent(() => {\\n  return import('../../containers/TutorialList/TutorialList');\\n});\\n\\nconst TutorialDetail = asyncComponent(() => {\\n  return import('../../containers/TutorialDetail/TutorialDetail');\\n});\\n\\n\\nclass Layout extends React.Component {\\n  state = {}\\n  render() {\\n    return (\\n      <>\\n      <Switch>\\n        <Route path='/stories/:tutorialId/:slug/:activeStep/:stepSlug' component={TutorialDetail} />\\n        <Route path='/stories/:tutorialId/:slug/:activeStep' component={TutorialDetail} />\\n        <Route path='/stories/:tutorialId/:slug/' component={TutorialDetail} />\\n\\n        <Route path='/stories' component={TutorialList} />\\n        <Route render={() => <h1>404 page is yet to be found</h1>} />\\n      </Switch>\\n      </>\\n    )\\n  }\\n}\\n\\nexport default Layout\\n\",\"import React, { Component } from 'react';\\nimport Layout from './hoc/Layout/Layout'\\nimport ReactGA from 'react-ga';\\n\\nclass App extends Component {\\n\\n  componentDidUpdate(prevProps) {\\n    if(this.props.userId) {\\n      console.log(this.props.userId);\\n      ReactGA.set({ userId: this.props.userId });\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <Layout />\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { Router } from 'react-router-dom'\\nimport { createBrowserHistory } from 'history'\\nimport ReactGA from 'react-ga';\\n\\nconst debug = window.location.hostname === \\\"localhost\\\" || window.location.hostname === \\\"127.0.0.1\\\"\\n\\nReactGA.initialize('UA-142472289-1', {debug: debug});\\n\\nconst history = createBrowserHistory();\\n\\nhistory.listen(function (location) {\\n  ReactGA.pageview(location.pathname + location.search)\\n})\\nReactGA.pageview(\\\"/stories\\\")\\n\\n\\nconst app = (\\n  <Router basename='/' history={history}>\\n    <App/>\\n  </Router>\\n)\\n\\n\\nReactDOM.render(app, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{45:function(e,t,n){e.exports=n(56)},50:function(e,t,n){},56:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(32),c=n.n(o),i=(n(50),n(12)),l=n(13),s=n(15),u=n(14),p=n(16),m=n(59),h=n(68),d=n(69),f=Object(h.a)(function(e){return{progress:{margin:e.spacing(2)}}});function v(){var e=f();return r.a.createElement(\"div\",{style:{textAlign:\"center\",marginTop:30}},r.a.createElement(d.a,{className:e.progress}))}var b=function(e){return function(t){function n(){var e,t;Object(i.a)(this,n);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(t=Object(s.a)(this,(e=Object(u.a)(n)).call.apply(e,[this].concat(r)))).state={component:null},t}return Object(p.a)(n,t),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){var t=this;e().then(function(e){t.setState({component:e.default})})}},{key:\"render\",value:function(){var e=this.state.component;return e?r.a.createElement(e,this.props):r.a.createElement(v,null)}}]),n}(a.Component)},g=b(function(){return Promise.all([n.e(0),n.e(7),n.e(1),n.e(8)]).then(n.bind(null,877))}),w=b(function(){return Promise.all([n.e(0),n.e(4),n.e(1),n.e(6)]).then(n.bind(null,873))}),j=function(e){function t(){var e,n;Object(i.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(m.c,null,r.a.createElement(m.a,{path:\"/stories/:tutorialId/:slug/:activeStep/:stepSlug\",component:w}),r.a.createElement(m.a,{path:\"/stories/:tutorialId/:slug/:activeStep\",component:w}),r.a.createElement(m.a,{path:\"/stories/:tutorialId/:slug/\",component:w}),r.a.createElement(m.a,{path:\"/stories\",component:g}),r.a.createElement(m.a,{render:function(){return r.a.createElement(\"h1\",null,\"404 page is yet to be found\")}})))}}]),t}(r.a.Component),O=n(17),E=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"componentDidUpdate\",value:function(e){this.props.userId&&(console.log(this.props.userId),O.a.set({userId:this.props.userId}))}},{key:\"render\",value:function(){return r.a.createElement(j,null)}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var y=n(9),k=\"localhost\"===window.location.hostname||\"127.0.0.1\"===window.location.hostname;O.a.initialize(\"UA-142472289-1\",{debug:k});var I=Object(y.a)();I.listen(function(e){O.a.pageview(e.pathname+e.search)}),O.a.pageview(\"/stories\");var A=r.a.createElement(m.b,{basename:\"/\",history:I},r.a.createElement(E,null));c.a.render(A,document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[45,3,5]]]);","extractedComments":[]}