{"ast":null,"code":"(function (root) {\n  // lazy require symbols table\n  var _symbols, removelist;\n\n  function symbols(code) {\n    if (_symbols) return _symbols[code];\n    _symbols = require('unicode/category/So');\n    removelist = ['sign', 'cross', 'of', 'symbol', 'staff', 'hand', 'black', 'white'].map(function (word) {\n      return new RegExp(word, 'gi');\n    });\n    return _symbols[code];\n  }\n\n  function slug(string, opts) {\n    string = string.toString();\n    if ('string' === typeof opts) opts = {\n      replacement: opts\n    };\n    opts = opts || {};\n    opts.mode = opts.mode || slug.defaults.mode;\n    var defaults = slug.defaults.modes[opts.mode];\n    var keys = ['replacement', 'multicharmap', 'charmap', 'remove', 'lower'];\n\n    for (var key, i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      opts[key] = key in opts ? opts[key] : defaults[key];\n    }\n\n    if ('undefined' === typeof opts.symbols) opts.symbols = defaults.symbols;\n    var lengths = [];\n\n    for (var key in opts.multicharmap) {\n      if (!opts.multicharmap.hasOwnProperty(key)) continue;\n      var len = key.length;\n      if (lengths.indexOf(len) === -1) lengths.push(len);\n    }\n\n    var code,\n        unicode,\n        result = \"\";\n\n    for (var char, i = 0, l = string.length; i < l; i++) {\n      char = string[i];\n\n      if (!lengths.some(function (len) {\n        var str = string.substr(i, len);\n\n        if (opts.multicharmap[str]) {\n          i += len - 1;\n          char = opts.multicharmap[str];\n          return true;\n        } else return false;\n      })) {\n        if (opts.charmap[char]) {\n          char = opts.charmap[char];\n          code = char.charCodeAt(0);\n        } else {\n          code = string.charCodeAt(i);\n        }\n\n        if (opts.symbols && (unicode = symbols(code))) {\n          char = unicode.name.toLowerCase();\n\n          for (var j = 0, rl = removelist.length; j < rl; j++) {\n            char = char.replace(removelist[j], '');\n          }\n\n          char = char.trim();\n        }\n      }\n\n      char = char.replace(/[^\\w\\s\\-\\.\\_~]/g, ''); // allowed\n\n      if (opts.remove) char = char.replace(opts.remove, ''); // add flavour\n\n      result += char;\n    }\n\n    result = result.trim();\n    result = result.replace(/[-\\s]+/g, opts.replacement); // convert spaces\n\n    result = result.replace(opts.replacement + \"$\", ''); // remove trailing separator\n\n    if (opts.lower) result = result.toLowerCase();\n    return result;\n  }\n\n  ;\n  slug.defaults = {\n    mode: 'pretty'\n  };\n  slug.multicharmap = slug.defaults.multicharmap = {\n    '<3': 'love',\n    '&&': 'and',\n    '||': 'or',\n    'w/': 'with'\n  }; // https://code.djangoproject.com/browser/django/trunk/django/contrib/admin/media/js/urlify.js\n\n  slug.charmap = slug.defaults.charmap = {\n    // latin\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'A',\n    'Å': 'A',\n    'Æ': 'AE',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'O',\n    'Ő': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'U',\n    'Ű': 'U',\n    'Ý': 'Y',\n    'Þ': 'TH',\n    'ß': 'ss',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'a',\n    'å': 'a',\n    'æ': 'ae',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'o',\n    'ő': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'u',\n    'ű': 'u',\n    'ý': 'y',\n    'þ': 'th',\n    'ÿ': 'y',\n    'ẞ': 'SS',\n    // greek\n    'α': 'a',\n    'β': 'b',\n    'γ': 'g',\n    'δ': 'd',\n    'ε': 'e',\n    'ζ': 'z',\n    'η': 'h',\n    'θ': '8',\n    'ι': 'i',\n    'κ': 'k',\n    'λ': 'l',\n    'μ': 'm',\n    'ν': 'n',\n    'ξ': '3',\n    'ο': 'o',\n    'π': 'p',\n    'ρ': 'r',\n    'σ': 's',\n    'τ': 't',\n    'υ': 'y',\n    'φ': 'f',\n    'χ': 'x',\n    'ψ': 'ps',\n    'ω': 'w',\n    'ά': 'a',\n    'έ': 'e',\n    'ί': 'i',\n    'ό': 'o',\n    'ύ': 'y',\n    'ή': 'h',\n    'ώ': 'w',\n    'ς': 's',\n    'ϊ': 'i',\n    'ΰ': 'y',\n    'ϋ': 'y',\n    'ΐ': 'i',\n    'Α': 'A',\n    'Β': 'B',\n    'Γ': 'G',\n    'Δ': 'D',\n    'Ε': 'E',\n    'Ζ': 'Z',\n    'Η': 'H',\n    'Θ': '8',\n    'Ι': 'I',\n    'Κ': 'K',\n    'Λ': 'L',\n    'Μ': 'M',\n    'Ν': 'N',\n    'Ξ': '3',\n    'Ο': 'O',\n    'Π': 'P',\n    'Ρ': 'R',\n    'Σ': 'S',\n    'Τ': 'T',\n    'Υ': 'Y',\n    'Φ': 'F',\n    'Χ': 'X',\n    'Ψ': 'PS',\n    'Ω': 'W',\n    'Ά': 'A',\n    'Έ': 'E',\n    'Ί': 'I',\n    'Ό': 'O',\n    'Ύ': 'Y',\n    'Ή': 'H',\n    'Ώ': 'W',\n    'Ϊ': 'I',\n    'Ϋ': 'Y',\n    // turkish\n    'ş': 's',\n    'Ş': 'S',\n    'ı': 'i',\n    'İ': 'I',\n    'ğ': 'g',\n    'Ğ': 'G',\n    // russian\n    'а': 'a',\n    'б': 'b',\n    'в': 'v',\n    'г': 'g',\n    'д': 'd',\n    'е': 'e',\n    'ё': 'yo',\n    'ж': 'zh',\n    'з': 'z',\n    'и': 'i',\n    'й': 'j',\n    'к': 'k',\n    'л': 'l',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'p',\n    'р': 'r',\n    'с': 's',\n    'т': 't',\n    'у': 'u',\n    'ф': 'f',\n    'х': 'h',\n    'ц': 'c',\n    'ч': 'ch',\n    'ш': 'sh',\n    'щ': 'sh',\n    'ъ': 'u',\n    'ы': 'y',\n    'ь': '',\n    'э': 'e',\n    'ю': 'yu',\n    'я': 'ya',\n    'А': 'A',\n    'Б': 'B',\n    'В': 'V',\n    'Г': 'G',\n    'Д': 'D',\n    'Е': 'E',\n    'Ё': 'Yo',\n    'Ж': 'Zh',\n    'З': 'Z',\n    'И': 'I',\n    'Й': 'J',\n    'К': 'K',\n    'Л': 'L',\n    'М': 'M',\n    'Н': 'N',\n    'О': 'O',\n    'П': 'P',\n    'Р': 'R',\n    'С': 'S',\n    'Т': 'T',\n    'У': 'U',\n    'Ф': 'F',\n    'Х': 'H',\n    'Ц': 'C',\n    'Ч': 'Ch',\n    'Ш': 'Sh',\n    'Щ': 'Sh',\n    'Ъ': 'U',\n    'Ы': 'Y',\n    'Ь': '',\n    'Э': 'E',\n    'Ю': 'Yu',\n    'Я': 'Ya',\n    // ukranian\n    'Є': 'Ye',\n    'І': 'I',\n    'Ї': 'Yi',\n    'Ґ': 'G',\n    'є': 'ye',\n    'і': 'i',\n    'ї': 'yi',\n    'ґ': 'g',\n    // czech\n    'č': 'c',\n    'ď': 'd',\n    'ě': 'e',\n    'ň': 'n',\n    'ř': 'r',\n    'š': 's',\n    'ť': 't',\n    'ů': 'u',\n    'ž': 'z',\n    'Č': 'C',\n    'Ď': 'D',\n    'Ě': 'E',\n    'Ň': 'N',\n    'Ř': 'R',\n    'Š': 'S',\n    'Ť': 'T',\n    'Ů': 'U',\n    'Ž': 'Z',\n    // polish\n    'ą': 'a',\n    'ć': 'c',\n    'ę': 'e',\n    'ł': 'l',\n    'ń': 'n',\n    'ś': 's',\n    'ź': 'z',\n    'ż': 'z',\n    'Ą': 'A',\n    'Ć': 'C',\n    'Ę': 'E',\n    'Ł': 'L',\n    'Ń': 'N',\n    'Ś': 'S',\n    'Ź': 'Z',\n    'Ż': 'Z',\n    // latvian\n    'ā': 'a',\n    'ē': 'e',\n    'ģ': 'g',\n    'ī': 'i',\n    'ķ': 'k',\n    'ļ': 'l',\n    'ņ': 'n',\n    'ū': 'u',\n    'Ā': 'A',\n    'Ē': 'E',\n    'Ģ': 'G',\n    'Ī': 'I',\n    'Ķ': 'K',\n    'Ļ': 'L',\n    'Ņ': 'N',\n    'Ū': 'U',\n    // arabic\n    'أ': 'a',\n    'ب': 'b',\n    'ت': 't',\n    'ث': 'th',\n    'ج': 'g',\n    'ح': 'h',\n    'خ': 'kh',\n    'د': 'd',\n    'ذ': 'th',\n    'ر': 'r',\n    'ز': 'z',\n    'س': 's',\n    'ش': 'sh',\n    'ص': 's',\n    'ض': 'd',\n    'ط': 't',\n    'ظ': 'th',\n    'ع': 'aa',\n    'غ': 'gh',\n    'ف': 'f',\n    'ق': 'k',\n    'ك': 'k',\n    'ل': 'l',\n    'م': 'm',\n    'ن': 'n',\n    'ه': 'h',\n    'و': 'o',\n    'ي': 'y',\n    // lithuanian\n    'ė': 'e',\n    'į': 'i',\n    'ų': 'u',\n    'Ė': 'E',\n    'Į': 'I',\n    'Ų': 'U',\n    // romanian\n    'ț': 't',\n    'Ț': 'T',\n    'ţ': 't',\n    'Ţ': 'T',\n    'ș': 's',\n    'Ș': 'S',\n    'ă': 'a',\n    'Ă': 'A',\n    // vietnamese\n    'Ạ': 'A',\n    'Ả': 'A',\n    'Ầ': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ằ': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ẹ': 'E',\n    'Ẻ': 'E',\n    'Ẽ': 'E',\n    'Ề': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ị': 'I',\n    'Ỉ': 'I',\n    'Ĩ': 'I',\n    'Ọ': 'O',\n    'Ỏ': 'O',\n    'Ồ': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ơ': 'O',\n    'Ờ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ụ': 'U',\n    'Ủ': 'U',\n    'Ũ': 'U',\n    'Ư': 'U',\n    'Ừ': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ỳ': 'Y',\n    'Ỵ': 'Y',\n    'Ỷ': 'Y',\n    'Ỹ': 'Y',\n    'Đ': 'D',\n    'ạ': 'a',\n    'ả': 'a',\n    'ầ': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ằ': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ẹ': 'e',\n    'ẻ': 'e',\n    'ẽ': 'e',\n    'ề': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ị': 'i',\n    'ỉ': 'i',\n    'ĩ': 'i',\n    'ọ': 'o',\n    'ỏ': 'o',\n    'ồ': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ơ': 'o',\n    'ờ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ụ': 'u',\n    'ủ': 'u',\n    'ũ': 'u',\n    'ư': 'u',\n    'ừ': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ỳ': 'y',\n    'ỵ': 'y',\n    'ỷ': 'y',\n    'ỹ': 'y',\n    'đ': 'd',\n    // currency\n    '€': 'euro',\n    '₢': 'cruzeiro',\n    '₣': 'french franc',\n    '£': 'pound',\n    '₤': 'lira',\n    '₥': 'mill',\n    '₦': 'naira',\n    '₧': 'peseta',\n    '₨': 'rupee',\n    '₩': 'won',\n    '₪': 'new shequel',\n    '₫': 'dong',\n    '₭': 'kip',\n    '₮': 'tugrik',\n    '₯': 'drachma',\n    '₰': 'penny',\n    '₱': 'peso',\n    '₲': 'guarani',\n    '₳': 'austral',\n    '₴': 'hryvnia',\n    '₵': 'cedi',\n    '¢': 'cent',\n    '¥': 'yen',\n    '元': 'yuan',\n    '円': 'yen',\n    '﷼': 'rial',\n    '₠': 'ecu',\n    '¤': 'currency',\n    '฿': 'baht',\n    \"$\": 'dollar',\n    '₹': 'indian rupee',\n    // symbols\n    '©': '(c)',\n    'œ': 'oe',\n    'Œ': 'OE',\n    '∑': 'sum',\n    '®': '(r)',\n    '†': '+',\n    '“': '\"',\n    '”': '\"',\n    '‘': \"'\",\n    '’': \"'\",\n    '∂': 'd',\n    'ƒ': 'f',\n    '™': 'tm',\n    '℠': 'sm',\n    '…': '...',\n    '˚': 'o',\n    'º': 'o',\n    'ª': 'a',\n    '•': '*',\n    '∆': 'delta',\n    '∞': 'infinity',\n    '♥': 'love',\n    '&': 'and',\n    '|': 'or',\n    '<': 'less',\n    '>': 'greater'\n  };\n  slug.defaults.modes = {\n    rfc3986: {\n      replacement: '-',\n      symbols: true,\n      remove: null,\n      lower: true,\n      charmap: slug.defaults.charmap,\n      multicharmap: slug.defaults.multicharmap\n    },\n    pretty: {\n      replacement: '-',\n      symbols: true,\n      remove: /[.]/g,\n      lower: false,\n      charmap: slug.defaults.charmap,\n      multicharmap: slug.defaults.multicharmap\n    }\n  }; // Be compatible with different module systems\n\n  if (typeof define !== 'undefined' && define.amd) {\n    // AMD\n    // dont load symbols table in the browser\n    for (var key in slug.defaults.modes) {\n      if (!slug.defaults.modes.hasOwnProperty(key)) continue;\n      slug.defaults.modes[key].symbols = false;\n    }\n\n    define([], function () {\n      return slug;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    // CommonJS\n    symbols(); // preload symbols table\n\n    module.exports = slug;\n  } else {\n    // Script tag\n    // dont load symbols table in the browser\n    for (var key in slug.defaults.modes) {\n      if (!slug.defaults.modes.hasOwnProperty(key)) continue;\n      slug.defaults.modes[key].symbols = false;\n    }\n\n    root.slug = slug;\n  }\n})(this);","map":null,"metadata":{},"sourceType":"script"}