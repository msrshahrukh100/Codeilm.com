{"ast":null,"code":"var _classCallCheck = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar Maybe = function Maybe(x) {\n  \"use strict\";\n\n  var _this = this;\n\n  _classCallCheck(this, Maybe);\n\n  this._ = x;\n  this.nil = x === undefined; // ----- Functor Maybe\n\n  this.map = function (fn) {\n    return _this.nil ? _this : Maybe.of(fn(x));\n  };\n\n  this.join = function () {\n    return _this.nil ? _this : x;\n  }; // ----- Monad Maybe\n\n\n  this.chain = function (fn) {\n    return _this.map(fn).join();\n  };\n} // inspect() { return `Maybe(${this._}`; }\n// ----- Applicative Maybe\n// ap(f) { return this.nil ? this : f.map(this._) }\n// ----- Traversable Maybe\n// sequence(of) { this.traverse(of, identity) }\n// traverse(of, fn) { return this.nil ? of(this) : fn(this._).map(Maybe.of) }\n; // ----- Pointed Maybe\n\n\nMaybe.of = function (x) {\n  return new Maybe(x);\n};\n\nvar maybe = function maybe(v) {\n  return function (f) {\n    return function (m) {\n      return m.nil ? v : f(m._);\n    };\n  };\n};\n\nmodule.exports = {\n  Maybe: Maybe,\n  maybe: maybe\n};","map":null,"metadata":{},"sourceType":"script"}