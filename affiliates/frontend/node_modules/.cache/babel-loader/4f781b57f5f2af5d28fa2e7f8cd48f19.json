{"ast":null,"code":"var _possibleConstructorReturn = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _classCallCheck = require(\"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar Either = function Either(x) {\n  \"use strict\";\n\n  _classCallCheck(this, Either);\n\n  this._ = x;\n};\n\nvar Left =\n/*#__PURE__*/\nfunction (_Either) {\n  \"use strict\";\n\n  _inherits(Left, _Either);\n\n  function Left(x) {\n    var _this;\n\n    _classCallCheck(this, Left);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Left).call(this, x));\n    _this.isLeft = true;\n    _this.isRight = false; // ----- Functor (Either a)\n\n    _this.map = function () {\n      return _assertThisInitialized(_assertThisInitialized(_this));\n    };\n\n    _this.join = _this.map; // ----- Monad (Either a)\n\n    _this.chain = function () {\n      return _assertThisInitialized(_assertThisInitialized(_this));\n    };\n\n    return _this;\n  } // ----- Applicative (Either a)\n  // ap() { return this }\n  // inspect() { return `Left(${this._})` }\n  // ----- Traversable (Either a)\n  // sequence(of) { return of(this) }\n  // traverse(of, fn) { return of(this) }\n\n\n  return Left;\n}(Either);\n\nvar Right =\n/*#__PURE__*/\nfunction (_Either2) {\n  \"use strict\";\n\n  _inherits(Right, _Either2);\n\n  function Right(x) {\n    var _this2;\n\n    _classCallCheck(this, Right);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Right).call(this, x));\n    _this2._ = x;\n    _this2.isLeft = false;\n    _this2.isRight = true; // ----- Functor (Either a)\n\n    _this2.map = function (fn) {\n      return Either.of(fn(x));\n    };\n\n    _this2.join = function () {\n      return x;\n    }; // ----- Monad (Either a)\n\n\n    _this2.chain = function (fn) {\n      return fn(x);\n    };\n\n    return _this2;\n  } // ----- Applicative (Either a)\n  // ap(f) { return f.map(this._) }\n  // inspect() { return `Right(${this._})` }\n  // ----- Traversable (Either a)\n  // sequence(of) { return this.traverse(of, identity) }\n  // traverse(of, fn) { fn(this._).map(Either.of) }\n\n\n  return Right;\n}(Either); // ----- Pointed (Either a)\n\n\nEither.of = function (x) {\n  return new Right(x);\n};\n\nvar either = function either(f, g) {\n  return function (e) {\n    return e.isLeft ? f(e._) : g(e._);\n  };\n};\n\nvar left = function left(x) {\n  return new Left(x);\n};\n\nmodule.exports = {\n  Either: Either,\n  either: either,\n  left: left\n};","map":null,"metadata":{},"sourceType":"script"}