{"ast":null,"code":"var _jsxFileName = \"/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport repoDataReducer from './store/reducers/repoDataReducer';\nimport authReducer from './store/reducers/authReducer';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport ReactGA from 'react-ga';\nvar debug = window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\";\nReactGA.initialize('UA-142472289-1', {\n  debug: debug\n});\nvar history = createBrowserHistory();\nhistory.listen(function (location) {\n  ReactGA.pageview(location.pathname + location.search);\n});\nReactGA.pageview(\"/stories\");\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar rootReducer = combineReducers({\n  rdReducer: repoDataReducer,\n  aReducer: authReducer\n});\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nvar app = React.createElement(Router, {\n  basename: \"/\",\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/shahrukh/Code/projects/allywith/Codeilm.com/affiliates/frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Router","createStore","combineReducers","applyMiddleware","compose","Provider","repoDataReducer","authReducer","thunk","createBrowserHistory","ReactGA","debug","window","location","hostname","initialize","history","listen","pageview","pathname","search","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","rdReducer","aReducer","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,IAAMC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAA7B,IAA4CF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAAvF;AAEAJ,OAAO,CAACK,UAAR,CAAmB,gBAAnB,EAAqC;AAACJ,EAAAA,KAAK,EAAEA;AAAR,CAArC;AAEA,IAAMK,OAAO,GAAGP,oBAAoB,EAApC;AAEAO,OAAO,CAACC,MAAR,CAAe,UAAUJ,QAAV,EAAoB;AACjCH,EAAAA,OAAO,CAACQ,QAAR,CAAiBL,QAAQ,CAACM,QAAT,GAAoBN,QAAQ,CAACO,MAA9C;AACD,CAFD;AAGAV,OAAO,CAACQ,QAAR,CAAiB,UAAjB;AAGA,IAAMG,gBAAgB,GAAGT,MAAM,CAACU,oCAAP,IAA+ClB,OAAxE;AAEA,IAAMmB,WAAW,GAAGrB,eAAe,CAAC;AAClCsB,EAAAA,SAAS,EAAElB,eADuB;AAElCmB,EAAAA,QAAQ,EAAElB;AAFwB,CAAD,CAAnC;AAOA,IAAMmB,KAAK,GAAGzB,WAAW,CAACsB,WAAD,EAAcF,gBAAgB,CACnDlB,eAAe,CAACK,KAAD,CADoC,CAA9B,CAAzB;AAKA,IAAMmB,GAAG,GACP,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAC,GAAjB;AAAqB,EAAA,OAAO,EAAEX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AASAnB,QAAQ,CAAC+B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACA/B,aAAa,CAACgC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'\nimport repoDataReducer from './store/reducers/repoDataReducer'\nimport authReducer from './store/reducers/authReducer'\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history'\nimport ReactGA from 'react-ga';\n\nconst debug = window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"\n\nReactGA.initialize('UA-142472289-1', {debug: debug});\n\nconst history = createBrowserHistory();\n\nhistory.listen(function (location) {\n  ReactGA.pageview(location.pathname + location.search)\n})\nReactGA.pageview(\"/stories\")\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  rdReducer: repoDataReducer,\n  aReducer: authReducer\n})\n\n\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n  <Router basename='/' history={history}>\n    <App/>\n  </Router>\n)\n\n\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}