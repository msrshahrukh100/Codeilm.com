{"ast":null,"code":"import _classCallCheck from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/containers/TutorialMetrics/TutorialMetrics.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport axios from '../../lovecodeaxios';\nimport NumberFormat from 'react-number-format';\nimport Map from '../../components/Map/Map';\nimport BasicMetaTags from '../../components/MetaTags/BasicMetaTags';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport ReactGA from 'react-ga';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      marginTop: 50\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center'\n    }\n  };\n};\n\nvar ViewsPanel = function ViewsPanel(props) {\n  var classes = props.classes;\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: '3em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(NumberFormat, {\n    value: props.data ? props.data.length : 0,\n    displayType: 'text',\n    thousandSeparator: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.title), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.data ? props.data.slice(0, 3).filter(function (item) {\n    return item.user !== null;\n  }).map(function (item, index) {\n    var avatarSrc = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ? item.user.user_profile_pic : item.user_profile_pic;\n    var primaryText = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ? item.user.full_name : item.full_name;\n    var secondaryText = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ? new Date(item.created_at).toLocaleDateString(\"en-US\", {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }) : item.intro;\n    return React.createElement(ListItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: primaryText,\n      src: avatarSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: primaryText,\n      secondary: secondaryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }) : null)));\n};\n\nvar TutorialMetrics =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TutorialMetrics, _React$Component);\n\n  function TutorialMetrics(props) {\n    var _this;\n\n    _classCallCheck(this, TutorialMetrics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TutorialMetrics).call(this, props));\n    var tutorialId = _this.props.match.params.tutorialId;\n    _this.state = {\n      tutorialId: tutorialId,\n      allViews: [],\n      distinctViews: [],\n      likeData: [],\n      loggedInViewData: []\n    };\n    return _this;\n  }\n\n  _createClass(TutorialMetrics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ReactGA.event({\n        category: 'User',\n        action: 'Visited metrics page',\n        label: 'VISITED_METRICS_PAGE'\n      });\n      axios.get('/tutorials/' + this.state.tutorialId + '/metrics').then(function (response) {\n        if (response) {\n          var data = response.data;\n\n          _this2.setState({\n            loggedInViewData: data.logged_in_view_data,\n            allViews: data.all_views,\n            distinctViews: data.distinct_viewers,\n            likeData: data.like_data\n          });\n        }\n      }).catch(function (error) {\n        _this2.setState({\n          error: error,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var mapData = this.state.allViews ? this.state.allViews.filter(function (item) {\n        return item.request_ip_info !== null;\n      }).map(function (item) {\n        return {\n          city: item.request_ip_info.city,\n          coordinates: [item.request_ip_info.longitude, item.request_ip_info.latitude]\n        };\n      }) : null;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(BasicMetaTags, {\n        title: \"Posts on Codeilm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Container, {\n        maxWidth: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ViewsPanel, Object.assign({\n        type: \"POST_VIEWS\",\n        data: this.state.loggedInViewData,\n        title: this.state.loggedInViewData.length > 1 ? \"Post Views\" : \"Post View\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(ViewsPanel, Object.assign({\n        type: \"DISTINCT_VIEWS\",\n        data: this.state.distinctViews,\n        title: this.state.distinctViews.length > 1 ? \"Distinct Views\" : \"Distinct View\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(ViewsPanel, Object.assign({\n        type: \"LIKES\",\n        data: this.state.likeData,\n        title: this.state.likeData.length > 1 ? \"Likes\" : \"Like\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Your readers around the world\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Map, {\n        mapData: mapData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TutorialMetrics;\n}(React.Component);\n\nTutorialMetrics.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(withErrorHandler(TutorialMetrics, axios, 'circular'));","map":{"version":3,"sources":["/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/containers/TutorialMetrics/TutorialMetrics.js"],"names":["React","PropTypes","withStyles","Paper","Grid","Container","List","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","axios","NumberFormat","Map","BasicMetaTags","withErrorHandler","ReactGA","styles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","ViewsPanel","props","classes","fontSize","data","length","title","slice","filter","item","user","map","index","avatarSrc","type","user_profile_pic","primaryText","full_name","secondaryText","Date","created_at","toLocaleDateString","weekday","year","month","day","intro","TutorialMetrics","tutorialId","match","params","state","allViews","distinctViews","likeData","loggedInViewData","event","category","action","label","get","then","response","setState","logged_in_view_data","all_views","distinct_viewers","like_data","catch","error","loading","mapData","request_ip_info","city","coordinates","longitude","latitude","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport axios from '../../lovecodeaxios'\nimport NumberFormat from 'react-number-format';\nimport Map from '../../components/Map/Map'\nimport BasicMetaTags from '../../components/MetaTags/BasicMetaTags'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport ReactGA from 'react-ga';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 50\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n});\n\nconst ViewsPanel = (props) => {\n  const { classes } = props;\n  return (\n    <Grid item xs={12} sm={4}>\n    <Paper className={classes.paper}>\n    <h2 style={{fontSize: '3em'}}>\n    <NumberFormat\n      value={props.data ? props.data.length : 0}\n      displayType={'text'}\n      thousandSeparator={true}\n    />\n    </h2>\n    <Typography variant=\"h6\" className={classes.title}>\n      {props.title}\n    </Typography>\n    <List>\n    {props.data ? props.data.slice(0,3).filter(item => item.user !== null).map((item, index) => {\n\n      const avatarSrc = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ?\n        item.user.user_profile_pic : item.user_profile_pic\n      const primaryText = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ?\n        item.user.full_name : item.full_name\n      const secondaryText = props.type === \"POST_VIEWS\" || props.type === \"LIKES\" ?\n        new Date(item.created_at).toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })\n        : item.intro\n\n      return (\n        <ListItem key={index}>\n        <ListItemAvatar>\n        <Avatar alt={primaryText} src={avatarSrc} />\n        </ListItemAvatar>\n        <ListItemText\n        primary={primaryText}\n        secondary={secondaryText}\n        />\n        </ListItem>\n\n      )\n    })\n  : null}\n    </List>\n    </Paper>\n    </Grid>\n  )\n\n}\n\nclass TutorialMetrics extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    const { tutorialId } = this.props.match.params;\n\n    this.state = {\n      tutorialId: tutorialId,\n      allViews: [],\n      distinctViews: [],\n      likeData: [],\n      loggedInViewData: []\n    }\n  }\n\n  componentDidMount() {\n    ReactGA.event({\n      category: 'User',\n      action: 'Visited metrics page',\n      label: 'VISITED_METRICS_PAGE',\n    });\n\n    axios.get('/tutorials/' + this.state.tutorialId + '/metrics')\n      .then(response => {\n        if(response) {\n          const data = response.data\n          this.setState({\n            loggedInViewData: data.logged_in_view_data,\n            allViews: data.all_views,\n            distinctViews: data.distinct_viewers,\n            likeData: data.like_data\n          })\n        }\n\n      })\n      .catch(error => {\n        this.setState({\n          error: error,\n          loading: false\n        })\n      })\n\n\n\n  }\n  render() {\n    const { classes } = this.props;\n    const mapData = this.state.allViews ? this.state.allViews.filter(item => item.request_ip_info !== null).map(item => {\n      return {\n        city: item.request_ip_info.city,\n        coordinates: [item.request_ip_info.longitude, item.request_ip_info.latitude]\n      }\n    }) : null;\n    return (\n      <div className={classes.root}>\n      <BasicMetaTags\n        title=\"Posts on Codeilm\"\n      />\n      <Container maxWidth=\"lg\">\n      <Grid container spacing={3}>\n        <ViewsPanel type=\"POST_VIEWS\" data={this.state.loggedInViewData} title={this.state.loggedInViewData.length > 1 ? \"Post Views\" : \"Post View\"} {...this.props}/>\n        <ViewsPanel type=\"DISTINCT_VIEWS\" data={this.state.distinctViews} title={this.state.distinctViews.length > 1 ? \"Distinct Views\" : \"Distinct View\"} {...this.props}/>\n        <ViewsPanel type=\"LIKES\" data={this.state.likeData} title={this.state.likeData.length > 1 ? \"Likes\" : \"Like\"} {...this.props}/>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Your readers around the world\n            </Typography>\n            <br/>\n            <Map mapData={mapData} />\n          </Paper>\n        </Grid>\n      </Grid>\n      </Container>\n      </div>\n    );\n  }\n}\n\nTutorialMetrics.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(withErrorHandler(TutorialMetrics, axios, 'circular'));\n"]},"metadata":{},"sourceType":"module"}