{"ast":null,"code":"import _defineProperty from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/components/TutorialPage/TutorialPage.js\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Embed from '../CarbonCode/embed';\nimport YouTube from 'react-youtube';\nimport './tutorialPage.css';\nimport Container from '@material-ui/core/Container';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    mainContent: _defineProperty({\n      textAlign: 'justify',\n      wordWrap: 'break-word',\n      marginLeft: '8px',\n      marginRight: '8px',\n      fontSize: '21px',\n      lineHeight: '32px'\n    }, theme.breakpoints.down('sm'), {\n      fontSize: '20px',\n      lineHeight: '30px'\n    })\n  };\n};\n\nvar renderers = {\n  code: function code(props) {\n    return React.createElement(Embed, {\n      code: props.value,\n      language: props.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  },\n  image: function image(props) {\n    return React.createElement(\"img\", Object.assign({}, props, {\n      className: \"tutorial-image\",\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'block',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  },\n  link: function link(props) {\n    if (props.children[0].props.value === \"YOUTUBE\") {\n      var opts = {\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          rel: 0,\n          iv_load_policy: 3,\n          loop: 1\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"videoWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(YouTube, {\n        videoId: props.href,\n        opts: opts,\n        className: \"something\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"a\", Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n};\n\nvar tutorialPage = function tutorialPage(props) {\n  var classes = props.classes;\n  var title = props.page ? props.page.title : null;\n  var content = props.page ? React.createElement(ReactMarkdown, {\n    source: props.page.content,\n    renderers: renderers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : null;\n  var widthConstraint = isWidthDown('sm', props.width);\n  var shownContent = content ? content : props.lastPage;\n  var mainContent = null;\n\n  if (widthConstraint) {\n    mainContent = shownContent;\n  } else {\n    mainContent = React.createElement(Container, {\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, shownContent);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: classes.mainContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, mainContent));\n};\n\nexport default withWidth()(withStyles(styles)(tutorialPage));","map":{"version":3,"sources":["/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/components/TutorialPage/TutorialPage.js"],"names":["React","ReactMarkdown","Embed","YouTube","Container","withWidth","isWidthDown","withStyles","styles","theme","mainContent","textAlign","wordWrap","marginLeft","marginRight","fontSize","lineHeight","breakpoints","down","renderers","code","props","value","language","image","display","width","link","children","opts","playerVars","rel","iv_load_policy","loop","href","tutorialPage","classes","title","page","content","widthConstraint","shownContent","lastPage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Embed from '../CarbonCode/embed'\nimport YouTube from 'react-youtube';\nimport './tutorialPage.css'\nimport Container from '@material-ui/core/Container';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n  mainContent : {\n    textAlign: 'justify',\n    wordWrap: 'break-word',\n    marginLeft: '8px',\n    marginRight: '8px',\n    fontSize: '21px',\n    lineHeight: '32px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '20px',\n      lineHeight: '30px',\n    }\n  }\n});\n\nconst renderers: ReactMarkdown.Renderers = {\n    code: (props: string) => {\n      return (\n        <Embed code={props.value} language={props.language} />\n      )\n    },\n    image: props => {\n      return <img {...props} className=\"tutorial-image\" style={{marginLeft: 'auto', marginRight: 'auto', display: 'block', width: '100%'}} />\n    },\n    link: (props) => {\n      if(props.children[0].props.value === \"YOUTUBE\") {\n        const opts = {\n          playerVars: { // https://developers.google.com/youtube/player_parameters\n            rel: 0,\n            iv_load_policy: 3,\n            loop: 1\n          }\n        };\n\n        return (\n          <div className=\"videoWrapper\">\n            <YouTube\n              videoId={props.href}\n              opts={opts}\n              className={\"something\"}\n            />\n          </div>\n        )\n      }\n      return (\n        <a {...props} />\n      )\n    }\n};\n\nconst tutorialPage = (props) => {\n  const { classes } = props\n  const title = props.page ? props.page.title : null\n  const content = props.page ? <ReactMarkdown\n    source={props.page.content}\n    renderers={renderers} /> : null\n\n  const widthConstraint = isWidthDown('sm', props.width)\n  const shownContent = content ? content : props.lastPage\n  let mainContent = null\n  if (widthConstraint) {\n    mainContent = shownContent\n  }\n  else {\n    mainContent = <Container maxWidth=\"md\">{shownContent}</Container>\n  }\n  return (\n    <>\n      <h2>{title}</h2>\n      <div className={classes.mainContent}>\n        {mainContent}\n      </div>\n    </>\n  )\n}\n\nexport default withWidth()(withStyles(styles)(tutorialPage))\n"]},"metadata":{},"sourceType":"module"}