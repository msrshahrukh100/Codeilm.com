{"ast":null,"code":"import _classCallCheck from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/containers/CommitToGithub/CommitToGithub.js\";\nimport React from 'react';\nimport axios from '../../lovecodeaxios';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Fab from '@material-ui/core/Fab';\nimport { FaGithub } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularPreloader from '../../components/UI/SkeletonLoaders/CircularPreloader';\nimport getCookie from '../../utils/getCookie';\nimport Snackbar from '../../components/UI/Snackbar/Snackbar';\n\nvar styles = function styles(theme) {\n  return {\n    margin: {\n      margin: theme.spacing(),\n      textTransform: 'none'\n    },\n    extendedIcon: {\n      marginRight: theme.spacing()\n    }\n  };\n};\n\nvar CommitToGithub =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommitToGithub, _React$Component);\n\n  function CommitToGithub() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommitToGithub);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommitToGithub)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      commitedSuccessfully: false,\n      error: null\n    };\n\n    _this.commitFile = function () {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(_this.state);\n      var csrftoken = getCookie('csrftoken');\n      var postData = {\n        message: _this.props.commitMessage,\n        content: _this.props.content,\n        branch: _this.props.branch,\n        repo_name: _this.props.repoName,\n        sha: _this.props.sha\n      };\n      axios.defaults.headers.common['X-CSRFToken'] = csrftoken;\n      axios.post('/commit/learn', postData).then(function (response) {\n        console.log(response.status);\n\n        if (response.status == 200 || response.status == 201) {\n          _this.setState({\n            loading: false,\n            commitedSuccessfully: true\n          }, _this.props.callback ? function () {\n            return setTimeout(function () {\n              return _this.props.callback();\n            }, 5000);\n          } : null);\n        } else {\n          _this.setState({\n            loading: false,\n            error: response.data.message\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        commitedSuccessfully: false,\n        error: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommitToGithub, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(Snackbar, {\n        open: this.state.commitedSuccessfully,\n        onCloseHandler: this.handleClose,\n        type: \"success\",\n        text: \"Successfully commited learn.md file to \" + this.props.repoName + \" to the branch \" + this.props.branch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        open: this.state.error ? true : false,\n        onCloseHandler: this.handleClose,\n        type: \"error\",\n        text: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        variant: \"extended\",\n        onClick: this.commitFile,\n        disabled: this.state.loading,\n        size: \"medium\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.margin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(IconContext.Provider, {\n        value: {\n          size: '2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FaGithub, {\n        className: classes.extendedIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), \"Commit on GitHub\"), this.state.loading ? React.createElement(CircularPreloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return CommitToGithub;\n}(React.Component);\n\nexport default withErrorHandler(withStyles(styles)(CommitToGithub), axios);","map":{"version":3,"sources":["/home/shahrukh/Code/projects/allywith/Codeilm.com/lovecode/lovecodefrontend/lovecode/src/containers/CommitToGithub/CommitToGithub.js"],"names":["React","axios","withErrorHandler","Fab","FaGithub","IconContext","withStyles","CircularPreloader","getCookie","Snackbar","styles","theme","margin","spacing","textTransform","extendedIcon","marginRight","CommitToGithub","state","loading","commitedSuccessfully","error","commitFile","setState","console","log","csrftoken","postData","message","props","commitMessage","content","branch","repo_name","repoName","sha","defaults","headers","common","post","then","response","status","callback","setTimeout","data","catch","handleClose","event","reason","classes","wrapper","size","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,uCAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,MAAM,EAAE;AACNA,MAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,EADF;AAENC,MAAAA,aAAa,EAAE;AAFT,KADe;AAKvBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAEL,KAAK,CAACE,OAAN;AADD;AALS,GAAL;AAAA,CAApB;;IAUMI,c;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,oBAAoB,EAAE,KAFhB;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UAMRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE;AAAV,OAAd;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAjB;AACA,UAAMQ,SAAS,GAAGlB,SAAS,CAAC,WAAD,CAA3B;AACA,UAAMmB,QAAQ,GAAG;AACfC,QAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWC,aADL;AAEfC,QAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE,OAFL;AAGfC,QAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWG,MAHJ;AAIfC,QAAAA,SAAS,EAAE,MAAKJ,KAAL,CAAWK,QAJP;AAKfC,QAAAA,GAAG,EAAE,MAAKN,KAAL,CAAWM;AALD,OAAjB;AAOAlC,MAAAA,KAAK,CAACmC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,aAA9B,IAA+CZ,SAA/C;AACAzB,MAAAA,KAAK,CAACsC,IAAN,CAAW,eAAX,EAA4BZ,QAA5B,EACCa,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAQ,CAACC,MAArB;;AACA,YAAGD,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;AACnD,gBAAKnB,QAAL,CAAc;AAACJ,YAAAA,OAAO,EAAE,KAAV;AAAiBC,YAAAA,oBAAoB,EAAE;AAAvC,WAAd,EAA4D,MAAKS,KAAL,CAAWc,QAAX,GAAuB;AAAA,mBAAMC,UAAU,CAAC;AAAA,qBAAM,MAAKf,KAAL,CAAWc,QAAX,EAAN;AAAA,aAAD,EAA8B,IAA9B,CAAhB;AAAA,WAAvB,GAA6E,IAAzI;AACD,SAFD,MAGK;AACH,gBAAKpB,QAAL,CAAc;AAACJ,YAAAA,OAAO,EAAE,KAAV;AAAiBE,YAAAA,KAAK,EAAEoB,QAAQ,CAACI,IAAT,CAAcjB;AAAtC,WAAd;AACD;AACF,OATD,EAUCkB,KAVD,CAUO,UAAAzB,KAAK,EAAI;AACdG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,cAAKE,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAEA;AADK,SAAd;AAGD,OAfD;AAgBD,K;;UAED0B,W,GAAc,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACD,YAAK1B,QAAL,CAAc;AAAEH,QAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAAd;AACD,K;;;;;;;6BAEO;AAAA,UACA6B,OADA,GACY,KAAKrB,KADjB,CACAqB,OADA;AAGR,aACI,0CAEA,oBAAC,QAAD;AACA,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWE,oBADjB;AAEA,QAAA,cAAc,EAAE,KAAK2B,WAFrB;AAGA,QAAA,IAAI,EAAC,SAHL;AAIA,QAAA,IAAI,EAAE,4CAA4C,KAAKlB,KAAL,CAAWK,QAAvD,GAAkE,iBAAlE,GAAsF,KAAKL,KAAL,CAAWG,MAJvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EASA,oBAAC,QAAD;AACA,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWG,KAAX,GAAmB,IAAnB,GAA0B,KADhC;AAEA,QAAA,cAAc,EAAE,KAAK0B,WAFrB;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWG,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,EAgBA;AAAK,QAAA,SAAS,EAAE6B,OAAO,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,OAAO,EAAE,KAAK7B,UAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,OAHvB;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,KAAK,EAAC,SALR;AAME,sBAAW,KANb;AAOE,QAAA,SAAS,EAAE+B,OAAO,CAACtC,MAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEwC,UAAAA,IAAI,EAAE;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEF,OAAO,CAACnC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CATF,qBADF,EAeG,KAAKG,KAAL,CAAWC,OAAX,GAAqB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAA6C,IAfhD,CAhBA,CADJ;AAoCA;;;;EApF2BnB,KAAK,CAACqD,S;;AAuFnC,eAAenD,gBAAgB,CAACI,UAAU,CAACI,MAAD,CAAV,CAAmBO,cAAnB,CAAD,EAAqChB,KAArC,CAA/B","sourcesContent":["import React from 'react'\nimport axios from '../../lovecodeaxios'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport Fab from '@material-ui/core/Fab';\nimport { FaGithub } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularPreloader from '../../components/UI/SkeletonLoaders/CircularPreloader'\nimport getCookie from '../../utils/getCookie'\nimport Snackbar from '../../components/UI/Snackbar/Snackbar'\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing(),\n    textTransform: 'none'\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(),\n  }\n});\n\nclass CommitToGithub extends React.Component {\n\n  state = {\n    loading: false,\n    commitedSuccessfully: false,\n    error: null\n  }\n\n  commitFile = () => {\n    this.setState({loading: true})\n    console.log(this.state);\n    const csrftoken = getCookie('csrftoken');\n    const postData = {\n      message: this.props.commitMessage,\n      content: this.props.content,\n      branch: this.props.branch,\n      repo_name: this.props.repoName,\n      sha: this.props.sha,\n    };\n    axios.defaults.headers.common['X-CSRFToken'] = csrftoken;\n    axios.post('/commit/learn', postData)\n    .then(response => {\n      console.log(response.status);\n      if(response.status == 200 || response.status == 201) {\n        this.setState({loading: false, commitedSuccessfully: true}, this.props.callback ?  () => setTimeout(() => this.props.callback(), 5000) : null)\n      }\n      else {\n        this.setState({loading: false, error: response.data.message})\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        error: error,\n      })\n    })\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ commitedSuccessfully: false, error: null });\n  };\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n      <>\n\n      <Snackbar\n      open={this.state.commitedSuccessfully}\n      onCloseHandler={this.handleClose}\n      type=\"success\"\n      text={\"Successfully commited learn.md file to \" + this.props.repoName + \" to the branch \" + this.props.branch }\n      />\n\n      <Snackbar\n      open={this.state.error ? true : false}\n      onCloseHandler={this.handleClose}\n      type=\"error\"\n      text={this.state.error}\n      />\n\n      <div className={classes.wrapper}>\n        <Fab\n          variant=\"extended\"\n          onClick={this.commitFile}\n          disabled={this.state.loading}\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"Add\"\n          className={classes.margin}\n        >\n          <IconContext.Provider value={{ size: '2em' }}>\n          <FaGithub className={classes.extendedIcon} />\n          </IconContext.Provider>\n          Commit on GitHub\n        </Fab>\n        {this.state.loading ? <CircularPreloader /> : null}\n      </div>\n      </>\n\t\t)\n\t}\n}\n\nexport default withErrorHandler(withStyles(styles)(CommitToGithub), axios)\n"]},"metadata":{},"sourceType":"module"}